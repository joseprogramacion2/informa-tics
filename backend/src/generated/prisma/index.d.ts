
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Rol
 * 
 */
export type Rol = $Result.DefaultSelection<Prisma.$RolPayload>
/**
 * Model Permiso
 * 
 */
export type Permiso = $Result.DefaultSelection<Prisma.$PermisoPayload>
/**
 * Model PermisoPorRol
 * 
 */
export type PermisoPorRol = $Result.DefaultSelection<Prisma.$PermisoPorRolPayload>
/**
 * Model PermisoUsuario
 * ðŸ”¸ NUEVO: join table para permisos directos por usuario
 */
export type PermisoUsuario = $Result.DefaultSelection<Prisma.$PermisoUsuarioPayload>
/**
 * Model PasswordHistory
 * *
 *  * =========================
 *  * PASSWORD HISTORY
 *  * =========================
 */
export type PasswordHistory = $Result.DefaultSelection<Prisma.$PasswordHistoryPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model Platillo
 * 
 */
export type Platillo = $Result.DefaultSelection<Prisma.$PlatilloPayload>
/**
 * Model HistorialModificacion
 * 
 */
export type HistorialModificacion = $Result.DefaultSelection<Prisma.$HistorialModificacionPayload>
/**
 * Model Mesa
 * 
 */
export type Mesa = $Result.DefaultSelection<Prisma.$MesaPayload>
/**
 * Model Reserva
 * 
 */
export type Reserva = $Result.DefaultSelection<Prisma.$ReservaPayload>
/**
 * Model Orden
 * 
 */
export type Orden = $Result.DefaultSelection<Prisma.$OrdenPayload>
/**
 * Model OrdenItem
 * 
 */
export type OrdenItem = $Result.DefaultSelection<Prisma.$OrdenItemPayload>
/**
 * Model CocinaChef
 * 
 */
export type CocinaChef = $Result.DefaultSelection<Prisma.$CocinaChefPayload>
/**
 * Model BarraBartender
 * 
 */
export type BarraBartender = $Result.DefaultSelection<Prisma.$BarraBartenderPayload>
/**
 * Model TicketVenta
 * 
 */
export type TicketVenta = $Result.DefaultSelection<Prisma.$TicketVentaPayload>
/**
 * Model EgresoCaja
 * 
 */
export type EgresoCaja = $Result.DefaultSelection<Prisma.$EgresoCajaPayload>
/**
 * Model PedidoCliente
 * 
 */
export type PedidoCliente = $Result.DefaultSelection<Prisma.$PedidoClientePayload>
/**
 * Model ObservacionEntrega
 * 
 */
export type ObservacionEntrega = $Result.DefaultSelection<Prisma.$ObservacionEntregaPayload>
/**
 * Model PedidoClienteItem
 * 
 */
export type PedidoClienteItem = $Result.DefaultSelection<Prisma.$PedidoClienteItemPayload>
/**
 * Model MeseroNotif
 * 
 */
export type MeseroNotif = $Result.DefaultSelection<Prisma.$MeseroNotifPayload>
/**
 * Model RepartidorNotif
 * 
 */
export type RepartidorNotif = $Result.DefaultSelection<Prisma.$RepartidorNotifPayload>
/**
 * Model CajaTurno
 * 
 */
export type CajaTurno = $Result.DefaultSelection<Prisma.$CajaTurnoPayload>
/**
 * Model CalificacionPedido
 * 
 */
export type CalificacionPedido = $Result.DefaultSelection<Prisma.$CalificacionPedidoPayload>
/**
 * Model Setting
 * 
 */
export type Setting = $Result.DefaultSelection<Prisma.$SettingPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const CategoriaTipo: {
  COMESTIBLE: 'COMESTIBLE',
  BEBIBLE: 'BEBIBLE'
};

export type CategoriaTipo = (typeof CategoriaTipo)[keyof typeof CategoriaTipo]


export const MesaEstado: {
  DISPONIBLE: 'DISPONIBLE',
  OCUPADA: 'OCUPADA',
  RESERVADA: 'RESERVADA'
};

export type MesaEstado = (typeof MesaEstado)[keyof typeof MesaEstado]


export const ReservaEstado: {
  PENDIENTE: 'PENDIENTE',
  CONFIRMADA: 'CONFIRMADA',
  CANCELADA: 'CANCELADA',
  CUMPLIDA: 'CUMPLIDA'
};

export type ReservaEstado = (typeof ReservaEstado)[keyof typeof ReservaEstado]


export const PagoEstado: {
  PENDIENTE: 'PENDIENTE',
  PAGADO: 'PAGADO',
  FALLIDO: 'FALLIDO'
};

export type PagoEstado = (typeof PagoEstado)[keyof typeof PagoEstado]


export const RefundEstado: {
  NO_APLICA: 'NO_APLICA',
  PENDIENTE: 'PENDIENTE',
  PROCESADO: 'PROCESADO',
  RECHAZADO: 'RECHAZADO'
};

export type RefundEstado = (typeof RefundEstado)[keyof typeof RefundEstado]


export const OrdenEstado: {
  EN_ESPERA: 'EN_ESPERA',
  EN_PREPARACION: 'EN_PREPARACION',
  TERMINADA: 'TERMINADA',
  PENDIENTE_PAGO: 'PENDIENTE_PAGO',
  PAGADA: 'PAGADA',
  CANCELADA: 'CANCELADA'
};

export type OrdenEstado = (typeof OrdenEstado)[keyof typeof OrdenEstado]


export const MetodoPago: {
  EFECTIVO: 'EFECTIVO',
  TARJETA: 'TARJETA'
};

export type MetodoPago = (typeof MetodoPago)[keyof typeof MetodoPago]


export const EgresoEstado: {
  PENDIENTE: 'PENDIENTE',
  APROBADO: 'APROBADO',
  RECHAZADO: 'RECHAZADO'
};

export type EgresoEstado = (typeof EgresoEstado)[keyof typeof EgresoEstado]


export const ComprobanteEstado: {
  VALIDO: 'VALIDO',
  ANULADO: 'ANULADO'
};

export type ComprobanteEstado = (typeof ComprobanteEstado)[keyof typeof ComprobanteEstado]


export const TipoEntrega: {
  LOCAL: 'LOCAL',
  DOMICILIO: 'DOMICILIO'
};

export type TipoEntrega = (typeof TipoEntrega)[keyof typeof TipoEntrega]


export const DeliveryStatus: {
  PEND_PREPARACION: 'PEND_PREPARACION',
  EN_PREPARACION: 'EN_PREPARACION',
  LISTO_PARA_ENTREGA: 'LISTO_PARA_ENTREGA',
  LISTO_PARA_RECOGER: 'LISTO_PARA_RECOGER',
  ASIGNADO_A_REPARTIDOR: 'ASIGNADO_A_REPARTIDOR',
  EN_CAMINO: 'EN_CAMINO',
  ENTREGADO: 'ENTREGADO',
  CANCELADO: 'CANCELADO'
};

export type DeliveryStatus = (typeof DeliveryStatus)[keyof typeof DeliveryStatus]


export const CajaTurnoEstado: {
  PENDIENTE: 'PENDIENTE',
  ABIERTA: 'ABIERTA',
  RECHAZADA: 'RECHAZADA',
  CIERRE_PENDIENTE: 'CIERRE_PENDIENTE',
  CERRADA: 'CERRADA'
};

export type CajaTurnoEstado = (typeof CajaTurnoEstado)[keyof typeof CajaTurnoEstado]

}

export type CategoriaTipo = $Enums.CategoriaTipo

export const CategoriaTipo: typeof $Enums.CategoriaTipo

export type MesaEstado = $Enums.MesaEstado

export const MesaEstado: typeof $Enums.MesaEstado

export type ReservaEstado = $Enums.ReservaEstado

export const ReservaEstado: typeof $Enums.ReservaEstado

export type PagoEstado = $Enums.PagoEstado

export const PagoEstado: typeof $Enums.PagoEstado

export type RefundEstado = $Enums.RefundEstado

export const RefundEstado: typeof $Enums.RefundEstado

export type OrdenEstado = $Enums.OrdenEstado

export const OrdenEstado: typeof $Enums.OrdenEstado

export type MetodoPago = $Enums.MetodoPago

export const MetodoPago: typeof $Enums.MetodoPago

export type EgresoEstado = $Enums.EgresoEstado

export const EgresoEstado: typeof $Enums.EgresoEstado

export type ComprobanteEstado = $Enums.ComprobanteEstado

export const ComprobanteEstado: typeof $Enums.ComprobanteEstado

export type TipoEntrega = $Enums.TipoEntrega

export const TipoEntrega: typeof $Enums.TipoEntrega

export type DeliveryStatus = $Enums.DeliveryStatus

export const DeliveryStatus: typeof $Enums.DeliveryStatus

export type CajaTurnoEstado = $Enums.CajaTurnoEstado

export const CajaTurnoEstado: typeof $Enums.CajaTurnoEstado

/**
 * ##  Prisma Client Ê²Ë¢
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client Ê²Ë¢
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol`: Exposes CRUD operations for the **Rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rols
    * const rols = await prisma.rol.findMany()
    * ```
    */
  get rol(): Prisma.RolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **Permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.PermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permisoPorRol`: Exposes CRUD operations for the **PermisoPorRol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PermisoPorRols
    * const permisoPorRols = await prisma.permisoPorRol.findMany()
    * ```
    */
  get permisoPorRol(): Prisma.PermisoPorRolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permisoUsuario`: Exposes CRUD operations for the **PermisoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PermisoUsuarios
    * const permisoUsuarios = await prisma.permisoUsuario.findMany()
    * ```
    */
  get permisoUsuario(): Prisma.PermisoUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordHistory`: Exposes CRUD operations for the **PasswordHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordHistories
    * const passwordHistories = await prisma.passwordHistory.findMany()
    * ```
    */
  get passwordHistory(): Prisma.PasswordHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.platillo`: Exposes CRUD operations for the **Platillo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Platillos
    * const platillos = await prisma.platillo.findMany()
    * ```
    */
  get platillo(): Prisma.PlatilloDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historialModificacion`: Exposes CRUD operations for the **HistorialModificacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialModificacions
    * const historialModificacions = await prisma.historialModificacion.findMany()
    * ```
    */
  get historialModificacion(): Prisma.HistorialModificacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mesa`: Exposes CRUD operations for the **Mesa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mesas
    * const mesas = await prisma.mesa.findMany()
    * ```
    */
  get mesa(): Prisma.MesaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reserva`: Exposes CRUD operations for the **Reserva** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reserva.findMany()
    * ```
    */
  get reserva(): Prisma.ReservaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orden`: Exposes CRUD operations for the **Orden** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ordens
    * const ordens = await prisma.orden.findMany()
    * ```
    */
  get orden(): Prisma.OrdenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ordenItem`: Exposes CRUD operations for the **OrdenItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrdenItems
    * const ordenItems = await prisma.ordenItem.findMany()
    * ```
    */
  get ordenItem(): Prisma.OrdenItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cocinaChef`: Exposes CRUD operations for the **CocinaChef** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CocinaChefs
    * const cocinaChefs = await prisma.cocinaChef.findMany()
    * ```
    */
  get cocinaChef(): Prisma.CocinaChefDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.barraBartender`: Exposes CRUD operations for the **BarraBartender** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BarraBartenders
    * const barraBartenders = await prisma.barraBartender.findMany()
    * ```
    */
  get barraBartender(): Prisma.BarraBartenderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticketVenta`: Exposes CRUD operations for the **TicketVenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketVentas
    * const ticketVentas = await prisma.ticketVenta.findMany()
    * ```
    */
  get ticketVenta(): Prisma.TicketVentaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.egresoCaja`: Exposes CRUD operations for the **EgresoCaja** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EgresoCajas
    * const egresoCajas = await prisma.egresoCaja.findMany()
    * ```
    */
  get egresoCaja(): Prisma.EgresoCajaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedidoCliente`: Exposes CRUD operations for the **PedidoCliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PedidoClientes
    * const pedidoClientes = await prisma.pedidoCliente.findMany()
    * ```
    */
  get pedidoCliente(): Prisma.PedidoClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.observacionEntrega`: Exposes CRUD operations for the **ObservacionEntrega** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ObservacionEntregas
    * const observacionEntregas = await prisma.observacionEntrega.findMany()
    * ```
    */
  get observacionEntrega(): Prisma.ObservacionEntregaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedidoClienteItem`: Exposes CRUD operations for the **PedidoClienteItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PedidoClienteItems
    * const pedidoClienteItems = await prisma.pedidoClienteItem.findMany()
    * ```
    */
  get pedidoClienteItem(): Prisma.PedidoClienteItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.meseroNotif`: Exposes CRUD operations for the **MeseroNotif** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MeseroNotifs
    * const meseroNotifs = await prisma.meseroNotif.findMany()
    * ```
    */
  get meseroNotif(): Prisma.MeseroNotifDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.repartidorNotif`: Exposes CRUD operations for the **RepartidorNotif** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RepartidorNotifs
    * const repartidorNotifs = await prisma.repartidorNotif.findMany()
    * ```
    */
  get repartidorNotif(): Prisma.RepartidorNotifDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cajaTurno`: Exposes CRUD operations for the **CajaTurno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CajaTurnos
    * const cajaTurnos = await prisma.cajaTurno.findMany()
    * ```
    */
  get cajaTurno(): Prisma.CajaTurnoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificacionPedido`: Exposes CRUD operations for the **CalificacionPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CalificacionPedidos
    * const calificacionPedidos = await prisma.calificacionPedido.findMany()
    * ```
    */
  get calificacionPedido(): Prisma.CalificacionPedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.setting`: Exposes CRUD operations for the **Setting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.setting.findMany()
    * ```
    */
  get setting(): Prisma.SettingDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Rol: 'Rol',
    Permiso: 'Permiso',
    PermisoPorRol: 'PermisoPorRol',
    PermisoUsuario: 'PermisoUsuario',
    PasswordHistory: 'PasswordHistory',
    Categoria: 'Categoria',
    Platillo: 'Platillo',
    HistorialModificacion: 'HistorialModificacion',
    Mesa: 'Mesa',
    Reserva: 'Reserva',
    Orden: 'Orden',
    OrdenItem: 'OrdenItem',
    CocinaChef: 'CocinaChef',
    BarraBartender: 'BarraBartender',
    TicketVenta: 'TicketVenta',
    EgresoCaja: 'EgresoCaja',
    PedidoCliente: 'PedidoCliente',
    ObservacionEntrega: 'ObservacionEntrega',
    PedidoClienteItem: 'PedidoClienteItem',
    MeseroNotif: 'MeseroNotif',
    RepartidorNotif: 'RepartidorNotif',
    CajaTurno: 'CajaTurno',
    CalificacionPedido: 'CalificacionPedido',
    Setting: 'Setting'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "rol" | "permiso" | "permisoPorRol" | "permisoUsuario" | "passwordHistory" | "categoria" | "platillo" | "historialModificacion" | "mesa" | "reserva" | "orden" | "ordenItem" | "cocinaChef" | "barraBartender" | "ticketVenta" | "egresoCaja" | "pedidoCliente" | "observacionEntrega" | "pedidoClienteItem" | "meseroNotif" | "repartidorNotif" | "cajaTurno" | "calificacionPedido" | "setting"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Rol: {
        payload: Prisma.$RolPayload<ExtArgs>
        fields: Prisma.RolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findFirst: {
            args: Prisma.RolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findMany: {
            args: Prisma.RolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          create: {
            args: Prisma.RolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          createMany: {
            args: Prisma.RolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          delete: {
            args: Prisma.RolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          update: {
            args: Prisma.RolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          deleteMany: {
            args: Prisma.RolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          upsert: {
            args: Prisma.RolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          aggregate: {
            args: Prisma.RolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol>
          }
          groupBy: {
            args: Prisma.RolGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolCountArgs<ExtArgs>
            result: $Utils.Optional<RolCountAggregateOutputType> | number
          }
        }
      }
      Permiso: {
        payload: Prisma.$PermisoPayload<ExtArgs>
        fields: Prisma.PermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findFirst: {
            args: Prisma.PermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findMany: {
            args: Prisma.PermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          create: {
            args: Prisma.PermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          createMany: {
            args: Prisma.PermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          delete: {
            args: Prisma.PermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          update: {
            args: Prisma.PermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          deleteMany: {
            args: Prisma.PermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.PermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      PermisoPorRol: {
        payload: Prisma.$PermisoPorRolPayload<ExtArgs>
        fields: Prisma.PermisoPorRolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoPorRolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoPorRolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          findFirst: {
            args: Prisma.PermisoPorRolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoPorRolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          findMany: {
            args: Prisma.PermisoPorRolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>[]
          }
          create: {
            args: Prisma.PermisoPorRolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          createMany: {
            args: Prisma.PermisoPorRolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoPorRolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>[]
          }
          delete: {
            args: Prisma.PermisoPorRolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          update: {
            args: Prisma.PermisoPorRolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          deleteMany: {
            args: Prisma.PermisoPorRolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoPorRolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoPorRolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>[]
          }
          upsert: {
            args: Prisma.PermisoPorRolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPorRolPayload>
          }
          aggregate: {
            args: Prisma.PermisoPorRolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermisoPorRol>
          }
          groupBy: {
            args: Prisma.PermisoPorRolGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoPorRolGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoPorRolCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoPorRolCountAggregateOutputType> | number
          }
        }
      }
      PermisoUsuario: {
        payload: Prisma.$PermisoUsuarioPayload<ExtArgs>
        fields: Prisma.PermisoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.PermisoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          findMany: {
            args: Prisma.PermisoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>[]
          }
          create: {
            args: Prisma.PermisoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          createMany: {
            args: Prisma.PermisoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.PermisoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          update: {
            args: Prisma.PermisoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.PermisoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.PermisoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermisoUsuario>
          }
          groupBy: {
            args: Prisma.PermisoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoUsuarioCountAggregateOutputType> | number
          }
        }
      }
      PasswordHistory: {
        payload: Prisma.$PasswordHistoryPayload<ExtArgs>
        fields: Prisma.PasswordHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          findFirst: {
            args: Prisma.PasswordHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          findMany: {
            args: Prisma.PasswordHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>[]
          }
          create: {
            args: Prisma.PasswordHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          createMany: {
            args: Prisma.PasswordHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>[]
          }
          delete: {
            args: Prisma.PasswordHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          update: {
            args: Prisma.PasswordHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          deleteMany: {
            args: Prisma.PasswordHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>[]
          }
          upsert: {
            args: Prisma.PasswordHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordHistoryPayload>
          }
          aggregate: {
            args: Prisma.PasswordHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordHistory>
          }
          groupBy: {
            args: Prisma.PasswordHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordHistoryCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      Platillo: {
        payload: Prisma.$PlatilloPayload<ExtArgs>
        fields: Prisma.PlatilloFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlatilloFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlatilloFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          findFirst: {
            args: Prisma.PlatilloFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlatilloFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          findMany: {
            args: Prisma.PlatilloFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>[]
          }
          create: {
            args: Prisma.PlatilloCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          createMany: {
            args: Prisma.PlatilloCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlatilloCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>[]
          }
          delete: {
            args: Prisma.PlatilloDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          update: {
            args: Prisma.PlatilloUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          deleteMany: {
            args: Prisma.PlatilloDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlatilloUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PlatilloUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>[]
          }
          upsert: {
            args: Prisma.PlatilloUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatilloPayload>
          }
          aggregate: {
            args: Prisma.PlatilloAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlatillo>
          }
          groupBy: {
            args: Prisma.PlatilloGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlatilloGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlatilloCountArgs<ExtArgs>
            result: $Utils.Optional<PlatilloCountAggregateOutputType> | number
          }
        }
      }
      HistorialModificacion: {
        payload: Prisma.$HistorialModificacionPayload<ExtArgs>
        fields: Prisma.HistorialModificacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialModificacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialModificacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          findFirst: {
            args: Prisma.HistorialModificacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialModificacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          findMany: {
            args: Prisma.HistorialModificacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>[]
          }
          create: {
            args: Prisma.HistorialModificacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          createMany: {
            args: Prisma.HistorialModificacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialModificacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>[]
          }
          delete: {
            args: Prisma.HistorialModificacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          update: {
            args: Prisma.HistorialModificacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          deleteMany: {
            args: Prisma.HistorialModificacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialModificacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HistorialModificacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>[]
          }
          upsert: {
            args: Prisma.HistorialModificacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialModificacionPayload>
          }
          aggregate: {
            args: Prisma.HistorialModificacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialModificacion>
          }
          groupBy: {
            args: Prisma.HistorialModificacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialModificacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialModificacionCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialModificacionCountAggregateOutputType> | number
          }
        }
      }
      Mesa: {
        payload: Prisma.$MesaPayload<ExtArgs>
        fields: Prisma.MesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MesaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MesaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          findFirst: {
            args: Prisma.MesaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MesaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          findMany: {
            args: Prisma.MesaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>[]
          }
          create: {
            args: Prisma.MesaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          createMany: {
            args: Prisma.MesaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MesaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>[]
          }
          delete: {
            args: Prisma.MesaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          update: {
            args: Prisma.MesaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          deleteMany: {
            args: Prisma.MesaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MesaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MesaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>[]
          }
          upsert: {
            args: Prisma.MesaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MesaPayload>
          }
          aggregate: {
            args: Prisma.MesaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMesa>
          }
          groupBy: {
            args: Prisma.MesaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MesaCountArgs<ExtArgs>
            result: $Utils.Optional<MesaCountAggregateOutputType> | number
          }
        }
      }
      Reserva: {
        payload: Prisma.$ReservaPayload<ExtArgs>
        fields: Prisma.ReservaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findFirst: {
            args: Prisma.ReservaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findMany: {
            args: Prisma.ReservaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          create: {
            args: Prisma.ReservaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          createMany: {
            args: Prisma.ReservaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          delete: {
            args: Prisma.ReservaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          update: {
            args: Prisma.ReservaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          deleteMany: {
            args: Prisma.ReservaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          upsert: {
            args: Prisma.ReservaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          aggregate: {
            args: Prisma.ReservaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReserva>
          }
          groupBy: {
            args: Prisma.ReservaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaCountAggregateOutputType> | number
          }
        }
      }
      Orden: {
        payload: Prisma.$OrdenPayload<ExtArgs>
        fields: Prisma.OrdenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrdenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrdenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          findFirst: {
            args: Prisma.OrdenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrdenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          findMany: {
            args: Prisma.OrdenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>[]
          }
          create: {
            args: Prisma.OrdenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          createMany: {
            args: Prisma.OrdenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrdenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>[]
          }
          delete: {
            args: Prisma.OrdenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          update: {
            args: Prisma.OrdenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          deleteMany: {
            args: Prisma.OrdenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrdenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrdenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>[]
          }
          upsert: {
            args: Prisma.OrdenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenPayload>
          }
          aggregate: {
            args: Prisma.OrdenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrden>
          }
          groupBy: {
            args: Prisma.OrdenGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdenGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrdenCountArgs<ExtArgs>
            result: $Utils.Optional<OrdenCountAggregateOutputType> | number
          }
        }
      }
      OrdenItem: {
        payload: Prisma.$OrdenItemPayload<ExtArgs>
        fields: Prisma.OrdenItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrdenItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrdenItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          findFirst: {
            args: Prisma.OrdenItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrdenItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          findMany: {
            args: Prisma.OrdenItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>[]
          }
          create: {
            args: Prisma.OrdenItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          createMany: {
            args: Prisma.OrdenItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrdenItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>[]
          }
          delete: {
            args: Prisma.OrdenItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          update: {
            args: Prisma.OrdenItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          deleteMany: {
            args: Prisma.OrdenItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrdenItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrdenItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>[]
          }
          upsert: {
            args: Prisma.OrdenItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrdenItemPayload>
          }
          aggregate: {
            args: Prisma.OrdenItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdenItem>
          }
          groupBy: {
            args: Prisma.OrdenItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdenItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrdenItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrdenItemCountAggregateOutputType> | number
          }
        }
      }
      CocinaChef: {
        payload: Prisma.$CocinaChefPayload<ExtArgs>
        fields: Prisma.CocinaChefFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CocinaChefFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CocinaChefFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          findFirst: {
            args: Prisma.CocinaChefFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CocinaChefFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          findMany: {
            args: Prisma.CocinaChefFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>[]
          }
          create: {
            args: Prisma.CocinaChefCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          createMany: {
            args: Prisma.CocinaChefCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CocinaChefCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>[]
          }
          delete: {
            args: Prisma.CocinaChefDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          update: {
            args: Prisma.CocinaChefUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          deleteMany: {
            args: Prisma.CocinaChefDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CocinaChefUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CocinaChefUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>[]
          }
          upsert: {
            args: Prisma.CocinaChefUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CocinaChefPayload>
          }
          aggregate: {
            args: Prisma.CocinaChefAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCocinaChef>
          }
          groupBy: {
            args: Prisma.CocinaChefGroupByArgs<ExtArgs>
            result: $Utils.Optional<CocinaChefGroupByOutputType>[]
          }
          count: {
            args: Prisma.CocinaChefCountArgs<ExtArgs>
            result: $Utils.Optional<CocinaChefCountAggregateOutputType> | number
          }
        }
      }
      BarraBartender: {
        payload: Prisma.$BarraBartenderPayload<ExtArgs>
        fields: Prisma.BarraBartenderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BarraBartenderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BarraBartenderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          findFirst: {
            args: Prisma.BarraBartenderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BarraBartenderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          findMany: {
            args: Prisma.BarraBartenderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>[]
          }
          create: {
            args: Prisma.BarraBartenderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          createMany: {
            args: Prisma.BarraBartenderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BarraBartenderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>[]
          }
          delete: {
            args: Prisma.BarraBartenderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          update: {
            args: Prisma.BarraBartenderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          deleteMany: {
            args: Prisma.BarraBartenderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BarraBartenderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BarraBartenderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>[]
          }
          upsert: {
            args: Prisma.BarraBartenderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BarraBartenderPayload>
          }
          aggregate: {
            args: Prisma.BarraBartenderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBarraBartender>
          }
          groupBy: {
            args: Prisma.BarraBartenderGroupByArgs<ExtArgs>
            result: $Utils.Optional<BarraBartenderGroupByOutputType>[]
          }
          count: {
            args: Prisma.BarraBartenderCountArgs<ExtArgs>
            result: $Utils.Optional<BarraBartenderCountAggregateOutputType> | number
          }
        }
      }
      TicketVenta: {
        payload: Prisma.$TicketVentaPayload<ExtArgs>
        fields: Prisma.TicketVentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketVentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketVentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          findFirst: {
            args: Prisma.TicketVentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketVentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          findMany: {
            args: Prisma.TicketVentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>[]
          }
          create: {
            args: Prisma.TicketVentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          createMany: {
            args: Prisma.TicketVentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TicketVentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>[]
          }
          delete: {
            args: Prisma.TicketVentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          update: {
            args: Prisma.TicketVentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          deleteMany: {
            args: Prisma.TicketVentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketVentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TicketVentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>[]
          }
          upsert: {
            args: Prisma.TicketVentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketVentaPayload>
          }
          aggregate: {
            args: Prisma.TicketVentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketVenta>
          }
          groupBy: {
            args: Prisma.TicketVentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketVentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketVentaCountArgs<ExtArgs>
            result: $Utils.Optional<TicketVentaCountAggregateOutputType> | number
          }
        }
      }
      EgresoCaja: {
        payload: Prisma.$EgresoCajaPayload<ExtArgs>
        fields: Prisma.EgresoCajaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EgresoCajaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EgresoCajaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          findFirst: {
            args: Prisma.EgresoCajaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EgresoCajaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          findMany: {
            args: Prisma.EgresoCajaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>[]
          }
          create: {
            args: Prisma.EgresoCajaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          createMany: {
            args: Prisma.EgresoCajaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EgresoCajaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>[]
          }
          delete: {
            args: Prisma.EgresoCajaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          update: {
            args: Prisma.EgresoCajaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          deleteMany: {
            args: Prisma.EgresoCajaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EgresoCajaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EgresoCajaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>[]
          }
          upsert: {
            args: Prisma.EgresoCajaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoCajaPayload>
          }
          aggregate: {
            args: Prisma.EgresoCajaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEgresoCaja>
          }
          groupBy: {
            args: Prisma.EgresoCajaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EgresoCajaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EgresoCajaCountArgs<ExtArgs>
            result: $Utils.Optional<EgresoCajaCountAggregateOutputType> | number
          }
        }
      }
      PedidoCliente: {
        payload: Prisma.$PedidoClientePayload<ExtArgs>
        fields: Prisma.PedidoClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          findFirst: {
            args: Prisma.PedidoClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          findMany: {
            args: Prisma.PedidoClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>[]
          }
          create: {
            args: Prisma.PedidoClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          createMany: {
            args: Prisma.PedidoClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>[]
          }
          delete: {
            args: Prisma.PedidoClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          update: {
            args: Prisma.PedidoClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          deleteMany: {
            args: Prisma.PedidoClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>[]
          }
          upsert: {
            args: Prisma.PedidoClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClientePayload>
          }
          aggregate: {
            args: Prisma.PedidoClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedidoCliente>
          }
          groupBy: {
            args: Prisma.PedidoClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoClienteCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoClienteCountAggregateOutputType> | number
          }
        }
      }
      ObservacionEntrega: {
        payload: Prisma.$ObservacionEntregaPayload<ExtArgs>
        fields: Prisma.ObservacionEntregaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ObservacionEntregaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ObservacionEntregaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          findFirst: {
            args: Prisma.ObservacionEntregaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ObservacionEntregaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          findMany: {
            args: Prisma.ObservacionEntregaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>[]
          }
          create: {
            args: Prisma.ObservacionEntregaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          createMany: {
            args: Prisma.ObservacionEntregaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ObservacionEntregaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>[]
          }
          delete: {
            args: Prisma.ObservacionEntregaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          update: {
            args: Prisma.ObservacionEntregaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          deleteMany: {
            args: Prisma.ObservacionEntregaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ObservacionEntregaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ObservacionEntregaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>[]
          }
          upsert: {
            args: Prisma.ObservacionEntregaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObservacionEntregaPayload>
          }
          aggregate: {
            args: Prisma.ObservacionEntregaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateObservacionEntrega>
          }
          groupBy: {
            args: Prisma.ObservacionEntregaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ObservacionEntregaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ObservacionEntregaCountArgs<ExtArgs>
            result: $Utils.Optional<ObservacionEntregaCountAggregateOutputType> | number
          }
        }
      }
      PedidoClienteItem: {
        payload: Prisma.$PedidoClienteItemPayload<ExtArgs>
        fields: Prisma.PedidoClienteItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoClienteItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoClienteItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          findFirst: {
            args: Prisma.PedidoClienteItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoClienteItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          findMany: {
            args: Prisma.PedidoClienteItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>[]
          }
          create: {
            args: Prisma.PedidoClienteItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          createMany: {
            args: Prisma.PedidoClienteItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoClienteItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>[]
          }
          delete: {
            args: Prisma.PedidoClienteItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          update: {
            args: Prisma.PedidoClienteItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          deleteMany: {
            args: Prisma.PedidoClienteItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoClienteItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoClienteItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>[]
          }
          upsert: {
            args: Prisma.PedidoClienteItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoClienteItemPayload>
          }
          aggregate: {
            args: Prisma.PedidoClienteItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedidoClienteItem>
          }
          groupBy: {
            args: Prisma.PedidoClienteItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoClienteItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoClienteItemCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoClienteItemCountAggregateOutputType> | number
          }
        }
      }
      MeseroNotif: {
        payload: Prisma.$MeseroNotifPayload<ExtArgs>
        fields: Prisma.MeseroNotifFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MeseroNotifFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MeseroNotifFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          findFirst: {
            args: Prisma.MeseroNotifFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MeseroNotifFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          findMany: {
            args: Prisma.MeseroNotifFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>[]
          }
          create: {
            args: Prisma.MeseroNotifCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          createMany: {
            args: Prisma.MeseroNotifCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MeseroNotifCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>[]
          }
          delete: {
            args: Prisma.MeseroNotifDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          update: {
            args: Prisma.MeseroNotifUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          deleteMany: {
            args: Prisma.MeseroNotifDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MeseroNotifUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MeseroNotifUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>[]
          }
          upsert: {
            args: Prisma.MeseroNotifUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MeseroNotifPayload>
          }
          aggregate: {
            args: Prisma.MeseroNotifAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMeseroNotif>
          }
          groupBy: {
            args: Prisma.MeseroNotifGroupByArgs<ExtArgs>
            result: $Utils.Optional<MeseroNotifGroupByOutputType>[]
          }
          count: {
            args: Prisma.MeseroNotifCountArgs<ExtArgs>
            result: $Utils.Optional<MeseroNotifCountAggregateOutputType> | number
          }
        }
      }
      RepartidorNotif: {
        payload: Prisma.$RepartidorNotifPayload<ExtArgs>
        fields: Prisma.RepartidorNotifFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RepartidorNotifFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RepartidorNotifFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          findFirst: {
            args: Prisma.RepartidorNotifFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RepartidorNotifFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          findMany: {
            args: Prisma.RepartidorNotifFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>[]
          }
          create: {
            args: Prisma.RepartidorNotifCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          createMany: {
            args: Prisma.RepartidorNotifCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RepartidorNotifCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>[]
          }
          delete: {
            args: Prisma.RepartidorNotifDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          update: {
            args: Prisma.RepartidorNotifUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          deleteMany: {
            args: Prisma.RepartidorNotifDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RepartidorNotifUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RepartidorNotifUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>[]
          }
          upsert: {
            args: Prisma.RepartidorNotifUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RepartidorNotifPayload>
          }
          aggregate: {
            args: Prisma.RepartidorNotifAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRepartidorNotif>
          }
          groupBy: {
            args: Prisma.RepartidorNotifGroupByArgs<ExtArgs>
            result: $Utils.Optional<RepartidorNotifGroupByOutputType>[]
          }
          count: {
            args: Prisma.RepartidorNotifCountArgs<ExtArgs>
            result: $Utils.Optional<RepartidorNotifCountAggregateOutputType> | number
          }
        }
      }
      CajaTurno: {
        payload: Prisma.$CajaTurnoPayload<ExtArgs>
        fields: Prisma.CajaTurnoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CajaTurnoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CajaTurnoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          findFirst: {
            args: Prisma.CajaTurnoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CajaTurnoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          findMany: {
            args: Prisma.CajaTurnoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>[]
          }
          create: {
            args: Prisma.CajaTurnoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          createMany: {
            args: Prisma.CajaTurnoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CajaTurnoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>[]
          }
          delete: {
            args: Prisma.CajaTurnoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          update: {
            args: Prisma.CajaTurnoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          deleteMany: {
            args: Prisma.CajaTurnoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CajaTurnoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CajaTurnoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>[]
          }
          upsert: {
            args: Prisma.CajaTurnoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CajaTurnoPayload>
          }
          aggregate: {
            args: Prisma.CajaTurnoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCajaTurno>
          }
          groupBy: {
            args: Prisma.CajaTurnoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CajaTurnoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CajaTurnoCountArgs<ExtArgs>
            result: $Utils.Optional<CajaTurnoCountAggregateOutputType> | number
          }
        }
      }
      CalificacionPedido: {
        payload: Prisma.$CalificacionPedidoPayload<ExtArgs>
        fields: Prisma.CalificacionPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          findFirst: {
            args: Prisma.CalificacionPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          findMany: {
            args: Prisma.CalificacionPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>[]
          }
          create: {
            args: Prisma.CalificacionPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          createMany: {
            args: Prisma.CalificacionPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalificacionPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>[]
          }
          delete: {
            args: Prisma.CalificacionPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          update: {
            args: Prisma.CalificacionPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalificacionPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>[]
          }
          upsert: {
            args: Prisma.CalificacionPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPedidoPayload>
          }
          aggregate: {
            args: Prisma.CalificacionPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificacionPedido>
          }
          groupBy: {
            args: Prisma.CalificacionPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalificacionPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionPedidoCountAggregateOutputType> | number
          }
        }
      }
      Setting: {
        payload: Prisma.$SettingPayload<ExtArgs>
        fields: Prisma.SettingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SettingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SettingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          findFirst: {
            args: Prisma.SettingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SettingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          findMany: {
            args: Prisma.SettingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>[]
          }
          create: {
            args: Prisma.SettingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          createMany: {
            args: Prisma.SettingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SettingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>[]
          }
          delete: {
            args: Prisma.SettingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          update: {
            args: Prisma.SettingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          deleteMany: {
            args: Prisma.SettingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SettingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SettingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>[]
          }
          upsert: {
            args: Prisma.SettingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          aggregate: {
            args: Prisma.SettingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSetting>
          }
          groupBy: {
            args: Prisma.SettingGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.SettingCountArgs<ExtArgs>
            result: $Utils.Optional<SettingCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    rol?: RolOmit
    permiso?: PermisoOmit
    permisoPorRol?: PermisoPorRolOmit
    permisoUsuario?: PermisoUsuarioOmit
    passwordHistory?: PasswordHistoryOmit
    categoria?: CategoriaOmit
    platillo?: PlatilloOmit
    historialModificacion?: HistorialModificacionOmit
    mesa?: MesaOmit
    reserva?: ReservaOmit
    orden?: OrdenOmit
    ordenItem?: OrdenItemOmit
    cocinaChef?: CocinaChefOmit
    barraBartender?: BarraBartenderOmit
    ticketVenta?: TicketVentaOmit
    egresoCaja?: EgresoCajaOmit
    pedidoCliente?: PedidoClienteOmit
    observacionEntrega?: ObservacionEntregaOmit
    pedidoClienteItem?: PedidoClienteItemOmit
    meseroNotif?: MeseroNotifOmit
    repartidorNotif?: RepartidorNotifOmit
    cajaTurno?: CajaTurnoOmit
    calificacionPedido?: CalificacionPedidoOmit
    setting?: SettingOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    permisos: number
    historialModificaciones: number
    historialResponsable: number
    passwordHistory: number
    ordenesMesero: number
    itemsAsignados: number
    itemsBarraAsignados: number
    egresosSolicitados: number
    egresosAutorizados: number
    meseroNotifs: number
    pedidosRepartidor: number
    observacionesEntrega: number
    repartidorNotifs: number
    ticketsCobrados: number
    ticketsAnulados: number
    cajaTurnosSolicitados: number
    cajaTurnosAutorizados: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permisos?: boolean | UsuarioCountOutputTypeCountPermisosArgs
    historialModificaciones?: boolean | UsuarioCountOutputTypeCountHistorialModificacionesArgs
    historialResponsable?: boolean | UsuarioCountOutputTypeCountHistorialResponsableArgs
    passwordHistory?: boolean | UsuarioCountOutputTypeCountPasswordHistoryArgs
    ordenesMesero?: boolean | UsuarioCountOutputTypeCountOrdenesMeseroArgs
    itemsAsignados?: boolean | UsuarioCountOutputTypeCountItemsAsignadosArgs
    itemsBarraAsignados?: boolean | UsuarioCountOutputTypeCountItemsBarraAsignadosArgs
    egresosSolicitados?: boolean | UsuarioCountOutputTypeCountEgresosSolicitadosArgs
    egresosAutorizados?: boolean | UsuarioCountOutputTypeCountEgresosAutorizadosArgs
    meseroNotifs?: boolean | UsuarioCountOutputTypeCountMeseroNotifsArgs
    pedidosRepartidor?: boolean | UsuarioCountOutputTypeCountPedidosRepartidorArgs
    observacionesEntrega?: boolean | UsuarioCountOutputTypeCountObservacionesEntregaArgs
    repartidorNotifs?: boolean | UsuarioCountOutputTypeCountRepartidorNotifsArgs
    ticketsCobrados?: boolean | UsuarioCountOutputTypeCountTicketsCobradosArgs
    ticketsAnulados?: boolean | UsuarioCountOutputTypeCountTicketsAnuladosArgs
    cajaTurnosSolicitados?: boolean | UsuarioCountOutputTypeCountCajaTurnosSolicitadosArgs
    cajaTurnosAutorizados?: boolean | UsuarioCountOutputTypeCountCajaTurnosAutorizadosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPermisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoUsuarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountHistorialModificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialModificacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountHistorialResponsableArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialModificacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPasswordHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordHistoryWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountOrdenesMeseroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountItemsAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenItemWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountItemsBarraAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenItemWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEgresosSolicitadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoCajaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEgresosAutorizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoCajaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMeseroNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MeseroNotifWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPedidosRepartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoClienteWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountObservacionesEntregaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObservacionEntregaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRepartidorNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RepartidorNotifWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountTicketsCobradosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketVentaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountTicketsAnuladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketVentaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCajaTurnosSolicitadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CajaTurnoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCajaTurnosAutorizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CajaTurnoWhereInput
  }


  /**
   * Count Type RolCountOutputType
   */

  export type RolCountOutputType = {
    usuarios: number
    permisos: number
  }

  export type RolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | RolCountOutputTypeCountUsuariosArgs
    permisos?: boolean | RolCountOutputTypeCountPermisosArgs
  }

  // Custom InputTypes
  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolCountOutputType
     */
    select?: RolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountPermisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoPorRolWhereInput
  }


  /**
   * Count Type PermisoCountOutputType
   */

  export type PermisoCountOutputType = {
    roles: number
    usuarios: number
  }

  export type PermisoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | PermisoCountOutputTypeCountRolesArgs
    usuarios?: boolean | PermisoCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoCountOutputType
     */
    select?: PermisoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoPorRolWhereInput
  }

  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoUsuarioWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    platillos: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    platillos?: boolean | CategoriaCountOutputTypeCountPlatillosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountPlatillosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlatilloWhereInput
  }


  /**
   * Count Type PlatilloCountOutputType
   */

  export type PlatilloCountOutputType = {
    historialModificaciones: number
  }

  export type PlatilloCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialModificaciones?: boolean | PlatilloCountOutputTypeCountHistorialModificacionesArgs
  }

  // Custom InputTypes
  /**
   * PlatilloCountOutputType without action
   */
  export type PlatilloCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatilloCountOutputType
     */
    select?: PlatilloCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PlatilloCountOutputType without action
   */
  export type PlatilloCountOutputTypeCountHistorialModificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialModificacionWhereInput
  }


  /**
   * Count Type MesaCountOutputType
   */

  export type MesaCountOutputType = {
    reservas: number
  }

  export type MesaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | MesaCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * MesaCountOutputType without action
   */
  export type MesaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MesaCountOutputType
     */
    select?: MesaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MesaCountOutputType without action
   */
  export type MesaCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }


  /**
   * Count Type OrdenCountOutputType
   */

  export type OrdenCountOutputType = {
    items: number
    tickets: number
    notifs: number
  }

  export type OrdenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrdenCountOutputTypeCountItemsArgs
    tickets?: boolean | OrdenCountOutputTypeCountTicketsArgs
    notifs?: boolean | OrdenCountOutputTypeCountNotifsArgs
  }

  // Custom InputTypes
  /**
   * OrdenCountOutputType without action
   */
  export type OrdenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenCountOutputType
     */
    select?: OrdenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdenCountOutputType without action
   */
  export type OrdenCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenItemWhereInput
  }

  /**
   * OrdenCountOutputType without action
   */
  export type OrdenCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketVentaWhereInput
  }

  /**
   * OrdenCountOutputType without action
   */
  export type OrdenCountOutputTypeCountNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MeseroNotifWhereInput
  }


  /**
   * Count Type TicketVentaCountOutputType
   */

  export type TicketVentaCountOutputType = {
    items: number
  }

  export type TicketVentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | TicketVentaCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * TicketVentaCountOutputType without action
   */
  export type TicketVentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVentaCountOutputType
     */
    select?: TicketVentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TicketVentaCountOutputType without action
   */
  export type TicketVentaCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenItemWhereInput
  }


  /**
   * Count Type PedidoClienteCountOutputType
   */

  export type PedidoClienteCountOutputType = {
    items: number
    observaciones: number
    repartidorNotifs: number
  }

  export type PedidoClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | PedidoClienteCountOutputTypeCountItemsArgs
    observaciones?: boolean | PedidoClienteCountOutputTypeCountObservacionesArgs
    repartidorNotifs?: boolean | PedidoClienteCountOutputTypeCountRepartidorNotifsArgs
  }

  // Custom InputTypes
  /**
   * PedidoClienteCountOutputType without action
   */
  export type PedidoClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteCountOutputType
     */
    select?: PedidoClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoClienteCountOutputType without action
   */
  export type PedidoClienteCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoClienteItemWhereInput
  }

  /**
   * PedidoClienteCountOutputType without action
   */
  export type PedidoClienteCountOutputTypeCountObservacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObservacionEntregaWhereInput
  }

  /**
   * PedidoClienteCountOutputType without action
   */
  export type PedidoClienteCountOutputTypeCountRepartidorNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RepartidorNotifWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    rolId: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    rolId: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    usuario: string | null
    correo: string | null
    contrasena: string | null
    estado: boolean | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    debeCambiarPassword: boolean | null
    rolId: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    usuario: string | null
    correo: string | null
    contrasena: string | null
    estado: boolean | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    debeCambiarPassword: boolean | null
    rolId: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    usuario: number
    correo: number
    contrasena: number
    estado: number
    creadoEn: number
    actualizadoEn: number
    debeCambiarPassword: number
    rolId: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    rolId?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    rolId?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    usuario?: true
    correo?: true
    contrasena?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    debeCambiarPassword?: true
    rolId?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    usuario?: true
    correo?: true
    contrasena?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    debeCambiarPassword?: true
    rolId?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    usuario?: true
    correo?: true
    contrasena?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    debeCambiarPassword?: true
    rolId?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    usuario: string
    correo: string
    contrasena: string | null
    estado: boolean
    creadoEn: Date
    actualizadoEn: Date
    debeCambiarPassword: boolean
    rolId: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    usuario?: boolean
    correo?: boolean
    contrasena?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    debeCambiarPassword?: boolean
    rolId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permisos?: boolean | Usuario$permisosArgs<ExtArgs>
    historialModificaciones?: boolean | Usuario$historialModificacionesArgs<ExtArgs>
    historialResponsable?: boolean | Usuario$historialResponsableArgs<ExtArgs>
    passwordHistory?: boolean | Usuario$passwordHistoryArgs<ExtArgs>
    ordenesMesero?: boolean | Usuario$ordenesMeseroArgs<ExtArgs>
    itemsAsignados?: boolean | Usuario$itemsAsignadosArgs<ExtArgs>
    cocinaEstado?: boolean | Usuario$cocinaEstadoArgs<ExtArgs>
    itemsBarraAsignados?: boolean | Usuario$itemsBarraAsignadosArgs<ExtArgs>
    barraEstado?: boolean | Usuario$barraEstadoArgs<ExtArgs>
    egresosSolicitados?: boolean | Usuario$egresosSolicitadosArgs<ExtArgs>
    egresosAutorizados?: boolean | Usuario$egresosAutorizadosArgs<ExtArgs>
    meseroNotifs?: boolean | Usuario$meseroNotifsArgs<ExtArgs>
    pedidosRepartidor?: boolean | Usuario$pedidosRepartidorArgs<ExtArgs>
    observacionesEntrega?: boolean | Usuario$observacionesEntregaArgs<ExtArgs>
    repartidorNotifs?: boolean | Usuario$repartidorNotifsArgs<ExtArgs>
    ticketsCobrados?: boolean | Usuario$ticketsCobradosArgs<ExtArgs>
    ticketsAnulados?: boolean | Usuario$ticketsAnuladosArgs<ExtArgs>
    cajaTurnosSolicitados?: boolean | Usuario$cajaTurnosSolicitadosArgs<ExtArgs>
    cajaTurnosAutorizados?: boolean | Usuario$cajaTurnosAutorizadosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    usuario?: boolean
    correo?: boolean
    contrasena?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    debeCambiarPassword?: boolean
    rolId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    usuario?: boolean
    correo?: boolean
    contrasena?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    debeCambiarPassword?: boolean
    rolId?: boolean
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    usuario?: boolean
    correo?: boolean
    contrasena?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    debeCambiarPassword?: boolean
    rolId?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "usuario" | "correo" | "contrasena" | "estado" | "creadoEn" | "actualizadoEn" | "debeCambiarPassword" | "rolId", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
    permisos?: boolean | Usuario$permisosArgs<ExtArgs>
    historialModificaciones?: boolean | Usuario$historialModificacionesArgs<ExtArgs>
    historialResponsable?: boolean | Usuario$historialResponsableArgs<ExtArgs>
    passwordHistory?: boolean | Usuario$passwordHistoryArgs<ExtArgs>
    ordenesMesero?: boolean | Usuario$ordenesMeseroArgs<ExtArgs>
    itemsAsignados?: boolean | Usuario$itemsAsignadosArgs<ExtArgs>
    cocinaEstado?: boolean | Usuario$cocinaEstadoArgs<ExtArgs>
    itemsBarraAsignados?: boolean | Usuario$itemsBarraAsignadosArgs<ExtArgs>
    barraEstado?: boolean | Usuario$barraEstadoArgs<ExtArgs>
    egresosSolicitados?: boolean | Usuario$egresosSolicitadosArgs<ExtArgs>
    egresosAutorizados?: boolean | Usuario$egresosAutorizadosArgs<ExtArgs>
    meseroNotifs?: boolean | Usuario$meseroNotifsArgs<ExtArgs>
    pedidosRepartidor?: boolean | Usuario$pedidosRepartidorArgs<ExtArgs>
    observacionesEntrega?: boolean | Usuario$observacionesEntregaArgs<ExtArgs>
    repartidorNotifs?: boolean | Usuario$repartidorNotifsArgs<ExtArgs>
    ticketsCobrados?: boolean | Usuario$ticketsCobradosArgs<ExtArgs>
    ticketsAnulados?: boolean | Usuario$ticketsAnuladosArgs<ExtArgs>
    cajaTurnosSolicitados?: boolean | Usuario$cajaTurnosSolicitadosArgs<ExtArgs>
    cajaTurnosAutorizados?: boolean | Usuario$cajaTurnosAutorizadosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      rol: Prisma.$RolPayload<ExtArgs>
      /**
       * ðŸ”¸ Permisos directos (ademÃ¡s de los del rol)
       */
      permisos: Prisma.$PermisoUsuarioPayload<ExtArgs>[]
      historialModificaciones: Prisma.$HistorialModificacionPayload<ExtArgs>[]
      historialResponsable: Prisma.$HistorialModificacionPayload<ExtArgs>[]
      passwordHistory: Prisma.$PasswordHistoryPayload<ExtArgs>[]
      ordenesMesero: Prisma.$OrdenPayload<ExtArgs>[]
      itemsAsignados: Prisma.$OrdenItemPayload<ExtArgs>[]
      cocinaEstado: Prisma.$CocinaChefPayload<ExtArgs> | null
      itemsBarraAsignados: Prisma.$OrdenItemPayload<ExtArgs>[]
      barraEstado: Prisma.$BarraBartenderPayload<ExtArgs> | null
      egresosSolicitados: Prisma.$EgresoCajaPayload<ExtArgs>[]
      egresosAutorizados: Prisma.$EgresoCajaPayload<ExtArgs>[]
      meseroNotifs: Prisma.$MeseroNotifPayload<ExtArgs>[]
      pedidosRepartidor: Prisma.$PedidoClientePayload<ExtArgs>[]
      observacionesEntrega: Prisma.$ObservacionEntregaPayload<ExtArgs>[]
      repartidorNotifs: Prisma.$RepartidorNotifPayload<ExtArgs>[]
      ticketsCobrados: Prisma.$TicketVentaPayload<ExtArgs>[]
      ticketsAnulados: Prisma.$TicketVentaPayload<ExtArgs>[]
      cajaTurnosSolicitados: Prisma.$CajaTurnoPayload<ExtArgs>[]
      cajaTurnosAutorizados: Prisma.$CajaTurnoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      usuario: string
      correo: string
      contrasena: string | null
      estado: boolean
      creadoEn: Date
      actualizadoEn: Date
      debeCambiarPassword: boolean
      rolId: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permisos<T extends Usuario$permisosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$permisosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historialModificaciones<T extends Usuario$historialModificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$historialModificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historialResponsable<T extends Usuario$historialResponsableArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$historialResponsableArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    passwordHistory<T extends Usuario$passwordHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$passwordHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordenesMesero<T extends Usuario$ordenesMeseroArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ordenesMeseroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    itemsAsignados<T extends Usuario$itemsAsignadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$itemsAsignadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cocinaEstado<T extends Usuario$cocinaEstadoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$cocinaEstadoArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    itemsBarraAsignados<T extends Usuario$itemsBarraAsignadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$itemsBarraAsignadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    barraEstado<T extends Usuario$barraEstadoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$barraEstadoArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    egresosSolicitados<T extends Usuario$egresosSolicitadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$egresosSolicitadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    egresosAutorizados<T extends Usuario$egresosAutorizadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$egresosAutorizadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    meseroNotifs<T extends Usuario$meseroNotifsArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$meseroNotifsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedidosRepartidor<T extends Usuario$pedidosRepartidorArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$pedidosRepartidorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    observacionesEntrega<T extends Usuario$observacionesEntregaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$observacionesEntregaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    repartidorNotifs<T extends Usuario$repartidorNotifsArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$repartidorNotifsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsCobrados<T extends Usuario$ticketsCobradosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ticketsCobradosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsAnulados<T extends Usuario$ticketsAnuladosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ticketsAnuladosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cajaTurnosSolicitados<T extends Usuario$cajaTurnosSolicitadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$cajaTurnosSolicitadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cajaTurnosAutorizados<T extends Usuario$cajaTurnosAutorizadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$cajaTurnosAutorizadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly usuario: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly contrasena: FieldRef<"Usuario", 'String'>
    readonly estado: FieldRef<"Usuario", 'Boolean'>
    readonly creadoEn: FieldRef<"Usuario", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Usuario", 'DateTime'>
    readonly debeCambiarPassword: FieldRef<"Usuario", 'Boolean'>
    readonly rolId: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.permisos
   */
  export type Usuario$permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    where?: PermisoUsuarioWhereInput
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    cursor?: PermisoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoUsuarioScalarFieldEnum | PermisoUsuarioScalarFieldEnum[]
  }

  /**
   * Usuario.historialModificaciones
   */
  export type Usuario$historialModificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    where?: HistorialModificacionWhereInput
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    cursor?: HistorialModificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * Usuario.historialResponsable
   */
  export type Usuario$historialResponsableArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    where?: HistorialModificacionWhereInput
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    cursor?: HistorialModificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * Usuario.passwordHistory
   */
  export type Usuario$passwordHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    where?: PasswordHistoryWhereInput
    orderBy?: PasswordHistoryOrderByWithRelationInput | PasswordHistoryOrderByWithRelationInput[]
    cursor?: PasswordHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PasswordHistoryScalarFieldEnum | PasswordHistoryScalarFieldEnum[]
  }

  /**
   * Usuario.ordenesMesero
   */
  export type Usuario$ordenesMeseroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    where?: OrdenWhereInput
    orderBy?: OrdenOrderByWithRelationInput | OrdenOrderByWithRelationInput[]
    cursor?: OrdenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenScalarFieldEnum | OrdenScalarFieldEnum[]
  }

  /**
   * Usuario.itemsAsignados
   */
  export type Usuario$itemsAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    where?: OrdenItemWhereInput
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    cursor?: OrdenItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * Usuario.cocinaEstado
   */
  export type Usuario$cocinaEstadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    where?: CocinaChefWhereInput
  }

  /**
   * Usuario.itemsBarraAsignados
   */
  export type Usuario$itemsBarraAsignadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    where?: OrdenItemWhereInput
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    cursor?: OrdenItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * Usuario.barraEstado
   */
  export type Usuario$barraEstadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    where?: BarraBartenderWhereInput
  }

  /**
   * Usuario.egresosSolicitados
   */
  export type Usuario$egresosSolicitadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    where?: EgresoCajaWhereInput
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    cursor?: EgresoCajaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoCajaScalarFieldEnum | EgresoCajaScalarFieldEnum[]
  }

  /**
   * Usuario.egresosAutorizados
   */
  export type Usuario$egresosAutorizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    where?: EgresoCajaWhereInput
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    cursor?: EgresoCajaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoCajaScalarFieldEnum | EgresoCajaScalarFieldEnum[]
  }

  /**
   * Usuario.meseroNotifs
   */
  export type Usuario$meseroNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    where?: MeseroNotifWhereInput
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    cursor?: MeseroNotifWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MeseroNotifScalarFieldEnum | MeseroNotifScalarFieldEnum[]
  }

  /**
   * Usuario.pedidosRepartidor
   */
  export type Usuario$pedidosRepartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    where?: PedidoClienteWhereInput
    orderBy?: PedidoClienteOrderByWithRelationInput | PedidoClienteOrderByWithRelationInput[]
    cursor?: PedidoClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoClienteScalarFieldEnum | PedidoClienteScalarFieldEnum[]
  }

  /**
   * Usuario.observacionesEntrega
   */
  export type Usuario$observacionesEntregaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    where?: ObservacionEntregaWhereInput
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    cursor?: ObservacionEntregaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ObservacionEntregaScalarFieldEnum | ObservacionEntregaScalarFieldEnum[]
  }

  /**
   * Usuario.repartidorNotifs
   */
  export type Usuario$repartidorNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    where?: RepartidorNotifWhereInput
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    cursor?: RepartidorNotifWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RepartidorNotifScalarFieldEnum | RepartidorNotifScalarFieldEnum[]
  }

  /**
   * Usuario.ticketsCobrados
   */
  export type Usuario$ticketsCobradosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    where?: TicketVentaWhereInput
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    cursor?: TicketVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * Usuario.ticketsAnulados
   */
  export type Usuario$ticketsAnuladosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    where?: TicketVentaWhereInput
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    cursor?: TicketVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * Usuario.cajaTurnosSolicitados
   */
  export type Usuario$cajaTurnosSolicitadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    where?: CajaTurnoWhereInput
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    cursor?: CajaTurnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CajaTurnoScalarFieldEnum | CajaTurnoScalarFieldEnum[]
  }

  /**
   * Usuario.cajaTurnosAutorizados
   */
  export type Usuario$cajaTurnosAutorizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    where?: CajaTurnoWhereInput
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    cursor?: CajaTurnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CajaTurnoScalarFieldEnum | CajaTurnoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Rol
   */

  export type AggregateRol = {
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  export type RolAvgAggregateOutputType = {
    id: number | null
  }

  export type RolSumAggregateOutputType = {
    id: number | null
  }

  export type RolMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type RolAvgAggregateInputType = {
    id?: true
  }

  export type RolSumAggregateInputType = {
    id?: true
  }

  export type RolMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type RolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rol to aggregate.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rols
    **/
    _count?: true | RolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolMaxAggregateInputType
  }

  export type GetRolAggregateType<T extends RolAggregateArgs> = {
        [P in keyof T & keyof AggregateRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol[P]>
      : GetScalarType<T[P], AggregateRol[P]>
  }




  export type RolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolWhereInput
    orderBy?: RolOrderByWithAggregationInput | RolOrderByWithAggregationInput[]
    by: RolScalarFieldEnum[] | RolScalarFieldEnum
    having?: RolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolCountAggregateInputType | true
    _avg?: RolAvgAggregateInputType
    _sum?: RolSumAggregateInputType
    _min?: RolMinAggregateInputType
    _max?: RolMaxAggregateInputType
  }

  export type RolGroupByOutputType = {
    id: number
    nombre: string
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  type GetRolGroupByPayload<T extends RolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolGroupByOutputType[P]>
            : GetScalarType<T[P], RolGroupByOutputType[P]>
        }
      >
    >


  export type RolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    permisos?: boolean | Rol$permisosArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol"]>

  export type RolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type RolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["rol"]>
  export type RolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Rol$usuariosArgs<ExtArgs>
    permisos?: boolean | Rol$permisosArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rol"
    objects: {
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      permisos: Prisma.$PermisoPorRolPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["rol"]>
    composites: {}
  }

  type RolGetPayload<S extends boolean | null | undefined | RolDefaultArgs> = $Result.GetResult<Prisma.$RolPayload, S>

  type RolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolCountAggregateInputType | true
    }

  export interface RolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rol'], meta: { name: 'Rol' } }
    /**
     * Find zero or one Rol that matches the filter.
     * @param {RolFindUniqueArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolFindUniqueArgs>(args: SelectSubset<T, RolFindUniqueArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolFindUniqueOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolFindUniqueOrThrowArgs>(args: SelectSubset<T, RolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolFindFirstArgs>(args?: SelectSubset<T, RolFindFirstArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolFindFirstOrThrowArgs>(args?: SelectSubset<T, RolFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rols
     * const rols = await prisma.rol.findMany()
     * 
     * // Get first 10 Rols
     * const rols = await prisma.rol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolWithIdOnly = await prisma.rol.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolFindManyArgs>(args?: SelectSubset<T, RolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol.
     * @param {RolCreateArgs} args - Arguments to create a Rol.
     * @example
     * // Create one Rol
     * const Rol = await prisma.rol.create({
     *   data: {
     *     // ... data to create a Rol
     *   }
     * })
     * 
     */
    create<T extends RolCreateArgs>(args: SelectSubset<T, RolCreateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rols.
     * @param {RolCreateManyArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolCreateManyArgs>(args?: SelectSubset<T, RolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rols and returns the data saved in the database.
     * @param {RolCreateManyAndReturnArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolCreateManyAndReturnArgs>(args?: SelectSubset<T, RolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol.
     * @param {RolDeleteArgs} args - Arguments to delete one Rol.
     * @example
     * // Delete one Rol
     * const Rol = await prisma.rol.delete({
     *   where: {
     *     // ... filter to delete one Rol
     *   }
     * })
     * 
     */
    delete<T extends RolDeleteArgs>(args: SelectSubset<T, RolDeleteArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol.
     * @param {RolUpdateArgs} args - Arguments to update one Rol.
     * @example
     * // Update one Rol
     * const rol = await prisma.rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolUpdateArgs>(args: SelectSubset<T, RolUpdateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rols.
     * @param {RolDeleteManyArgs} args - Arguments to filter Rols to delete.
     * @example
     * // Delete a few Rols
     * const { count } = await prisma.rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolDeleteManyArgs>(args?: SelectSubset<T, RolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolUpdateManyArgs>(args: SelectSubset<T, RolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols and returns the data updated in the database.
     * @param {RolUpdateManyAndReturnArgs} args - Arguments to update many Rols.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolUpdateManyAndReturnArgs>(args: SelectSubset<T, RolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol.
     * @param {RolUpsertArgs} args - Arguments to update or create a Rol.
     * @example
     * // Update or create a Rol
     * const rol = await prisma.rol.upsert({
     *   create: {
     *     // ... data to create a Rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol we want to update
     *   }
     * })
     */
    upsert<T extends RolUpsertArgs>(args: SelectSubset<T, RolUpsertArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolCountArgs} args - Arguments to filter Rols to count.
     * @example
     * // Count the number of Rols
     * const count = await prisma.rol.count({
     *   where: {
     *     // ... the filter for the Rols we want to count
     *   }
     * })
    **/
    count<T extends RolCountArgs>(
      args?: Subset<T, RolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolAggregateArgs>(args: Subset<T, RolAggregateArgs>): Prisma.PrismaPromise<GetRolAggregateType<T>>

    /**
     * Group by Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolGroupByArgs['orderBy'] }
        : { orderBy?: RolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rol model
   */
  readonly fields: RolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Rol$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Rol$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permisos<T extends Rol$permisosArgs<ExtArgs> = {}>(args?: Subset<T, Rol$permisosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rol model
   */
  interface RolFieldRefs {
    readonly id: FieldRef<"Rol", 'Int'>
    readonly nombre: FieldRef<"Rol", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Rol findUnique
   */
  export type RolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findUniqueOrThrow
   */
  export type RolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findFirst
   */
  export type RolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findFirstOrThrow
   */
  export type RolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findMany
   */
  export type RolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rols to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol create
   */
  export type RolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to create a Rol.
     */
    data: XOR<RolCreateInput, RolUncheckedCreateInput>
  }

  /**
   * Rol createMany
   */
  export type RolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol createManyAndReturn
   */
  export type RolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol update
   */
  export type RolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to update a Rol.
     */
    data: XOR<RolUpdateInput, RolUncheckedUpdateInput>
    /**
     * Choose, which Rol to update.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol updateMany
   */
  export type RolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol updateManyAndReturn
   */
  export type RolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol upsert
   */
  export type RolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The filter to search for the Rol to update in case it exists.
     */
    where: RolWhereUniqueInput
    /**
     * In case the Rol found by the `where` argument doesn't exist, create a new Rol with this data.
     */
    create: XOR<RolCreateInput, RolUncheckedCreateInput>
    /**
     * In case the Rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolUpdateInput, RolUncheckedUpdateInput>
  }

  /**
   * Rol delete
   */
  export type RolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter which Rol to delete.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol deleteMany
   */
  export type RolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rols to delete
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to delete.
     */
    limit?: number
  }

  /**
   * Rol.usuarios
   */
  export type Rol$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Rol.permisos
   */
  export type Rol$permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    where?: PermisoPorRolWhereInput
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    cursor?: PermisoPorRolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoPorRolScalarFieldEnum | PermisoPorRolScalarFieldEnum[]
  }

  /**
   * Rol without action
   */
  export type RolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
  }


  /**
   * Model Permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type PermisoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type PermisoCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id?: true
  }

  export type PermisoSumAggregateInputType = {
    id?: true
  }

  export type PermisoMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type PermisoMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type PermisoCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permiso to aggregate.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type PermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithAggregationInput | PermisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: PermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends PermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type PermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    roles?: boolean | Permiso$rolesArgs<ExtArgs>
    usuarios?: boolean | Permiso$usuariosArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type PermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion", ExtArgs["result"]["permiso"]>
  export type PermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | Permiso$rolesArgs<ExtArgs>
    usuarios?: boolean | Permiso$usuariosArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permiso"
    objects: {
      roles: Prisma.$PermisoPorRolPayload<ExtArgs>[]
      /**
       * ðŸ”¸ Usuarios con permisos directos
       */
      usuarios: Prisma.$PermisoUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type PermisoGetPayload<S extends boolean | null | undefined | PermisoDefaultArgs> = $Result.GetResult<Prisma.$PermisoPayload, S>

  type PermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface PermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permiso'], meta: { name: 'Permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {PermisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoFindUniqueArgs>(args: SelectSubset<T, PermisoFindUniqueArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoFindFirstArgs>(args?: SelectSubset<T, PermisoFindFirstArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoWithIdOnly = await prisma.permiso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermisoFindManyArgs>(args?: SelectSubset<T, PermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {PermisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends PermisoCreateArgs>(args: SelectSubset<T, PermisoCreateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {PermisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoCreateManyArgs>(args?: SelectSubset<T, PermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {PermisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {PermisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends PermisoDeleteArgs>(args: SelectSubset<T, PermisoDeleteArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {PermisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUpdateArgs>(args: SelectSubset<T, PermisoUpdateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {PermisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoDeleteManyArgs>(args?: SelectSubset<T, PermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUpdateManyArgs>(args: SelectSubset<T, PermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {PermisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {PermisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUpsertArgs>(args: SelectSubset<T, PermisoUpsertArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends PermisoCountArgs>(
      args?: Subset<T, PermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoGroupByArgs['orderBy'] }
        : { orderBy?: PermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permiso model
   */
  readonly fields: PermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles<T extends Permiso$rolesArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends Permiso$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permiso model
   */
  interface PermisoFieldRefs {
    readonly id: FieldRef<"Permiso", 'Int'>
    readonly nombre: FieldRef<"Permiso", 'String'>
    readonly descripcion: FieldRef<"Permiso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permiso findUnique
   */
  export type PermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findUniqueOrThrow
   */
  export type PermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findFirst
   */
  export type PermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findFirstOrThrow
   */
  export type PermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findMany
   */
  export type PermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permisos to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso create
   */
  export type PermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permiso.
     */
    data: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
  }

  /**
   * Permiso createMany
   */
  export type PermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso createManyAndReturn
   */
  export type PermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso update
   */
  export type PermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permiso.
     */
    data: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
    /**
     * Choose, which Permiso to update.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso updateMany
   */
  export type PermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso updateManyAndReturn
   */
  export type PermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso upsert
   */
  export type PermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permiso to update in case it exists.
     */
    where: PermisoWhereUniqueInput
    /**
     * In case the Permiso found by the `where` argument doesn't exist, create a new Permiso with this data.
     */
    create: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
    /**
     * In case the Permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
  }

  /**
   * Permiso delete
   */
  export type PermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter which Permiso to delete.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso deleteMany
   */
  export type PermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permisos to delete
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to delete.
     */
    limit?: number
  }

  /**
   * Permiso.roles
   */
  export type Permiso$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    where?: PermisoPorRolWhereInput
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    cursor?: PermisoPorRolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoPorRolScalarFieldEnum | PermisoPorRolScalarFieldEnum[]
  }

  /**
   * Permiso.usuarios
   */
  export type Permiso$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    where?: PermisoUsuarioWhereInput
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    cursor?: PermisoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoUsuarioScalarFieldEnum | PermisoUsuarioScalarFieldEnum[]
  }

  /**
   * Permiso without action
   */
  export type PermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
  }


  /**
   * Model PermisoPorRol
   */

  export type AggregatePermisoPorRol = {
    _count: PermisoPorRolCountAggregateOutputType | null
    _avg: PermisoPorRolAvgAggregateOutputType | null
    _sum: PermisoPorRolSumAggregateOutputType | null
    _min: PermisoPorRolMinAggregateOutputType | null
    _max: PermisoPorRolMaxAggregateOutputType | null
  }

  export type PermisoPorRolAvgAggregateOutputType = {
    id: number | null
    permisoId: number | null
    rolId: number | null
  }

  export type PermisoPorRolSumAggregateOutputType = {
    id: number | null
    permisoId: number | null
    rolId: number | null
  }

  export type PermisoPorRolMinAggregateOutputType = {
    id: number | null
    permisoId: number | null
    rolId: number | null
  }

  export type PermisoPorRolMaxAggregateOutputType = {
    id: number | null
    permisoId: number | null
    rolId: number | null
  }

  export type PermisoPorRolCountAggregateOutputType = {
    id: number
    permisoId: number
    rolId: number
    _all: number
  }


  export type PermisoPorRolAvgAggregateInputType = {
    id?: true
    permisoId?: true
    rolId?: true
  }

  export type PermisoPorRolSumAggregateInputType = {
    id?: true
    permisoId?: true
    rolId?: true
  }

  export type PermisoPorRolMinAggregateInputType = {
    id?: true
    permisoId?: true
    rolId?: true
  }

  export type PermisoPorRolMaxAggregateInputType = {
    id?: true
    permisoId?: true
    rolId?: true
  }

  export type PermisoPorRolCountAggregateInputType = {
    id?: true
    permisoId?: true
    rolId?: true
    _all?: true
  }

  export type PermisoPorRolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermisoPorRol to aggregate.
     */
    where?: PermisoPorRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoPorRols to fetch.
     */
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoPorRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoPorRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoPorRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PermisoPorRols
    **/
    _count?: true | PermisoPorRolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoPorRolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoPorRolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoPorRolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoPorRolMaxAggregateInputType
  }

  export type GetPermisoPorRolAggregateType<T extends PermisoPorRolAggregateArgs> = {
        [P in keyof T & keyof AggregatePermisoPorRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermisoPorRol[P]>
      : GetScalarType<T[P], AggregatePermisoPorRol[P]>
  }




  export type PermisoPorRolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoPorRolWhereInput
    orderBy?: PermisoPorRolOrderByWithAggregationInput | PermisoPorRolOrderByWithAggregationInput[]
    by: PermisoPorRolScalarFieldEnum[] | PermisoPorRolScalarFieldEnum
    having?: PermisoPorRolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoPorRolCountAggregateInputType | true
    _avg?: PermisoPorRolAvgAggregateInputType
    _sum?: PermisoPorRolSumAggregateInputType
    _min?: PermisoPorRolMinAggregateInputType
    _max?: PermisoPorRolMaxAggregateInputType
  }

  export type PermisoPorRolGroupByOutputType = {
    id: number
    permisoId: number
    rolId: number
    _count: PermisoPorRolCountAggregateOutputType | null
    _avg: PermisoPorRolAvgAggregateOutputType | null
    _sum: PermisoPorRolSumAggregateOutputType | null
    _min: PermisoPorRolMinAggregateOutputType | null
    _max: PermisoPorRolMaxAggregateOutputType | null
  }

  type GetPermisoPorRolGroupByPayload<T extends PermisoPorRolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoPorRolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoPorRolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoPorRolGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoPorRolGroupByOutputType[P]>
        }
      >
    >


  export type PermisoPorRolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permisoId?: boolean
    rolId?: boolean
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoPorRol"]>

  export type PermisoPorRolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permisoId?: boolean
    rolId?: boolean
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoPorRol"]>

  export type PermisoPorRolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permisoId?: boolean
    rolId?: boolean
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoPorRol"]>

  export type PermisoPorRolSelectScalar = {
    id?: boolean
    permisoId?: boolean
    rolId?: boolean
  }

  export type PermisoPorRolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "permisoId" | "rolId", ExtArgs["result"]["permisoPorRol"]>
  export type PermisoPorRolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type PermisoPorRolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type PermisoPorRolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
    rol?: boolean | RolDefaultArgs<ExtArgs>
  }

  export type $PermisoPorRolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PermisoPorRol"
    objects: {
      permiso: Prisma.$PermisoPayload<ExtArgs>
      rol: Prisma.$RolPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      permisoId: number
      rolId: number
    }, ExtArgs["result"]["permisoPorRol"]>
    composites: {}
  }

  type PermisoPorRolGetPayload<S extends boolean | null | undefined | PermisoPorRolDefaultArgs> = $Result.GetResult<Prisma.$PermisoPorRolPayload, S>

  type PermisoPorRolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoPorRolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoPorRolCountAggregateInputType | true
    }

  export interface PermisoPorRolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PermisoPorRol'], meta: { name: 'PermisoPorRol' } }
    /**
     * Find zero or one PermisoPorRol that matches the filter.
     * @param {PermisoPorRolFindUniqueArgs} args - Arguments to find a PermisoPorRol
     * @example
     * // Get one PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoPorRolFindUniqueArgs>(args: SelectSubset<T, PermisoPorRolFindUniqueArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PermisoPorRol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoPorRolFindUniqueOrThrowArgs} args - Arguments to find a PermisoPorRol
     * @example
     * // Get one PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoPorRolFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoPorRolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermisoPorRol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolFindFirstArgs} args - Arguments to find a PermisoPorRol
     * @example
     * // Get one PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoPorRolFindFirstArgs>(args?: SelectSubset<T, PermisoPorRolFindFirstArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermisoPorRol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolFindFirstOrThrowArgs} args - Arguments to find a PermisoPorRol
     * @example
     * // Get one PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoPorRolFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoPorRolFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PermisoPorRols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PermisoPorRols
     * const permisoPorRols = await prisma.permisoPorRol.findMany()
     * 
     * // Get first 10 PermisoPorRols
     * const permisoPorRols = await prisma.permisoPorRol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoPorRolWithIdOnly = await prisma.permisoPorRol.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermisoPorRolFindManyArgs>(args?: SelectSubset<T, PermisoPorRolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PermisoPorRol.
     * @param {PermisoPorRolCreateArgs} args - Arguments to create a PermisoPorRol.
     * @example
     * // Create one PermisoPorRol
     * const PermisoPorRol = await prisma.permisoPorRol.create({
     *   data: {
     *     // ... data to create a PermisoPorRol
     *   }
     * })
     * 
     */
    create<T extends PermisoPorRolCreateArgs>(args: SelectSubset<T, PermisoPorRolCreateArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PermisoPorRols.
     * @param {PermisoPorRolCreateManyArgs} args - Arguments to create many PermisoPorRols.
     * @example
     * // Create many PermisoPorRols
     * const permisoPorRol = await prisma.permisoPorRol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoPorRolCreateManyArgs>(args?: SelectSubset<T, PermisoPorRolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PermisoPorRols and returns the data saved in the database.
     * @param {PermisoPorRolCreateManyAndReturnArgs} args - Arguments to create many PermisoPorRols.
     * @example
     * // Create many PermisoPorRols
     * const permisoPorRol = await prisma.permisoPorRol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PermisoPorRols and only return the `id`
     * const permisoPorRolWithIdOnly = await prisma.permisoPorRol.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoPorRolCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoPorRolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PermisoPorRol.
     * @param {PermisoPorRolDeleteArgs} args - Arguments to delete one PermisoPorRol.
     * @example
     * // Delete one PermisoPorRol
     * const PermisoPorRol = await prisma.permisoPorRol.delete({
     *   where: {
     *     // ... filter to delete one PermisoPorRol
     *   }
     * })
     * 
     */
    delete<T extends PermisoPorRolDeleteArgs>(args: SelectSubset<T, PermisoPorRolDeleteArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PermisoPorRol.
     * @param {PermisoPorRolUpdateArgs} args - Arguments to update one PermisoPorRol.
     * @example
     * // Update one PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoPorRolUpdateArgs>(args: SelectSubset<T, PermisoPorRolUpdateArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PermisoPorRols.
     * @param {PermisoPorRolDeleteManyArgs} args - Arguments to filter PermisoPorRols to delete.
     * @example
     * // Delete a few PermisoPorRols
     * const { count } = await prisma.permisoPorRol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoPorRolDeleteManyArgs>(args?: SelectSubset<T, PermisoPorRolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermisoPorRols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PermisoPorRols
     * const permisoPorRol = await prisma.permisoPorRol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoPorRolUpdateManyArgs>(args: SelectSubset<T, PermisoPorRolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermisoPorRols and returns the data updated in the database.
     * @param {PermisoPorRolUpdateManyAndReturnArgs} args - Arguments to update many PermisoPorRols.
     * @example
     * // Update many PermisoPorRols
     * const permisoPorRol = await prisma.permisoPorRol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PermisoPorRols and only return the `id`
     * const permisoPorRolWithIdOnly = await prisma.permisoPorRol.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoPorRolUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoPorRolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PermisoPorRol.
     * @param {PermisoPorRolUpsertArgs} args - Arguments to update or create a PermisoPorRol.
     * @example
     * // Update or create a PermisoPorRol
     * const permisoPorRol = await prisma.permisoPorRol.upsert({
     *   create: {
     *     // ... data to create a PermisoPorRol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PermisoPorRol we want to update
     *   }
     * })
     */
    upsert<T extends PermisoPorRolUpsertArgs>(args: SelectSubset<T, PermisoPorRolUpsertArgs<ExtArgs>>): Prisma__PermisoPorRolClient<$Result.GetResult<Prisma.$PermisoPorRolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PermisoPorRols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolCountArgs} args - Arguments to filter PermisoPorRols to count.
     * @example
     * // Count the number of PermisoPorRols
     * const count = await prisma.permisoPorRol.count({
     *   where: {
     *     // ... the filter for the PermisoPorRols we want to count
     *   }
     * })
    **/
    count<T extends PermisoPorRolCountArgs>(
      args?: Subset<T, PermisoPorRolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoPorRolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PermisoPorRol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoPorRolAggregateArgs>(args: Subset<T, PermisoPorRolAggregateArgs>): Prisma.PrismaPromise<GetPermisoPorRolAggregateType<T>>

    /**
     * Group by PermisoPorRol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoPorRolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoPorRolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoPorRolGroupByArgs['orderBy'] }
        : { orderBy?: PermisoPorRolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoPorRolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoPorRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PermisoPorRol model
   */
  readonly fields: PermisoPorRolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PermisoPorRol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoPorRolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permiso<T extends PermisoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermisoDefaultArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PermisoPorRol model
   */
  interface PermisoPorRolFieldRefs {
    readonly id: FieldRef<"PermisoPorRol", 'Int'>
    readonly permisoId: FieldRef<"PermisoPorRol", 'Int'>
    readonly rolId: FieldRef<"PermisoPorRol", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PermisoPorRol findUnique
   */
  export type PermisoPorRolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter, which PermisoPorRol to fetch.
     */
    where: PermisoPorRolWhereUniqueInput
  }

  /**
   * PermisoPorRol findUniqueOrThrow
   */
  export type PermisoPorRolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter, which PermisoPorRol to fetch.
     */
    where: PermisoPorRolWhereUniqueInput
  }

  /**
   * PermisoPorRol findFirst
   */
  export type PermisoPorRolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter, which PermisoPorRol to fetch.
     */
    where?: PermisoPorRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoPorRols to fetch.
     */
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermisoPorRols.
     */
    cursor?: PermisoPorRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoPorRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoPorRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermisoPorRols.
     */
    distinct?: PermisoPorRolScalarFieldEnum | PermisoPorRolScalarFieldEnum[]
  }

  /**
   * PermisoPorRol findFirstOrThrow
   */
  export type PermisoPorRolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter, which PermisoPorRol to fetch.
     */
    where?: PermisoPorRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoPorRols to fetch.
     */
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermisoPorRols.
     */
    cursor?: PermisoPorRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoPorRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoPorRols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermisoPorRols.
     */
    distinct?: PermisoPorRolScalarFieldEnum | PermisoPorRolScalarFieldEnum[]
  }

  /**
   * PermisoPorRol findMany
   */
  export type PermisoPorRolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter, which PermisoPorRols to fetch.
     */
    where?: PermisoPorRolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoPorRols to fetch.
     */
    orderBy?: PermisoPorRolOrderByWithRelationInput | PermisoPorRolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PermisoPorRols.
     */
    cursor?: PermisoPorRolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoPorRols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoPorRols.
     */
    skip?: number
    distinct?: PermisoPorRolScalarFieldEnum | PermisoPorRolScalarFieldEnum[]
  }

  /**
   * PermisoPorRol create
   */
  export type PermisoPorRolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * The data needed to create a PermisoPorRol.
     */
    data: XOR<PermisoPorRolCreateInput, PermisoPorRolUncheckedCreateInput>
  }

  /**
   * PermisoPorRol createMany
   */
  export type PermisoPorRolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PermisoPorRols.
     */
    data: PermisoPorRolCreateManyInput | PermisoPorRolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PermisoPorRol createManyAndReturn
   */
  export type PermisoPorRolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * The data used to create many PermisoPorRols.
     */
    data: PermisoPorRolCreateManyInput | PermisoPorRolCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermisoPorRol update
   */
  export type PermisoPorRolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * The data needed to update a PermisoPorRol.
     */
    data: XOR<PermisoPorRolUpdateInput, PermisoPorRolUncheckedUpdateInput>
    /**
     * Choose, which PermisoPorRol to update.
     */
    where: PermisoPorRolWhereUniqueInput
  }

  /**
   * PermisoPorRol updateMany
   */
  export type PermisoPorRolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PermisoPorRols.
     */
    data: XOR<PermisoPorRolUpdateManyMutationInput, PermisoPorRolUncheckedUpdateManyInput>
    /**
     * Filter which PermisoPorRols to update
     */
    where?: PermisoPorRolWhereInput
    /**
     * Limit how many PermisoPorRols to update.
     */
    limit?: number
  }

  /**
   * PermisoPorRol updateManyAndReturn
   */
  export type PermisoPorRolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * The data used to update PermisoPorRols.
     */
    data: XOR<PermisoPorRolUpdateManyMutationInput, PermisoPorRolUncheckedUpdateManyInput>
    /**
     * Filter which PermisoPorRols to update
     */
    where?: PermisoPorRolWhereInput
    /**
     * Limit how many PermisoPorRols to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermisoPorRol upsert
   */
  export type PermisoPorRolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * The filter to search for the PermisoPorRol to update in case it exists.
     */
    where: PermisoPorRolWhereUniqueInput
    /**
     * In case the PermisoPorRol found by the `where` argument doesn't exist, create a new PermisoPorRol with this data.
     */
    create: XOR<PermisoPorRolCreateInput, PermisoPorRolUncheckedCreateInput>
    /**
     * In case the PermisoPorRol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoPorRolUpdateInput, PermisoPorRolUncheckedUpdateInput>
  }

  /**
   * PermisoPorRol delete
   */
  export type PermisoPorRolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
    /**
     * Filter which PermisoPorRol to delete.
     */
    where: PermisoPorRolWhereUniqueInput
  }

  /**
   * PermisoPorRol deleteMany
   */
  export type PermisoPorRolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermisoPorRols to delete
     */
    where?: PermisoPorRolWhereInput
    /**
     * Limit how many PermisoPorRols to delete.
     */
    limit?: number
  }

  /**
   * PermisoPorRol without action
   */
  export type PermisoPorRolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoPorRol
     */
    select?: PermisoPorRolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoPorRol
     */
    omit?: PermisoPorRolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoPorRolInclude<ExtArgs> | null
  }


  /**
   * Model PermisoUsuario
   */

  export type AggregatePermisoUsuario = {
    _count: PermisoUsuarioCountAggregateOutputType | null
    _avg: PermisoUsuarioAvgAggregateOutputType | null
    _sum: PermisoUsuarioSumAggregateOutputType | null
    _min: PermisoUsuarioMinAggregateOutputType | null
    _max: PermisoUsuarioMaxAggregateOutputType | null
  }

  export type PermisoUsuarioAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    permisoId: number | null
  }

  export type PermisoUsuarioSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    permisoId: number | null
  }

  export type PermisoUsuarioMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    permisoId: number | null
  }

  export type PermisoUsuarioMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    permisoId: number | null
  }

  export type PermisoUsuarioCountAggregateOutputType = {
    id: number
    usuarioId: number
    permisoId: number
    _all: number
  }


  export type PermisoUsuarioAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    permisoId?: true
  }

  export type PermisoUsuarioSumAggregateInputType = {
    id?: true
    usuarioId?: true
    permisoId?: true
  }

  export type PermisoUsuarioMinAggregateInputType = {
    id?: true
    usuarioId?: true
    permisoId?: true
  }

  export type PermisoUsuarioMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    permisoId?: true
  }

  export type PermisoUsuarioCountAggregateInputType = {
    id?: true
    usuarioId?: true
    permisoId?: true
    _all?: true
  }

  export type PermisoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermisoUsuario to aggregate.
     */
    where?: PermisoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoUsuarios to fetch.
     */
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PermisoUsuarios
    **/
    _count?: true | PermisoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoUsuarioMaxAggregateInputType
  }

  export type GetPermisoUsuarioAggregateType<T extends PermisoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregatePermisoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermisoUsuario[P]>
      : GetScalarType<T[P], AggregatePermisoUsuario[P]>
  }




  export type PermisoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoUsuarioWhereInput
    orderBy?: PermisoUsuarioOrderByWithAggregationInput | PermisoUsuarioOrderByWithAggregationInput[]
    by: PermisoUsuarioScalarFieldEnum[] | PermisoUsuarioScalarFieldEnum
    having?: PermisoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoUsuarioCountAggregateInputType | true
    _avg?: PermisoUsuarioAvgAggregateInputType
    _sum?: PermisoUsuarioSumAggregateInputType
    _min?: PermisoUsuarioMinAggregateInputType
    _max?: PermisoUsuarioMaxAggregateInputType
  }

  export type PermisoUsuarioGroupByOutputType = {
    id: number
    usuarioId: number
    permisoId: number
    _count: PermisoUsuarioCountAggregateOutputType | null
    _avg: PermisoUsuarioAvgAggregateOutputType | null
    _sum: PermisoUsuarioSumAggregateOutputType | null
    _min: PermisoUsuarioMinAggregateOutputType | null
    _max: PermisoUsuarioMaxAggregateOutputType | null
  }

  type GetPermisoUsuarioGroupByPayload<T extends PermisoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type PermisoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    permisoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoUsuario"]>

  export type PermisoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    permisoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoUsuario"]>

  export type PermisoUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    permisoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permisoUsuario"]>

  export type PermisoUsuarioSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    permisoId?: boolean
  }

  export type PermisoUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "permisoId", ExtArgs["result"]["permisoUsuario"]>
  export type PermisoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }
  export type PermisoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }
  export type PermisoUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permiso?: boolean | PermisoDefaultArgs<ExtArgs>
  }

  export type $PermisoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PermisoUsuario"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      permiso: Prisma.$PermisoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      permisoId: number
    }, ExtArgs["result"]["permisoUsuario"]>
    composites: {}
  }

  type PermisoUsuarioGetPayload<S extends boolean | null | undefined | PermisoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$PermisoUsuarioPayload, S>

  type PermisoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoUsuarioCountAggregateInputType | true
    }

  export interface PermisoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PermisoUsuario'], meta: { name: 'PermisoUsuario' } }
    /**
     * Find zero or one PermisoUsuario that matches the filter.
     * @param {PermisoUsuarioFindUniqueArgs} args - Arguments to find a PermisoUsuario
     * @example
     * // Get one PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoUsuarioFindUniqueArgs>(args: SelectSubset<T, PermisoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PermisoUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a PermisoUsuario
     * @example
     * // Get one PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermisoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioFindFirstArgs} args - Arguments to find a PermisoUsuario
     * @example
     * // Get one PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoUsuarioFindFirstArgs>(args?: SelectSubset<T, PermisoUsuarioFindFirstArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermisoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioFindFirstOrThrowArgs} args - Arguments to find a PermisoUsuario
     * @example
     * // Get one PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PermisoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PermisoUsuarios
     * const permisoUsuarios = await prisma.permisoUsuario.findMany()
     * 
     * // Get first 10 PermisoUsuarios
     * const permisoUsuarios = await prisma.permisoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoUsuarioWithIdOnly = await prisma.permisoUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermisoUsuarioFindManyArgs>(args?: SelectSubset<T, PermisoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PermisoUsuario.
     * @param {PermisoUsuarioCreateArgs} args - Arguments to create a PermisoUsuario.
     * @example
     * // Create one PermisoUsuario
     * const PermisoUsuario = await prisma.permisoUsuario.create({
     *   data: {
     *     // ... data to create a PermisoUsuario
     *   }
     * })
     * 
     */
    create<T extends PermisoUsuarioCreateArgs>(args: SelectSubset<T, PermisoUsuarioCreateArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PermisoUsuarios.
     * @param {PermisoUsuarioCreateManyArgs} args - Arguments to create many PermisoUsuarios.
     * @example
     * // Create many PermisoUsuarios
     * const permisoUsuario = await prisma.permisoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoUsuarioCreateManyArgs>(args?: SelectSubset<T, PermisoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PermisoUsuarios and returns the data saved in the database.
     * @param {PermisoUsuarioCreateManyAndReturnArgs} args - Arguments to create many PermisoUsuarios.
     * @example
     * // Create many PermisoUsuarios
     * const permisoUsuario = await prisma.permisoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PermisoUsuarios and only return the `id`
     * const permisoUsuarioWithIdOnly = await prisma.permisoUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PermisoUsuario.
     * @param {PermisoUsuarioDeleteArgs} args - Arguments to delete one PermisoUsuario.
     * @example
     * // Delete one PermisoUsuario
     * const PermisoUsuario = await prisma.permisoUsuario.delete({
     *   where: {
     *     // ... filter to delete one PermisoUsuario
     *   }
     * })
     * 
     */
    delete<T extends PermisoUsuarioDeleteArgs>(args: SelectSubset<T, PermisoUsuarioDeleteArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PermisoUsuario.
     * @param {PermisoUsuarioUpdateArgs} args - Arguments to update one PermisoUsuario.
     * @example
     * // Update one PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUsuarioUpdateArgs>(args: SelectSubset<T, PermisoUsuarioUpdateArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PermisoUsuarios.
     * @param {PermisoUsuarioDeleteManyArgs} args - Arguments to filter PermisoUsuarios to delete.
     * @example
     * // Delete a few PermisoUsuarios
     * const { count } = await prisma.permisoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoUsuarioDeleteManyArgs>(args?: SelectSubset<T, PermisoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermisoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PermisoUsuarios
     * const permisoUsuario = await prisma.permisoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUsuarioUpdateManyArgs>(args: SelectSubset<T, PermisoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermisoUsuarios and returns the data updated in the database.
     * @param {PermisoUsuarioUpdateManyAndReturnArgs} args - Arguments to update many PermisoUsuarios.
     * @example
     * // Update many PermisoUsuarios
     * const permisoUsuario = await prisma.permisoUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PermisoUsuarios and only return the `id`
     * const permisoUsuarioWithIdOnly = await prisma.permisoUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PermisoUsuario.
     * @param {PermisoUsuarioUpsertArgs} args - Arguments to update or create a PermisoUsuario.
     * @example
     * // Update or create a PermisoUsuario
     * const permisoUsuario = await prisma.permisoUsuario.upsert({
     *   create: {
     *     // ... data to create a PermisoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PermisoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUsuarioUpsertArgs>(args: SelectSubset<T, PermisoUsuarioUpsertArgs<ExtArgs>>): Prisma__PermisoUsuarioClient<$Result.GetResult<Prisma.$PermisoUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PermisoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioCountArgs} args - Arguments to filter PermisoUsuarios to count.
     * @example
     * // Count the number of PermisoUsuarios
     * const count = await prisma.permisoUsuario.count({
     *   where: {
     *     // ... the filter for the PermisoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends PermisoUsuarioCountArgs>(
      args?: Subset<T, PermisoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PermisoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoUsuarioAggregateArgs>(args: Subset<T, PermisoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetPermisoUsuarioAggregateType<T>>

    /**
     * Group by PermisoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: PermisoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PermisoUsuario model
   */
  readonly fields: PermisoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PermisoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permiso<T extends PermisoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermisoDefaultArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PermisoUsuario model
   */
  interface PermisoUsuarioFieldRefs {
    readonly id: FieldRef<"PermisoUsuario", 'Int'>
    readonly usuarioId: FieldRef<"PermisoUsuario", 'Int'>
    readonly permisoId: FieldRef<"PermisoUsuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PermisoUsuario findUnique
   */
  export type PermisoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which PermisoUsuario to fetch.
     */
    where: PermisoUsuarioWhereUniqueInput
  }

  /**
   * PermisoUsuario findUniqueOrThrow
   */
  export type PermisoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which PermisoUsuario to fetch.
     */
    where: PermisoUsuarioWhereUniqueInput
  }

  /**
   * PermisoUsuario findFirst
   */
  export type PermisoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which PermisoUsuario to fetch.
     */
    where?: PermisoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoUsuarios to fetch.
     */
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermisoUsuarios.
     */
    cursor?: PermisoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermisoUsuarios.
     */
    distinct?: PermisoUsuarioScalarFieldEnum | PermisoUsuarioScalarFieldEnum[]
  }

  /**
   * PermisoUsuario findFirstOrThrow
   */
  export type PermisoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which PermisoUsuario to fetch.
     */
    where?: PermisoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoUsuarios to fetch.
     */
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermisoUsuarios.
     */
    cursor?: PermisoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermisoUsuarios.
     */
    distinct?: PermisoUsuarioScalarFieldEnum | PermisoUsuarioScalarFieldEnum[]
  }

  /**
   * PermisoUsuario findMany
   */
  export type PermisoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which PermisoUsuarios to fetch.
     */
    where?: PermisoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermisoUsuarios to fetch.
     */
    orderBy?: PermisoUsuarioOrderByWithRelationInput | PermisoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PermisoUsuarios.
     */
    cursor?: PermisoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PermisoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermisoUsuarios.
     */
    skip?: number
    distinct?: PermisoUsuarioScalarFieldEnum | PermisoUsuarioScalarFieldEnum[]
  }

  /**
   * PermisoUsuario create
   */
  export type PermisoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a PermisoUsuario.
     */
    data: XOR<PermisoUsuarioCreateInput, PermisoUsuarioUncheckedCreateInput>
  }

  /**
   * PermisoUsuario createMany
   */
  export type PermisoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PermisoUsuarios.
     */
    data: PermisoUsuarioCreateManyInput | PermisoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PermisoUsuario createManyAndReturn
   */
  export type PermisoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many PermisoUsuarios.
     */
    data: PermisoUsuarioCreateManyInput | PermisoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermisoUsuario update
   */
  export type PermisoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a PermisoUsuario.
     */
    data: XOR<PermisoUsuarioUpdateInput, PermisoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which PermisoUsuario to update.
     */
    where: PermisoUsuarioWhereUniqueInput
  }

  /**
   * PermisoUsuario updateMany
   */
  export type PermisoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PermisoUsuarios.
     */
    data: XOR<PermisoUsuarioUpdateManyMutationInput, PermisoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which PermisoUsuarios to update
     */
    where?: PermisoUsuarioWhereInput
    /**
     * Limit how many PermisoUsuarios to update.
     */
    limit?: number
  }

  /**
   * PermisoUsuario updateManyAndReturn
   */
  export type PermisoUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update PermisoUsuarios.
     */
    data: XOR<PermisoUsuarioUpdateManyMutationInput, PermisoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which PermisoUsuarios to update
     */
    where?: PermisoUsuarioWhereInput
    /**
     * Limit how many PermisoUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermisoUsuario upsert
   */
  export type PermisoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the PermisoUsuario to update in case it exists.
     */
    where: PermisoUsuarioWhereUniqueInput
    /**
     * In case the PermisoUsuario found by the `where` argument doesn't exist, create a new PermisoUsuario with this data.
     */
    create: XOR<PermisoUsuarioCreateInput, PermisoUsuarioUncheckedCreateInput>
    /**
     * In case the PermisoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUsuarioUpdateInput, PermisoUsuarioUncheckedUpdateInput>
  }

  /**
   * PermisoUsuario delete
   */
  export type PermisoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which PermisoUsuario to delete.
     */
    where: PermisoUsuarioWhereUniqueInput
  }

  /**
   * PermisoUsuario deleteMany
   */
  export type PermisoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermisoUsuarios to delete
     */
    where?: PermisoUsuarioWhereInput
    /**
     * Limit how many PermisoUsuarios to delete.
     */
    limit?: number
  }

  /**
   * PermisoUsuario without action
   */
  export type PermisoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoUsuario
     */
    select?: PermisoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermisoUsuario
     */
    omit?: PermisoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model PasswordHistory
   */

  export type AggregatePasswordHistory = {
    _count: PasswordHistoryCountAggregateOutputType | null
    _avg: PasswordHistoryAvgAggregateOutputType | null
    _sum: PasswordHistorySumAggregateOutputType | null
    _min: PasswordHistoryMinAggregateOutputType | null
    _max: PasswordHistoryMaxAggregateOutputType | null
  }

  export type PasswordHistoryAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PasswordHistorySumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PasswordHistoryMinAggregateOutputType = {
    id: number | null
    userId: number | null
    hash: string | null
    createdAt: Date | null
  }

  export type PasswordHistoryMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    hash: string | null
    createdAt: Date | null
  }

  export type PasswordHistoryCountAggregateOutputType = {
    id: number
    userId: number
    hash: number
    createdAt: number
    _all: number
  }


  export type PasswordHistoryAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PasswordHistorySumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PasswordHistoryMinAggregateInputType = {
    id?: true
    userId?: true
    hash?: true
    createdAt?: true
  }

  export type PasswordHistoryMaxAggregateInputType = {
    id?: true
    userId?: true
    hash?: true
    createdAt?: true
  }

  export type PasswordHistoryCountAggregateInputType = {
    id?: true
    userId?: true
    hash?: true
    createdAt?: true
    _all?: true
  }

  export type PasswordHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordHistory to aggregate.
     */
    where?: PasswordHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordHistories to fetch.
     */
    orderBy?: PasswordHistoryOrderByWithRelationInput | PasswordHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PasswordHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordHistories
    **/
    _count?: true | PasswordHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PasswordHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PasswordHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordHistoryMaxAggregateInputType
  }

  export type GetPasswordHistoryAggregateType<T extends PasswordHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordHistory[P]>
      : GetScalarType<T[P], AggregatePasswordHistory[P]>
  }




  export type PasswordHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordHistoryWhereInput
    orderBy?: PasswordHistoryOrderByWithAggregationInput | PasswordHistoryOrderByWithAggregationInput[]
    by: PasswordHistoryScalarFieldEnum[] | PasswordHistoryScalarFieldEnum
    having?: PasswordHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordHistoryCountAggregateInputType | true
    _avg?: PasswordHistoryAvgAggregateInputType
    _sum?: PasswordHistorySumAggregateInputType
    _min?: PasswordHistoryMinAggregateInputType
    _max?: PasswordHistoryMaxAggregateInputType
  }

  export type PasswordHistoryGroupByOutputType = {
    id: number
    userId: number
    hash: string
    createdAt: Date
    _count: PasswordHistoryCountAggregateOutputType | null
    _avg: PasswordHistoryAvgAggregateOutputType | null
    _sum: PasswordHistorySumAggregateOutputType | null
    _min: PasswordHistoryMinAggregateOutputType | null
    _max: PasswordHistoryMaxAggregateOutputType | null
  }

  type GetPasswordHistoryGroupByPayload<T extends PasswordHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordHistoryGroupByOutputType[P]>
        }
      >
    >


  export type PasswordHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    hash?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordHistory"]>

  export type PasswordHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    hash?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordHistory"]>

  export type PasswordHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    hash?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordHistory"]>

  export type PasswordHistorySelectScalar = {
    id?: boolean
    userId?: boolean
    hash?: boolean
    createdAt?: boolean
  }

  export type PasswordHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "hash" | "createdAt", ExtArgs["result"]["passwordHistory"]>
  export type PasswordHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type PasswordHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type PasswordHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $PasswordHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordHistory"
    objects: {
      user: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      hash: string
      createdAt: Date
    }, ExtArgs["result"]["passwordHistory"]>
    composites: {}
  }

  type PasswordHistoryGetPayload<S extends boolean | null | undefined | PasswordHistoryDefaultArgs> = $Result.GetResult<Prisma.$PasswordHistoryPayload, S>

  type PasswordHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordHistoryCountAggregateInputType | true
    }

  export interface PasswordHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordHistory'], meta: { name: 'PasswordHistory' } }
    /**
     * Find zero or one PasswordHistory that matches the filter.
     * @param {PasswordHistoryFindUniqueArgs} args - Arguments to find a PasswordHistory
     * @example
     * // Get one PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordHistoryFindUniqueArgs>(args: SelectSubset<T, PasswordHistoryFindUniqueArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordHistoryFindUniqueOrThrowArgs} args - Arguments to find a PasswordHistory
     * @example
     * // Get one PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryFindFirstArgs} args - Arguments to find a PasswordHistory
     * @example
     * // Get one PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordHistoryFindFirstArgs>(args?: SelectSubset<T, PasswordHistoryFindFirstArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryFindFirstOrThrowArgs} args - Arguments to find a PasswordHistory
     * @example
     * // Get one PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordHistories
     * const passwordHistories = await prisma.passwordHistory.findMany()
     * 
     * // Get first 10 PasswordHistories
     * const passwordHistories = await prisma.passwordHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const passwordHistoryWithIdOnly = await prisma.passwordHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PasswordHistoryFindManyArgs>(args?: SelectSubset<T, PasswordHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordHistory.
     * @param {PasswordHistoryCreateArgs} args - Arguments to create a PasswordHistory.
     * @example
     * // Create one PasswordHistory
     * const PasswordHistory = await prisma.passwordHistory.create({
     *   data: {
     *     // ... data to create a PasswordHistory
     *   }
     * })
     * 
     */
    create<T extends PasswordHistoryCreateArgs>(args: SelectSubset<T, PasswordHistoryCreateArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordHistories.
     * @param {PasswordHistoryCreateManyArgs} args - Arguments to create many PasswordHistories.
     * @example
     * // Create many PasswordHistories
     * const passwordHistory = await prisma.passwordHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordHistoryCreateManyArgs>(args?: SelectSubset<T, PasswordHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordHistories and returns the data saved in the database.
     * @param {PasswordHistoryCreateManyAndReturnArgs} args - Arguments to create many PasswordHistories.
     * @example
     * // Create many PasswordHistories
     * const passwordHistory = await prisma.passwordHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordHistories and only return the `id`
     * const passwordHistoryWithIdOnly = await prisma.passwordHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordHistory.
     * @param {PasswordHistoryDeleteArgs} args - Arguments to delete one PasswordHistory.
     * @example
     * // Delete one PasswordHistory
     * const PasswordHistory = await prisma.passwordHistory.delete({
     *   where: {
     *     // ... filter to delete one PasswordHistory
     *   }
     * })
     * 
     */
    delete<T extends PasswordHistoryDeleteArgs>(args: SelectSubset<T, PasswordHistoryDeleteArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordHistory.
     * @param {PasswordHistoryUpdateArgs} args - Arguments to update one PasswordHistory.
     * @example
     * // Update one PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordHistoryUpdateArgs>(args: SelectSubset<T, PasswordHistoryUpdateArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordHistories.
     * @param {PasswordHistoryDeleteManyArgs} args - Arguments to filter PasswordHistories to delete.
     * @example
     * // Delete a few PasswordHistories
     * const { count } = await prisma.passwordHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordHistoryDeleteManyArgs>(args?: SelectSubset<T, PasswordHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordHistories
     * const passwordHistory = await prisma.passwordHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordHistoryUpdateManyArgs>(args: SelectSubset<T, PasswordHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordHistories and returns the data updated in the database.
     * @param {PasswordHistoryUpdateManyAndReturnArgs} args - Arguments to update many PasswordHistories.
     * @example
     * // Update many PasswordHistories
     * const passwordHistory = await prisma.passwordHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordHistories and only return the `id`
     * const passwordHistoryWithIdOnly = await prisma.passwordHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordHistory.
     * @param {PasswordHistoryUpsertArgs} args - Arguments to update or create a PasswordHistory.
     * @example
     * // Update or create a PasswordHistory
     * const passwordHistory = await prisma.passwordHistory.upsert({
     *   create: {
     *     // ... data to create a PasswordHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordHistory we want to update
     *   }
     * })
     */
    upsert<T extends PasswordHistoryUpsertArgs>(args: SelectSubset<T, PasswordHistoryUpsertArgs<ExtArgs>>): Prisma__PasswordHistoryClient<$Result.GetResult<Prisma.$PasswordHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryCountArgs} args - Arguments to filter PasswordHistories to count.
     * @example
     * // Count the number of PasswordHistories
     * const count = await prisma.passwordHistory.count({
     *   where: {
     *     // ... the filter for the PasswordHistories we want to count
     *   }
     * })
    **/
    count<T extends PasswordHistoryCountArgs>(
      args?: Subset<T, PasswordHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordHistoryAggregateArgs>(args: Subset<T, PasswordHistoryAggregateArgs>): Prisma.PrismaPromise<GetPasswordHistoryAggregateType<T>>

    /**
     * Group by PasswordHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordHistoryGroupByArgs['orderBy'] }
        : { orderBy?: PasswordHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordHistory model
   */
  readonly fields: PasswordHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordHistory model
   */
  interface PasswordHistoryFieldRefs {
    readonly id: FieldRef<"PasswordHistory", 'Int'>
    readonly userId: FieldRef<"PasswordHistory", 'Int'>
    readonly hash: FieldRef<"PasswordHistory", 'String'>
    readonly createdAt: FieldRef<"PasswordHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordHistory findUnique
   */
  export type PasswordHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PasswordHistory to fetch.
     */
    where: PasswordHistoryWhereUniqueInput
  }

  /**
   * PasswordHistory findUniqueOrThrow
   */
  export type PasswordHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PasswordHistory to fetch.
     */
    where: PasswordHistoryWhereUniqueInput
  }

  /**
   * PasswordHistory findFirst
   */
  export type PasswordHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PasswordHistory to fetch.
     */
    where?: PasswordHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordHistories to fetch.
     */
    orderBy?: PasswordHistoryOrderByWithRelationInput | PasswordHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordHistories.
     */
    cursor?: PasswordHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PasswordHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordHistories.
     */
    distinct?: PasswordHistoryScalarFieldEnum | PasswordHistoryScalarFieldEnum[]
  }

  /**
   * PasswordHistory findFirstOrThrow
   */
  export type PasswordHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PasswordHistory to fetch.
     */
    where?: PasswordHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordHistories to fetch.
     */
    orderBy?: PasswordHistoryOrderByWithRelationInput | PasswordHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordHistories.
     */
    cursor?: PasswordHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PasswordHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordHistories.
     */
    distinct?: PasswordHistoryScalarFieldEnum | PasswordHistoryScalarFieldEnum[]
  }

  /**
   * PasswordHistory findMany
   */
  export type PasswordHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PasswordHistories to fetch.
     */
    where?: PasswordHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordHistories to fetch.
     */
    orderBy?: PasswordHistoryOrderByWithRelationInput | PasswordHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordHistories.
     */
    cursor?: PasswordHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PasswordHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordHistories.
     */
    skip?: number
    distinct?: PasswordHistoryScalarFieldEnum | PasswordHistoryScalarFieldEnum[]
  }

  /**
   * PasswordHistory create
   */
  export type PasswordHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a PasswordHistory.
     */
    data: XOR<PasswordHistoryCreateInput, PasswordHistoryUncheckedCreateInput>
  }

  /**
   * PasswordHistory createMany
   */
  export type PasswordHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordHistories.
     */
    data: PasswordHistoryCreateManyInput | PasswordHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordHistory createManyAndReturn
   */
  export type PasswordHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordHistories.
     */
    data: PasswordHistoryCreateManyInput | PasswordHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordHistory update
   */
  export type PasswordHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a PasswordHistory.
     */
    data: XOR<PasswordHistoryUpdateInput, PasswordHistoryUncheckedUpdateInput>
    /**
     * Choose, which PasswordHistory to update.
     */
    where: PasswordHistoryWhereUniqueInput
  }

  /**
   * PasswordHistory updateMany
   */
  export type PasswordHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordHistories.
     */
    data: XOR<PasswordHistoryUpdateManyMutationInput, PasswordHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PasswordHistories to update
     */
    where?: PasswordHistoryWhereInput
    /**
     * Limit how many PasswordHistories to update.
     */
    limit?: number
  }

  /**
   * PasswordHistory updateManyAndReturn
   */
  export type PasswordHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * The data used to update PasswordHistories.
     */
    data: XOR<PasswordHistoryUpdateManyMutationInput, PasswordHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PasswordHistories to update
     */
    where?: PasswordHistoryWhereInput
    /**
     * Limit how many PasswordHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordHistory upsert
   */
  export type PasswordHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the PasswordHistory to update in case it exists.
     */
    where: PasswordHistoryWhereUniqueInput
    /**
     * In case the PasswordHistory found by the `where` argument doesn't exist, create a new PasswordHistory with this data.
     */
    create: XOR<PasswordHistoryCreateInput, PasswordHistoryUncheckedCreateInput>
    /**
     * In case the PasswordHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordHistoryUpdateInput, PasswordHistoryUncheckedUpdateInput>
  }

  /**
   * PasswordHistory delete
   */
  export type PasswordHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
    /**
     * Filter which PasswordHistory to delete.
     */
    where: PasswordHistoryWhereUniqueInput
  }

  /**
   * PasswordHistory deleteMany
   */
  export type PasswordHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordHistories to delete
     */
    where?: PasswordHistoryWhereInput
    /**
     * Limit how many PasswordHistories to delete.
     */
    limit?: number
  }

  /**
   * PasswordHistory without action
   */
  export type PasswordHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordHistory
     */
    select?: PasswordHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordHistory
     */
    omit?: PasswordHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordHistoryInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    activo: boolean | null
    creadoEn: Date | null
    tipo: $Enums.CategoriaTipo | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    activo: boolean | null
    creadoEn: Date | null
    tipo: $Enums.CategoriaTipo | null
  }

  export type CategoriaCountAggregateOutputType = {
    id: number
    nombre: number
    activo: number
    creadoEn: number
    tipo: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id?: true
  }

  export type CategoriaSumAggregateInputType = {
    id?: true
  }

  export type CategoriaMinAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
    creadoEn?: true
    tipo?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
    creadoEn?: true
    tipo?: true
  }

  export type CategoriaCountAggregateInputType = {
    id?: true
    nombre?: true
    activo?: true
    creadoEn?: true
    tipo?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id: number
    nombre: string
    activo: boolean
    creadoEn: Date
    tipo: $Enums.CategoriaTipo
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    activo?: boolean
    creadoEn?: boolean
    tipo?: boolean
    platillos?: boolean | Categoria$platillosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    activo?: boolean
    creadoEn?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    activo?: boolean
    creadoEn?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    id?: boolean
    nombre?: boolean
    activo?: boolean
    creadoEn?: boolean
    tipo?: boolean
  }

  export type CategoriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "activo" | "creadoEn" | "tipo", ExtArgs["result"]["categoria"]>
  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    platillos?: boolean | Categoria$platillosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      platillos: Prisma.$PlatilloPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      activo: boolean
      creadoEn: Date
      tipo: $Enums.CategoriaTipo
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaWithIdOnly = await prisma.categoria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {CategoriaUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    platillos<T extends Categoria$platillosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$platillosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */
  interface CategoriaFieldRefs {
    readonly id: FieldRef<"Categoria", 'Int'>
    readonly nombre: FieldRef<"Categoria", 'String'>
    readonly activo: FieldRef<"Categoria", 'Boolean'>
    readonly creadoEn: FieldRef<"Categoria", 'DateTime'>
    readonly tipo: FieldRef<"Categoria", 'CategoriaTipo'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria updateManyAndReturn
   */
  export type CategoriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to delete.
     */
    limit?: number
  }

  /**
   * Categoria.platillos
   */
  export type Categoria$platillosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    where?: PlatilloWhereInput
    orderBy?: PlatilloOrderByWithRelationInput | PlatilloOrderByWithRelationInput[]
    cursor?: PlatilloWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlatilloScalarFieldEnum | PlatilloScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model Platillo
   */

  export type AggregatePlatillo = {
    _count: PlatilloCountAggregateOutputType | null
    _avg: PlatilloAvgAggregateOutputType | null
    _sum: PlatilloSumAggregateOutputType | null
    _min: PlatilloMinAggregateOutputType | null
    _max: PlatilloMaxAggregateOutputType | null
  }

  export type PlatilloAvgAggregateOutputType = {
    id: number | null
    precio: number | null
    categoriaId: number | null
  }

  export type PlatilloSumAggregateOutputType = {
    id: number | null
    precio: number | null
    categoriaId: number | null
  }

  export type PlatilloMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    precio: number | null
    creadoEn: Date | null
    disponible: boolean | null
    imagenUrl: string | null
    categoriaId: number | null
  }

  export type PlatilloMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    precio: number | null
    creadoEn: Date | null
    disponible: boolean | null
    imagenUrl: string | null
    categoriaId: number | null
  }

  export type PlatilloCountAggregateOutputType = {
    id: number
    nombre: number
    precio: number
    creadoEn: number
    disponible: number
    imagenUrl: number
    categoriaId: number
    _all: number
  }


  export type PlatilloAvgAggregateInputType = {
    id?: true
    precio?: true
    categoriaId?: true
  }

  export type PlatilloSumAggregateInputType = {
    id?: true
    precio?: true
    categoriaId?: true
  }

  export type PlatilloMinAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    creadoEn?: true
    disponible?: true
    imagenUrl?: true
    categoriaId?: true
  }

  export type PlatilloMaxAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    creadoEn?: true
    disponible?: true
    imagenUrl?: true
    categoriaId?: true
  }

  export type PlatilloCountAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    creadoEn?: true
    disponible?: true
    imagenUrl?: true
    categoriaId?: true
    _all?: true
  }

  export type PlatilloAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Platillo to aggregate.
     */
    where?: PlatilloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Platillos to fetch.
     */
    orderBy?: PlatilloOrderByWithRelationInput | PlatilloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlatilloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Platillos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Platillos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Platillos
    **/
    _count?: true | PlatilloCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlatilloAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlatilloSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlatilloMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlatilloMaxAggregateInputType
  }

  export type GetPlatilloAggregateType<T extends PlatilloAggregateArgs> = {
        [P in keyof T & keyof AggregatePlatillo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlatillo[P]>
      : GetScalarType<T[P], AggregatePlatillo[P]>
  }




  export type PlatilloGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlatilloWhereInput
    orderBy?: PlatilloOrderByWithAggregationInput | PlatilloOrderByWithAggregationInput[]
    by: PlatilloScalarFieldEnum[] | PlatilloScalarFieldEnum
    having?: PlatilloScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlatilloCountAggregateInputType | true
    _avg?: PlatilloAvgAggregateInputType
    _sum?: PlatilloSumAggregateInputType
    _min?: PlatilloMinAggregateInputType
    _max?: PlatilloMaxAggregateInputType
  }

  export type PlatilloGroupByOutputType = {
    id: number
    nombre: string
    precio: number
    creadoEn: Date
    disponible: boolean
    imagenUrl: string | null
    categoriaId: number
    _count: PlatilloCountAggregateOutputType | null
    _avg: PlatilloAvgAggregateOutputType | null
    _sum: PlatilloSumAggregateOutputType | null
    _min: PlatilloMinAggregateOutputType | null
    _max: PlatilloMaxAggregateOutputType | null
  }

  type GetPlatilloGroupByPayload<T extends PlatilloGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlatilloGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlatilloGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlatilloGroupByOutputType[P]>
            : GetScalarType<T[P], PlatilloGroupByOutputType[P]>
        }
      >
    >


  export type PlatilloSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    creadoEn?: boolean
    disponible?: boolean
    imagenUrl?: boolean
    categoriaId?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    historialModificaciones?: boolean | Platillo$historialModificacionesArgs<ExtArgs>
    _count?: boolean | PlatilloCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["platillo"]>

  export type PlatilloSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    creadoEn?: boolean
    disponible?: boolean
    imagenUrl?: boolean
    categoriaId?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["platillo"]>

  export type PlatilloSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    creadoEn?: boolean
    disponible?: boolean
    imagenUrl?: boolean
    categoriaId?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["platillo"]>

  export type PlatilloSelectScalar = {
    id?: boolean
    nombre?: boolean
    precio?: boolean
    creadoEn?: boolean
    disponible?: boolean
    imagenUrl?: boolean
    categoriaId?: boolean
  }

  export type PlatilloOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "precio" | "creadoEn" | "disponible" | "imagenUrl" | "categoriaId", ExtArgs["result"]["platillo"]>
  export type PlatilloInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    historialModificaciones?: boolean | Platillo$historialModificacionesArgs<ExtArgs>
    _count?: boolean | PlatilloCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PlatilloIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }
  export type PlatilloIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
  }

  export type $PlatilloPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Platillo"
    objects: {
      categoria: Prisma.$CategoriaPayload<ExtArgs>
      historialModificaciones: Prisma.$HistorialModificacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      precio: number
      creadoEn: Date
      disponible: boolean
      imagenUrl: string | null
      categoriaId: number
    }, ExtArgs["result"]["platillo"]>
    composites: {}
  }

  type PlatilloGetPayload<S extends boolean | null | undefined | PlatilloDefaultArgs> = $Result.GetResult<Prisma.$PlatilloPayload, S>

  type PlatilloCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PlatilloFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PlatilloCountAggregateInputType | true
    }

  export interface PlatilloDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Platillo'], meta: { name: 'Platillo' } }
    /**
     * Find zero or one Platillo that matches the filter.
     * @param {PlatilloFindUniqueArgs} args - Arguments to find a Platillo
     * @example
     * // Get one Platillo
     * const platillo = await prisma.platillo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlatilloFindUniqueArgs>(args: SelectSubset<T, PlatilloFindUniqueArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Platillo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PlatilloFindUniqueOrThrowArgs} args - Arguments to find a Platillo
     * @example
     * // Get one Platillo
     * const platillo = await prisma.platillo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlatilloFindUniqueOrThrowArgs>(args: SelectSubset<T, PlatilloFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Platillo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloFindFirstArgs} args - Arguments to find a Platillo
     * @example
     * // Get one Platillo
     * const platillo = await prisma.platillo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlatilloFindFirstArgs>(args?: SelectSubset<T, PlatilloFindFirstArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Platillo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloFindFirstOrThrowArgs} args - Arguments to find a Platillo
     * @example
     * // Get one Platillo
     * const platillo = await prisma.platillo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlatilloFindFirstOrThrowArgs>(args?: SelectSubset<T, PlatilloFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Platillos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Platillos
     * const platillos = await prisma.platillo.findMany()
     * 
     * // Get first 10 Platillos
     * const platillos = await prisma.platillo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const platilloWithIdOnly = await prisma.platillo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlatilloFindManyArgs>(args?: SelectSubset<T, PlatilloFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Platillo.
     * @param {PlatilloCreateArgs} args - Arguments to create a Platillo.
     * @example
     * // Create one Platillo
     * const Platillo = await prisma.platillo.create({
     *   data: {
     *     // ... data to create a Platillo
     *   }
     * })
     * 
     */
    create<T extends PlatilloCreateArgs>(args: SelectSubset<T, PlatilloCreateArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Platillos.
     * @param {PlatilloCreateManyArgs} args - Arguments to create many Platillos.
     * @example
     * // Create many Platillos
     * const platillo = await prisma.platillo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlatilloCreateManyArgs>(args?: SelectSubset<T, PlatilloCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Platillos and returns the data saved in the database.
     * @param {PlatilloCreateManyAndReturnArgs} args - Arguments to create many Platillos.
     * @example
     * // Create many Platillos
     * const platillo = await prisma.platillo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Platillos and only return the `id`
     * const platilloWithIdOnly = await prisma.platillo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlatilloCreateManyAndReturnArgs>(args?: SelectSubset<T, PlatilloCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Platillo.
     * @param {PlatilloDeleteArgs} args - Arguments to delete one Platillo.
     * @example
     * // Delete one Platillo
     * const Platillo = await prisma.platillo.delete({
     *   where: {
     *     // ... filter to delete one Platillo
     *   }
     * })
     * 
     */
    delete<T extends PlatilloDeleteArgs>(args: SelectSubset<T, PlatilloDeleteArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Platillo.
     * @param {PlatilloUpdateArgs} args - Arguments to update one Platillo.
     * @example
     * // Update one Platillo
     * const platillo = await prisma.platillo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlatilloUpdateArgs>(args: SelectSubset<T, PlatilloUpdateArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Platillos.
     * @param {PlatilloDeleteManyArgs} args - Arguments to filter Platillos to delete.
     * @example
     * // Delete a few Platillos
     * const { count } = await prisma.platillo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlatilloDeleteManyArgs>(args?: SelectSubset<T, PlatilloDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Platillos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Platillos
     * const platillo = await prisma.platillo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlatilloUpdateManyArgs>(args: SelectSubset<T, PlatilloUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Platillos and returns the data updated in the database.
     * @param {PlatilloUpdateManyAndReturnArgs} args - Arguments to update many Platillos.
     * @example
     * // Update many Platillos
     * const platillo = await prisma.platillo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Platillos and only return the `id`
     * const platilloWithIdOnly = await prisma.platillo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PlatilloUpdateManyAndReturnArgs>(args: SelectSubset<T, PlatilloUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Platillo.
     * @param {PlatilloUpsertArgs} args - Arguments to update or create a Platillo.
     * @example
     * // Update or create a Platillo
     * const platillo = await prisma.platillo.upsert({
     *   create: {
     *     // ... data to create a Platillo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Platillo we want to update
     *   }
     * })
     */
    upsert<T extends PlatilloUpsertArgs>(args: SelectSubset<T, PlatilloUpsertArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Platillos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloCountArgs} args - Arguments to filter Platillos to count.
     * @example
     * // Count the number of Platillos
     * const count = await prisma.platillo.count({
     *   where: {
     *     // ... the filter for the Platillos we want to count
     *   }
     * })
    **/
    count<T extends PlatilloCountArgs>(
      args?: Subset<T, PlatilloCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlatilloCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Platillo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlatilloAggregateArgs>(args: Subset<T, PlatilloAggregateArgs>): Prisma.PrismaPromise<GetPlatilloAggregateType<T>>

    /**
     * Group by Platillo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatilloGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlatilloGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlatilloGroupByArgs['orderBy'] }
        : { orderBy?: PlatilloGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlatilloGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlatilloGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Platillo model
   */
  readonly fields: PlatilloFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Platillo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlatilloClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria<T extends CategoriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDefaultArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    historialModificaciones<T extends Platillo$historialModificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Platillo$historialModificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Platillo model
   */
  interface PlatilloFieldRefs {
    readonly id: FieldRef<"Platillo", 'Int'>
    readonly nombre: FieldRef<"Platillo", 'String'>
    readonly precio: FieldRef<"Platillo", 'Float'>
    readonly creadoEn: FieldRef<"Platillo", 'DateTime'>
    readonly disponible: FieldRef<"Platillo", 'Boolean'>
    readonly imagenUrl: FieldRef<"Platillo", 'String'>
    readonly categoriaId: FieldRef<"Platillo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Platillo findUnique
   */
  export type PlatilloFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter, which Platillo to fetch.
     */
    where: PlatilloWhereUniqueInput
  }

  /**
   * Platillo findUniqueOrThrow
   */
  export type PlatilloFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter, which Platillo to fetch.
     */
    where: PlatilloWhereUniqueInput
  }

  /**
   * Platillo findFirst
   */
  export type PlatilloFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter, which Platillo to fetch.
     */
    where?: PlatilloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Platillos to fetch.
     */
    orderBy?: PlatilloOrderByWithRelationInput | PlatilloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Platillos.
     */
    cursor?: PlatilloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Platillos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Platillos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Platillos.
     */
    distinct?: PlatilloScalarFieldEnum | PlatilloScalarFieldEnum[]
  }

  /**
   * Platillo findFirstOrThrow
   */
  export type PlatilloFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter, which Platillo to fetch.
     */
    where?: PlatilloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Platillos to fetch.
     */
    orderBy?: PlatilloOrderByWithRelationInput | PlatilloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Platillos.
     */
    cursor?: PlatilloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Platillos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Platillos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Platillos.
     */
    distinct?: PlatilloScalarFieldEnum | PlatilloScalarFieldEnum[]
  }

  /**
   * Platillo findMany
   */
  export type PlatilloFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter, which Platillos to fetch.
     */
    where?: PlatilloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Platillos to fetch.
     */
    orderBy?: PlatilloOrderByWithRelationInput | PlatilloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Platillos.
     */
    cursor?: PlatilloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Platillos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Platillos.
     */
    skip?: number
    distinct?: PlatilloScalarFieldEnum | PlatilloScalarFieldEnum[]
  }

  /**
   * Platillo create
   */
  export type PlatilloCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * The data needed to create a Platillo.
     */
    data: XOR<PlatilloCreateInput, PlatilloUncheckedCreateInput>
  }

  /**
   * Platillo createMany
   */
  export type PlatilloCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Platillos.
     */
    data: PlatilloCreateManyInput | PlatilloCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Platillo createManyAndReturn
   */
  export type PlatilloCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * The data used to create many Platillos.
     */
    data: PlatilloCreateManyInput | PlatilloCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Platillo update
   */
  export type PlatilloUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * The data needed to update a Platillo.
     */
    data: XOR<PlatilloUpdateInput, PlatilloUncheckedUpdateInput>
    /**
     * Choose, which Platillo to update.
     */
    where: PlatilloWhereUniqueInput
  }

  /**
   * Platillo updateMany
   */
  export type PlatilloUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Platillos.
     */
    data: XOR<PlatilloUpdateManyMutationInput, PlatilloUncheckedUpdateManyInput>
    /**
     * Filter which Platillos to update
     */
    where?: PlatilloWhereInput
    /**
     * Limit how many Platillos to update.
     */
    limit?: number
  }

  /**
   * Platillo updateManyAndReturn
   */
  export type PlatilloUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * The data used to update Platillos.
     */
    data: XOR<PlatilloUpdateManyMutationInput, PlatilloUncheckedUpdateManyInput>
    /**
     * Filter which Platillos to update
     */
    where?: PlatilloWhereInput
    /**
     * Limit how many Platillos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Platillo upsert
   */
  export type PlatilloUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * The filter to search for the Platillo to update in case it exists.
     */
    where: PlatilloWhereUniqueInput
    /**
     * In case the Platillo found by the `where` argument doesn't exist, create a new Platillo with this data.
     */
    create: XOR<PlatilloCreateInput, PlatilloUncheckedCreateInput>
    /**
     * In case the Platillo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlatilloUpdateInput, PlatilloUncheckedUpdateInput>
  }

  /**
   * Platillo delete
   */
  export type PlatilloDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    /**
     * Filter which Platillo to delete.
     */
    where: PlatilloWhereUniqueInput
  }

  /**
   * Platillo deleteMany
   */
  export type PlatilloDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Platillos to delete
     */
    where?: PlatilloWhereInput
    /**
     * Limit how many Platillos to delete.
     */
    limit?: number
  }

  /**
   * Platillo.historialModificaciones
   */
  export type Platillo$historialModificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    where?: HistorialModificacionWhereInput
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    cursor?: HistorialModificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * Platillo without action
   */
  export type PlatilloDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
  }


  /**
   * Model HistorialModificacion
   */

  export type AggregateHistorialModificacion = {
    _count: HistorialModificacionCountAggregateOutputType | null
    _avg: HistorialModificacionAvgAggregateOutputType | null
    _sum: HistorialModificacionSumAggregateOutputType | null
    _min: HistorialModificacionMinAggregateOutputType | null
    _max: HistorialModificacionMaxAggregateOutputType | null
  }

  export type HistorialModificacionAvgAggregateOutputType = {
    id: number | null
    responsableId: number | null
    usuarioId: number | null
    platilloId: number | null
  }

  export type HistorialModificacionSumAggregateOutputType = {
    id: number | null
    responsableId: number | null
    usuarioId: number | null
    platilloId: number | null
  }

  export type HistorialModificacionMinAggregateOutputType = {
    id: number | null
    campo: string | null
    valorAnterior: string | null
    valorNuevo: string | null
    fecha: Date | null
    accion: string | null
    responsableId: number | null
    usuarioId: number | null
    platilloId: number | null
  }

  export type HistorialModificacionMaxAggregateOutputType = {
    id: number | null
    campo: string | null
    valorAnterior: string | null
    valorNuevo: string | null
    fecha: Date | null
    accion: string | null
    responsableId: number | null
    usuarioId: number | null
    platilloId: number | null
  }

  export type HistorialModificacionCountAggregateOutputType = {
    id: number
    campo: number
    valorAnterior: number
    valorNuevo: number
    fecha: number
    accion: number
    responsableId: number
    usuarioId: number
    platilloId: number
    _all: number
  }


  export type HistorialModificacionAvgAggregateInputType = {
    id?: true
    responsableId?: true
    usuarioId?: true
    platilloId?: true
  }

  export type HistorialModificacionSumAggregateInputType = {
    id?: true
    responsableId?: true
    usuarioId?: true
    platilloId?: true
  }

  export type HistorialModificacionMinAggregateInputType = {
    id?: true
    campo?: true
    valorAnterior?: true
    valorNuevo?: true
    fecha?: true
    accion?: true
    responsableId?: true
    usuarioId?: true
    platilloId?: true
  }

  export type HistorialModificacionMaxAggregateInputType = {
    id?: true
    campo?: true
    valorAnterior?: true
    valorNuevo?: true
    fecha?: true
    accion?: true
    responsableId?: true
    usuarioId?: true
    platilloId?: true
  }

  export type HistorialModificacionCountAggregateInputType = {
    id?: true
    campo?: true
    valorAnterior?: true
    valorNuevo?: true
    fecha?: true
    accion?: true
    responsableId?: true
    usuarioId?: true
    platilloId?: true
    _all?: true
  }

  export type HistorialModificacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialModificacion to aggregate.
     */
    where?: HistorialModificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialModificacions to fetch.
     */
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialModificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` HistorialModificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialModificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialModificacions
    **/
    _count?: true | HistorialModificacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialModificacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialModificacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialModificacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialModificacionMaxAggregateInputType
  }

  export type GetHistorialModificacionAggregateType<T extends HistorialModificacionAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialModificacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialModificacion[P]>
      : GetScalarType<T[P], AggregateHistorialModificacion[P]>
  }




  export type HistorialModificacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialModificacionWhereInput
    orderBy?: HistorialModificacionOrderByWithAggregationInput | HistorialModificacionOrderByWithAggregationInput[]
    by: HistorialModificacionScalarFieldEnum[] | HistorialModificacionScalarFieldEnum
    having?: HistorialModificacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialModificacionCountAggregateInputType | true
    _avg?: HistorialModificacionAvgAggregateInputType
    _sum?: HistorialModificacionSumAggregateInputType
    _min?: HistorialModificacionMinAggregateInputType
    _max?: HistorialModificacionMaxAggregateInputType
  }

  export type HistorialModificacionGroupByOutputType = {
    id: number
    campo: string
    valorAnterior: string | null
    valorNuevo: string | null
    fecha: Date
    accion: string
    responsableId: number
    usuarioId: number | null
    platilloId: number | null
    _count: HistorialModificacionCountAggregateOutputType | null
    _avg: HistorialModificacionAvgAggregateOutputType | null
    _sum: HistorialModificacionSumAggregateOutputType | null
    _min: HistorialModificacionMinAggregateOutputType | null
    _max: HistorialModificacionMaxAggregateOutputType | null
  }

  type GetHistorialModificacionGroupByPayload<T extends HistorialModificacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialModificacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialModificacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialModificacionGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialModificacionGroupByOutputType[P]>
        }
      >
    >


  export type HistorialModificacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    fecha?: boolean
    accion?: boolean
    responsableId?: boolean
    usuarioId?: boolean
    platilloId?: boolean
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }, ExtArgs["result"]["historialModificacion"]>

  export type HistorialModificacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    fecha?: boolean
    accion?: boolean
    responsableId?: boolean
    usuarioId?: boolean
    platilloId?: boolean
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }, ExtArgs["result"]["historialModificacion"]>

  export type HistorialModificacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campo?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    fecha?: boolean
    accion?: boolean
    responsableId?: boolean
    usuarioId?: boolean
    platilloId?: boolean
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }, ExtArgs["result"]["historialModificacion"]>

  export type HistorialModificacionSelectScalar = {
    id?: boolean
    campo?: boolean
    valorAnterior?: boolean
    valorNuevo?: boolean
    fecha?: boolean
    accion?: boolean
    responsableId?: boolean
    usuarioId?: boolean
    platilloId?: boolean
  }

  export type HistorialModificacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "campo" | "valorAnterior" | "valorNuevo" | "fecha" | "accion" | "responsableId" | "usuarioId" | "platilloId", ExtArgs["result"]["historialModificacion"]>
  export type HistorialModificacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }
  export type HistorialModificacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }
  export type HistorialModificacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsable?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | HistorialModificacion$usuarioArgs<ExtArgs>
    platillo?: boolean | HistorialModificacion$platilloArgs<ExtArgs>
  }

  export type $HistorialModificacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialModificacion"
    objects: {
      responsable: Prisma.$UsuarioPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      platillo: Prisma.$PlatilloPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      campo: string
      valorAnterior: string | null
      valorNuevo: string | null
      fecha: Date
      accion: string
      responsableId: number
      usuarioId: number | null
      platilloId: number | null
    }, ExtArgs["result"]["historialModificacion"]>
    composites: {}
  }

  type HistorialModificacionGetPayload<S extends boolean | null | undefined | HistorialModificacionDefaultArgs> = $Result.GetResult<Prisma.$HistorialModificacionPayload, S>

  type HistorialModificacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistorialModificacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistorialModificacionCountAggregateInputType | true
    }

  export interface HistorialModificacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialModificacion'], meta: { name: 'HistorialModificacion' } }
    /**
     * Find zero or one HistorialModificacion that matches the filter.
     * @param {HistorialModificacionFindUniqueArgs} args - Arguments to find a HistorialModificacion
     * @example
     * // Get one HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialModificacionFindUniqueArgs>(args: SelectSubset<T, HistorialModificacionFindUniqueArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistorialModificacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistorialModificacionFindUniqueOrThrowArgs} args - Arguments to find a HistorialModificacion
     * @example
     * // Get one HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialModificacionFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialModificacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialModificacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionFindFirstArgs} args - Arguments to find a HistorialModificacion
     * @example
     * // Get one HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialModificacionFindFirstArgs>(args?: SelectSubset<T, HistorialModificacionFindFirstArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialModificacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionFindFirstOrThrowArgs} args - Arguments to find a HistorialModificacion
     * @example
     * // Get one HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialModificacionFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialModificacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistorialModificacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialModificacions
     * const historialModificacions = await prisma.historialModificacion.findMany()
     * 
     * // Get first 10 HistorialModificacions
     * const historialModificacions = await prisma.historialModificacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialModificacionWithIdOnly = await prisma.historialModificacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialModificacionFindManyArgs>(args?: SelectSubset<T, HistorialModificacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistorialModificacion.
     * @param {HistorialModificacionCreateArgs} args - Arguments to create a HistorialModificacion.
     * @example
     * // Create one HistorialModificacion
     * const HistorialModificacion = await prisma.historialModificacion.create({
     *   data: {
     *     // ... data to create a HistorialModificacion
     *   }
     * })
     * 
     */
    create<T extends HistorialModificacionCreateArgs>(args: SelectSubset<T, HistorialModificacionCreateArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistorialModificacions.
     * @param {HistorialModificacionCreateManyArgs} args - Arguments to create many HistorialModificacions.
     * @example
     * // Create many HistorialModificacions
     * const historialModificacion = await prisma.historialModificacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialModificacionCreateManyArgs>(args?: SelectSubset<T, HistorialModificacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialModificacions and returns the data saved in the database.
     * @param {HistorialModificacionCreateManyAndReturnArgs} args - Arguments to create many HistorialModificacions.
     * @example
     * // Create many HistorialModificacions
     * const historialModificacion = await prisma.historialModificacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialModificacions and only return the `id`
     * const historialModificacionWithIdOnly = await prisma.historialModificacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialModificacionCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialModificacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HistorialModificacion.
     * @param {HistorialModificacionDeleteArgs} args - Arguments to delete one HistorialModificacion.
     * @example
     * // Delete one HistorialModificacion
     * const HistorialModificacion = await prisma.historialModificacion.delete({
     *   where: {
     *     // ... filter to delete one HistorialModificacion
     *   }
     * })
     * 
     */
    delete<T extends HistorialModificacionDeleteArgs>(args: SelectSubset<T, HistorialModificacionDeleteArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistorialModificacion.
     * @param {HistorialModificacionUpdateArgs} args - Arguments to update one HistorialModificacion.
     * @example
     * // Update one HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialModificacionUpdateArgs>(args: SelectSubset<T, HistorialModificacionUpdateArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistorialModificacions.
     * @param {HistorialModificacionDeleteManyArgs} args - Arguments to filter HistorialModificacions to delete.
     * @example
     * // Delete a few HistorialModificacions
     * const { count } = await prisma.historialModificacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialModificacionDeleteManyArgs>(args?: SelectSubset<T, HistorialModificacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialModificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialModificacions
     * const historialModificacion = await prisma.historialModificacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialModificacionUpdateManyArgs>(args: SelectSubset<T, HistorialModificacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialModificacions and returns the data updated in the database.
     * @param {HistorialModificacionUpdateManyAndReturnArgs} args - Arguments to update many HistorialModificacions.
     * @example
     * // Update many HistorialModificacions
     * const historialModificacion = await prisma.historialModificacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HistorialModificacions and only return the `id`
     * const historialModificacionWithIdOnly = await prisma.historialModificacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HistorialModificacionUpdateManyAndReturnArgs>(args: SelectSubset<T, HistorialModificacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HistorialModificacion.
     * @param {HistorialModificacionUpsertArgs} args - Arguments to update or create a HistorialModificacion.
     * @example
     * // Update or create a HistorialModificacion
     * const historialModificacion = await prisma.historialModificacion.upsert({
     *   create: {
     *     // ... data to create a HistorialModificacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialModificacion we want to update
     *   }
     * })
     */
    upsert<T extends HistorialModificacionUpsertArgs>(args: SelectSubset<T, HistorialModificacionUpsertArgs<ExtArgs>>): Prisma__HistorialModificacionClient<$Result.GetResult<Prisma.$HistorialModificacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistorialModificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionCountArgs} args - Arguments to filter HistorialModificacions to count.
     * @example
     * // Count the number of HistorialModificacions
     * const count = await prisma.historialModificacion.count({
     *   where: {
     *     // ... the filter for the HistorialModificacions we want to count
     *   }
     * })
    **/
    count<T extends HistorialModificacionCountArgs>(
      args?: Subset<T, HistorialModificacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialModificacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialModificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialModificacionAggregateArgs>(args: Subset<T, HistorialModificacionAggregateArgs>): Prisma.PrismaPromise<GetHistorialModificacionAggregateType<T>>

    /**
     * Group by HistorialModificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialModificacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialModificacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialModificacionGroupByArgs['orderBy'] }
        : { orderBy?: HistorialModificacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialModificacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialModificacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialModificacion model
   */
  readonly fields: HistorialModificacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialModificacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialModificacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    responsable<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends HistorialModificacion$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, HistorialModificacion$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    platillo<T extends HistorialModificacion$platilloArgs<ExtArgs> = {}>(args?: Subset<T, HistorialModificacion$platilloArgs<ExtArgs>>): Prisma__PlatilloClient<$Result.GetResult<Prisma.$PlatilloPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialModificacion model
   */
  interface HistorialModificacionFieldRefs {
    readonly id: FieldRef<"HistorialModificacion", 'Int'>
    readonly campo: FieldRef<"HistorialModificacion", 'String'>
    readonly valorAnterior: FieldRef<"HistorialModificacion", 'String'>
    readonly valorNuevo: FieldRef<"HistorialModificacion", 'String'>
    readonly fecha: FieldRef<"HistorialModificacion", 'DateTime'>
    readonly accion: FieldRef<"HistorialModificacion", 'String'>
    readonly responsableId: FieldRef<"HistorialModificacion", 'Int'>
    readonly usuarioId: FieldRef<"HistorialModificacion", 'Int'>
    readonly platilloId: FieldRef<"HistorialModificacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * HistorialModificacion findUnique
   */
  export type HistorialModificacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter, which HistorialModificacion to fetch.
     */
    where: HistorialModificacionWhereUniqueInput
  }

  /**
   * HistorialModificacion findUniqueOrThrow
   */
  export type HistorialModificacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter, which HistorialModificacion to fetch.
     */
    where: HistorialModificacionWhereUniqueInput
  }

  /**
   * HistorialModificacion findFirst
   */
  export type HistorialModificacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter, which HistorialModificacion to fetch.
     */
    where?: HistorialModificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialModificacions to fetch.
     */
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialModificacions.
     */
    cursor?: HistorialModificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` HistorialModificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialModificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialModificacions.
     */
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * HistorialModificacion findFirstOrThrow
   */
  export type HistorialModificacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter, which HistorialModificacion to fetch.
     */
    where?: HistorialModificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialModificacions to fetch.
     */
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialModificacions.
     */
    cursor?: HistorialModificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` HistorialModificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialModificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialModificacions.
     */
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * HistorialModificacion findMany
   */
  export type HistorialModificacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter, which HistorialModificacions to fetch.
     */
    where?: HistorialModificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialModificacions to fetch.
     */
    orderBy?: HistorialModificacionOrderByWithRelationInput | HistorialModificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialModificacions.
     */
    cursor?: HistorialModificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` HistorialModificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialModificacions.
     */
    skip?: number
    distinct?: HistorialModificacionScalarFieldEnum | HistorialModificacionScalarFieldEnum[]
  }

  /**
   * HistorialModificacion create
   */
  export type HistorialModificacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialModificacion.
     */
    data: XOR<HistorialModificacionCreateInput, HistorialModificacionUncheckedCreateInput>
  }

  /**
   * HistorialModificacion createMany
   */
  export type HistorialModificacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialModificacions.
     */
    data: HistorialModificacionCreateManyInput | HistorialModificacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialModificacion createManyAndReturn
   */
  export type HistorialModificacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * The data used to create many HistorialModificacions.
     */
    data: HistorialModificacionCreateManyInput | HistorialModificacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialModificacion update
   */
  export type HistorialModificacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialModificacion.
     */
    data: XOR<HistorialModificacionUpdateInput, HistorialModificacionUncheckedUpdateInput>
    /**
     * Choose, which HistorialModificacion to update.
     */
    where: HistorialModificacionWhereUniqueInput
  }

  /**
   * HistorialModificacion updateMany
   */
  export type HistorialModificacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialModificacions.
     */
    data: XOR<HistorialModificacionUpdateManyMutationInput, HistorialModificacionUncheckedUpdateManyInput>
    /**
     * Filter which HistorialModificacions to update
     */
    where?: HistorialModificacionWhereInput
    /**
     * Limit how many HistorialModificacions to update.
     */
    limit?: number
  }

  /**
   * HistorialModificacion updateManyAndReturn
   */
  export type HistorialModificacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * The data used to update HistorialModificacions.
     */
    data: XOR<HistorialModificacionUpdateManyMutationInput, HistorialModificacionUncheckedUpdateManyInput>
    /**
     * Filter which HistorialModificacions to update
     */
    where?: HistorialModificacionWhereInput
    /**
     * Limit how many HistorialModificacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialModificacion upsert
   */
  export type HistorialModificacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialModificacion to update in case it exists.
     */
    where: HistorialModificacionWhereUniqueInput
    /**
     * In case the HistorialModificacion found by the `where` argument doesn't exist, create a new HistorialModificacion with this data.
     */
    create: XOR<HistorialModificacionCreateInput, HistorialModificacionUncheckedCreateInput>
    /**
     * In case the HistorialModificacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialModificacionUpdateInput, HistorialModificacionUncheckedUpdateInput>
  }

  /**
   * HistorialModificacion delete
   */
  export type HistorialModificacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
    /**
     * Filter which HistorialModificacion to delete.
     */
    where: HistorialModificacionWhereUniqueInput
  }

  /**
   * HistorialModificacion deleteMany
   */
  export type HistorialModificacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialModificacions to delete
     */
    where?: HistorialModificacionWhereInput
    /**
     * Limit how many HistorialModificacions to delete.
     */
    limit?: number
  }

  /**
   * HistorialModificacion.usuario
   */
  export type HistorialModificacion$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * HistorialModificacion.platillo
   */
  export type HistorialModificacion$platilloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Platillo
     */
    select?: PlatilloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Platillo
     */
    omit?: PlatilloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlatilloInclude<ExtArgs> | null
    where?: PlatilloWhereInput
  }

  /**
   * HistorialModificacion without action
   */
  export type HistorialModificacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialModificacion
     */
    select?: HistorialModificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialModificacion
     */
    omit?: HistorialModificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialModificacionInclude<ExtArgs> | null
  }


  /**
   * Model Mesa
   */

  export type AggregateMesa = {
    _count: MesaCountAggregateOutputType | null
    _avg: MesaAvgAggregateOutputType | null
    _sum: MesaSumAggregateOutputType | null
    _min: MesaMinAggregateOutputType | null
    _max: MesaMaxAggregateOutputType | null
  }

  export type MesaAvgAggregateOutputType = {
    id: number | null
    numero: number | null
    capacidad: number | null
  }

  export type MesaSumAggregateOutputType = {
    id: number | null
    numero: number | null
    capacidad: number | null
  }

  export type MesaMinAggregateOutputType = {
    id: number | null
    numero: number | null
    capacidad: number | null
    estado: $Enums.MesaEstado | null
    reservadaPor: string | null
    activa: boolean | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type MesaMaxAggregateOutputType = {
    id: number | null
    numero: number | null
    capacidad: number | null
    estado: $Enums.MesaEstado | null
    reservadaPor: string | null
    activa: boolean | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type MesaCountAggregateOutputType = {
    id: number
    numero: number
    capacidad: number
    estado: number
    reservadaPor: number
    activa: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type MesaAvgAggregateInputType = {
    id?: true
    numero?: true
    capacidad?: true
  }

  export type MesaSumAggregateInputType = {
    id?: true
    numero?: true
    capacidad?: true
  }

  export type MesaMinAggregateInputType = {
    id?: true
    numero?: true
    capacidad?: true
    estado?: true
    reservadaPor?: true
    activa?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type MesaMaxAggregateInputType = {
    id?: true
    numero?: true
    capacidad?: true
    estado?: true
    reservadaPor?: true
    activa?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type MesaCountAggregateInputType = {
    id?: true
    numero?: true
    capacidad?: true
    estado?: true
    reservadaPor?: true
    activa?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type MesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mesa to aggregate.
     */
    where?: MesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mesas to fetch.
     */
    orderBy?: MesaOrderByWithRelationInput | MesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Mesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mesas
    **/
    _count?: true | MesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MesaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MesaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MesaMaxAggregateInputType
  }

  export type GetMesaAggregateType<T extends MesaAggregateArgs> = {
        [P in keyof T & keyof AggregateMesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMesa[P]>
      : GetScalarType<T[P], AggregateMesa[P]>
  }




  export type MesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MesaWhereInput
    orderBy?: MesaOrderByWithAggregationInput | MesaOrderByWithAggregationInput[]
    by: MesaScalarFieldEnum[] | MesaScalarFieldEnum
    having?: MesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MesaCountAggregateInputType | true
    _avg?: MesaAvgAggregateInputType
    _sum?: MesaSumAggregateInputType
    _min?: MesaMinAggregateInputType
    _max?: MesaMaxAggregateInputType
  }

  export type MesaGroupByOutputType = {
    id: number
    numero: number
    capacidad: number
    estado: $Enums.MesaEstado
    reservadaPor: string | null
    activa: boolean
    creadoEn: Date
    actualizadoEn: Date
    _count: MesaCountAggregateOutputType | null
    _avg: MesaAvgAggregateOutputType | null
    _sum: MesaSumAggregateOutputType | null
    _min: MesaMinAggregateOutputType | null
    _max: MesaMaxAggregateOutputType | null
  }

  type GetMesaGroupByPayload<T extends MesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MesaGroupByOutputType[P]>
            : GetScalarType<T[P], MesaGroupByOutputType[P]>
        }
      >
    >


  export type MesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    capacidad?: boolean
    estado?: boolean
    reservadaPor?: boolean
    activa?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    reservas?: boolean | Mesa$reservasArgs<ExtArgs>
    _count?: boolean | MesaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mesa"]>

  export type MesaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    capacidad?: boolean
    estado?: boolean
    reservadaPor?: boolean
    activa?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }, ExtArgs["result"]["mesa"]>

  export type MesaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    capacidad?: boolean
    estado?: boolean
    reservadaPor?: boolean
    activa?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }, ExtArgs["result"]["mesa"]>

  export type MesaSelectScalar = {
    id?: boolean
    numero?: boolean
    capacidad?: boolean
    estado?: boolean
    reservadaPor?: boolean
    activa?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type MesaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numero" | "capacidad" | "estado" | "reservadaPor" | "activa" | "creadoEn" | "actualizadoEn", ExtArgs["result"]["mesa"]>
  export type MesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | Mesa$reservasArgs<ExtArgs>
    _count?: boolean | MesaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MesaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type MesaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mesa"
    objects: {
      reservas: Prisma.$ReservaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numero: number
      capacidad: number
      estado: $Enums.MesaEstado
      reservadaPor: string | null
      activa: boolean
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["mesa"]>
    composites: {}
  }

  type MesaGetPayload<S extends boolean | null | undefined | MesaDefaultArgs> = $Result.GetResult<Prisma.$MesaPayload, S>

  type MesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MesaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MesaCountAggregateInputType | true
    }

  export interface MesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mesa'], meta: { name: 'Mesa' } }
    /**
     * Find zero or one Mesa that matches the filter.
     * @param {MesaFindUniqueArgs} args - Arguments to find a Mesa
     * @example
     * // Get one Mesa
     * const mesa = await prisma.mesa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MesaFindUniqueArgs>(args: SelectSubset<T, MesaFindUniqueArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mesa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MesaFindUniqueOrThrowArgs} args - Arguments to find a Mesa
     * @example
     * // Get one Mesa
     * const mesa = await prisma.mesa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MesaFindUniqueOrThrowArgs>(args: SelectSubset<T, MesaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mesa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaFindFirstArgs} args - Arguments to find a Mesa
     * @example
     * // Get one Mesa
     * const mesa = await prisma.mesa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MesaFindFirstArgs>(args?: SelectSubset<T, MesaFindFirstArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mesa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaFindFirstOrThrowArgs} args - Arguments to find a Mesa
     * @example
     * // Get one Mesa
     * const mesa = await prisma.mesa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MesaFindFirstOrThrowArgs>(args?: SelectSubset<T, MesaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mesas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mesas
     * const mesas = await prisma.mesa.findMany()
     * 
     * // Get first 10 Mesas
     * const mesas = await prisma.mesa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mesaWithIdOnly = await prisma.mesa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MesaFindManyArgs>(args?: SelectSubset<T, MesaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mesa.
     * @param {MesaCreateArgs} args - Arguments to create a Mesa.
     * @example
     * // Create one Mesa
     * const Mesa = await prisma.mesa.create({
     *   data: {
     *     // ... data to create a Mesa
     *   }
     * })
     * 
     */
    create<T extends MesaCreateArgs>(args: SelectSubset<T, MesaCreateArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mesas.
     * @param {MesaCreateManyArgs} args - Arguments to create many Mesas.
     * @example
     * // Create many Mesas
     * const mesa = await prisma.mesa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MesaCreateManyArgs>(args?: SelectSubset<T, MesaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mesas and returns the data saved in the database.
     * @param {MesaCreateManyAndReturnArgs} args - Arguments to create many Mesas.
     * @example
     * // Create many Mesas
     * const mesa = await prisma.mesa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mesas and only return the `id`
     * const mesaWithIdOnly = await prisma.mesa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MesaCreateManyAndReturnArgs>(args?: SelectSubset<T, MesaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mesa.
     * @param {MesaDeleteArgs} args - Arguments to delete one Mesa.
     * @example
     * // Delete one Mesa
     * const Mesa = await prisma.mesa.delete({
     *   where: {
     *     // ... filter to delete one Mesa
     *   }
     * })
     * 
     */
    delete<T extends MesaDeleteArgs>(args: SelectSubset<T, MesaDeleteArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mesa.
     * @param {MesaUpdateArgs} args - Arguments to update one Mesa.
     * @example
     * // Update one Mesa
     * const mesa = await prisma.mesa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MesaUpdateArgs>(args: SelectSubset<T, MesaUpdateArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mesas.
     * @param {MesaDeleteManyArgs} args - Arguments to filter Mesas to delete.
     * @example
     * // Delete a few Mesas
     * const { count } = await prisma.mesa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MesaDeleteManyArgs>(args?: SelectSubset<T, MesaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mesas
     * const mesa = await prisma.mesa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MesaUpdateManyArgs>(args: SelectSubset<T, MesaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mesas and returns the data updated in the database.
     * @param {MesaUpdateManyAndReturnArgs} args - Arguments to update many Mesas.
     * @example
     * // Update many Mesas
     * const mesa = await prisma.mesa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mesas and only return the `id`
     * const mesaWithIdOnly = await prisma.mesa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MesaUpdateManyAndReturnArgs>(args: SelectSubset<T, MesaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mesa.
     * @param {MesaUpsertArgs} args - Arguments to update or create a Mesa.
     * @example
     * // Update or create a Mesa
     * const mesa = await prisma.mesa.upsert({
     *   create: {
     *     // ... data to create a Mesa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mesa we want to update
     *   }
     * })
     */
    upsert<T extends MesaUpsertArgs>(args: SelectSubset<T, MesaUpsertArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaCountArgs} args - Arguments to filter Mesas to count.
     * @example
     * // Count the number of Mesas
     * const count = await prisma.mesa.count({
     *   where: {
     *     // ... the filter for the Mesas we want to count
     *   }
     * })
    **/
    count<T extends MesaCountArgs>(
      args?: Subset<T, MesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MesaAggregateArgs>(args: Subset<T, MesaAggregateArgs>): Prisma.PrismaPromise<GetMesaAggregateType<T>>

    /**
     * Group by Mesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MesaGroupByArgs['orderBy'] }
        : { orderBy?: MesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mesa model
   */
  readonly fields: MesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mesa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservas<T extends Mesa$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Mesa$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mesa model
   */
  interface MesaFieldRefs {
    readonly id: FieldRef<"Mesa", 'Int'>
    readonly numero: FieldRef<"Mesa", 'Int'>
    readonly capacidad: FieldRef<"Mesa", 'Int'>
    readonly estado: FieldRef<"Mesa", 'MesaEstado'>
    readonly reservadaPor: FieldRef<"Mesa", 'String'>
    readonly activa: FieldRef<"Mesa", 'Boolean'>
    readonly creadoEn: FieldRef<"Mesa", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Mesa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mesa findUnique
   */
  export type MesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter, which Mesa to fetch.
     */
    where: MesaWhereUniqueInput
  }

  /**
   * Mesa findUniqueOrThrow
   */
  export type MesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter, which Mesa to fetch.
     */
    where: MesaWhereUniqueInput
  }

  /**
   * Mesa findFirst
   */
  export type MesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter, which Mesa to fetch.
     */
    where?: MesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mesas to fetch.
     */
    orderBy?: MesaOrderByWithRelationInput | MesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mesas.
     */
    cursor?: MesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Mesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mesas.
     */
    distinct?: MesaScalarFieldEnum | MesaScalarFieldEnum[]
  }

  /**
   * Mesa findFirstOrThrow
   */
  export type MesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter, which Mesa to fetch.
     */
    where?: MesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mesas to fetch.
     */
    orderBy?: MesaOrderByWithRelationInput | MesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mesas.
     */
    cursor?: MesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Mesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mesas.
     */
    distinct?: MesaScalarFieldEnum | MesaScalarFieldEnum[]
  }

  /**
   * Mesa findMany
   */
  export type MesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter, which Mesas to fetch.
     */
    where?: MesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mesas to fetch.
     */
    orderBy?: MesaOrderByWithRelationInput | MesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mesas.
     */
    cursor?: MesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Mesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mesas.
     */
    skip?: number
    distinct?: MesaScalarFieldEnum | MesaScalarFieldEnum[]
  }

  /**
   * Mesa create
   */
  export type MesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * The data needed to create a Mesa.
     */
    data: XOR<MesaCreateInput, MesaUncheckedCreateInput>
  }

  /**
   * Mesa createMany
   */
  export type MesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mesas.
     */
    data: MesaCreateManyInput | MesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mesa createManyAndReturn
   */
  export type MesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * The data used to create many Mesas.
     */
    data: MesaCreateManyInput | MesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mesa update
   */
  export type MesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * The data needed to update a Mesa.
     */
    data: XOR<MesaUpdateInput, MesaUncheckedUpdateInput>
    /**
     * Choose, which Mesa to update.
     */
    where: MesaWhereUniqueInput
  }

  /**
   * Mesa updateMany
   */
  export type MesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mesas.
     */
    data: XOR<MesaUpdateManyMutationInput, MesaUncheckedUpdateManyInput>
    /**
     * Filter which Mesas to update
     */
    where?: MesaWhereInput
    /**
     * Limit how many Mesas to update.
     */
    limit?: number
  }

  /**
   * Mesa updateManyAndReturn
   */
  export type MesaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * The data used to update Mesas.
     */
    data: XOR<MesaUpdateManyMutationInput, MesaUncheckedUpdateManyInput>
    /**
     * Filter which Mesas to update
     */
    where?: MesaWhereInput
    /**
     * Limit how many Mesas to update.
     */
    limit?: number
  }

  /**
   * Mesa upsert
   */
  export type MesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * The filter to search for the Mesa to update in case it exists.
     */
    where: MesaWhereUniqueInput
    /**
     * In case the Mesa found by the `where` argument doesn't exist, create a new Mesa with this data.
     */
    create: XOR<MesaCreateInput, MesaUncheckedCreateInput>
    /**
     * In case the Mesa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MesaUpdateInput, MesaUncheckedUpdateInput>
  }

  /**
   * Mesa delete
   */
  export type MesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
    /**
     * Filter which Mesa to delete.
     */
    where: MesaWhereUniqueInput
  }

  /**
   * Mesa deleteMany
   */
  export type MesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mesas to delete
     */
    where?: MesaWhereInput
    /**
     * Limit how many Mesas to delete.
     */
    limit?: number
  }

  /**
   * Mesa.reservas
   */
  export type Mesa$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Mesa without action
   */
  export type MesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mesa
     */
    select?: MesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mesa
     */
    omit?: MesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MesaInclude<ExtArgs> | null
  }


  /**
   * Model Reserva
   */

  export type AggregateReserva = {
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  export type ReservaAvgAggregateOutputType = {
    id: number | null
    mesaId: number | null
    monto: Decimal | null
    refundMonto: Decimal | null
    verificadaPorMeseroId: number | null
    aplicadoEnOrdenId: number | null
    aplicadoEnPagoId: number | null
  }

  export type ReservaSumAggregateOutputType = {
    id: number | null
    mesaId: number | null
    monto: Decimal | null
    refundMonto: Decimal | null
    verificadaPorMeseroId: number | null
    aplicadoEnOrdenId: number | null
    aplicadoEnPagoId: number | null
  }

  export type ReservaMinAggregateOutputType = {
    id: number | null
    mesaId: number | null
    fechaHora: Date | null
    hastaHora: Date | null
    nombre: string | null
    telefono: string | null
    email: string | null
    nota: string | null
    monto: Decimal | null
    estado: $Enums.ReservaEstado | null
    pagoEstado: $Enums.PagoEstado | null
    pagoMetodo: string | null
    pagoReferencia: string | null
    pagadoEn: Date | null
    canceladaEn: Date | null
    refundEstado: $Enums.RefundEstado | null
    refundMonto: Decimal | null
    refundEn: Date | null
    refundMotivo: string | null
    verificadaPorMeseroId: number | null
    verificadaEn: Date | null
    aplicadoEnOrdenId: number | null
    aplicadoEnPagoId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ReservaMaxAggregateOutputType = {
    id: number | null
    mesaId: number | null
    fechaHora: Date | null
    hastaHora: Date | null
    nombre: string | null
    telefono: string | null
    email: string | null
    nota: string | null
    monto: Decimal | null
    estado: $Enums.ReservaEstado | null
    pagoEstado: $Enums.PagoEstado | null
    pagoMetodo: string | null
    pagoReferencia: string | null
    pagadoEn: Date | null
    canceladaEn: Date | null
    refundEstado: $Enums.RefundEstado | null
    refundMonto: Decimal | null
    refundEn: Date | null
    refundMotivo: string | null
    verificadaPorMeseroId: number | null
    verificadaEn: Date | null
    aplicadoEnOrdenId: number | null
    aplicadoEnPagoId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ReservaCountAggregateOutputType = {
    id: number
    mesaId: number
    fechaHora: number
    hastaHora: number
    nombre: number
    telefono: number
    email: number
    nota: number
    monto: number
    estado: number
    pagoEstado: number
    pagoMetodo: number
    pagoReferencia: number
    pagadoEn: number
    canceladaEn: number
    refundEstado: number
    refundMonto: number
    refundEn: number
    refundMotivo: number
    verificadaPorMeseroId: number
    verificadaEn: number
    aplicadoEnOrdenId: number
    aplicadoEnPagoId: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type ReservaAvgAggregateInputType = {
    id?: true
    mesaId?: true
    monto?: true
    refundMonto?: true
    verificadaPorMeseroId?: true
    aplicadoEnOrdenId?: true
    aplicadoEnPagoId?: true
  }

  export type ReservaSumAggregateInputType = {
    id?: true
    mesaId?: true
    monto?: true
    refundMonto?: true
    verificadaPorMeseroId?: true
    aplicadoEnOrdenId?: true
    aplicadoEnPagoId?: true
  }

  export type ReservaMinAggregateInputType = {
    id?: true
    mesaId?: true
    fechaHora?: true
    hastaHora?: true
    nombre?: true
    telefono?: true
    email?: true
    nota?: true
    monto?: true
    estado?: true
    pagoEstado?: true
    pagoMetodo?: true
    pagoReferencia?: true
    pagadoEn?: true
    canceladaEn?: true
    refundEstado?: true
    refundMonto?: true
    refundEn?: true
    refundMotivo?: true
    verificadaPorMeseroId?: true
    verificadaEn?: true
    aplicadoEnOrdenId?: true
    aplicadoEnPagoId?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ReservaMaxAggregateInputType = {
    id?: true
    mesaId?: true
    fechaHora?: true
    hastaHora?: true
    nombre?: true
    telefono?: true
    email?: true
    nota?: true
    monto?: true
    estado?: true
    pagoEstado?: true
    pagoMetodo?: true
    pagoReferencia?: true
    pagadoEn?: true
    canceladaEn?: true
    refundEstado?: true
    refundMonto?: true
    refundEn?: true
    refundMotivo?: true
    verificadaPorMeseroId?: true
    verificadaEn?: true
    aplicadoEnOrdenId?: true
    aplicadoEnPagoId?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ReservaCountAggregateInputType = {
    id?: true
    mesaId?: true
    fechaHora?: true
    hastaHora?: true
    nombre?: true
    telefono?: true
    email?: true
    nota?: true
    monto?: true
    estado?: true
    pagoEstado?: true
    pagoMetodo?: true
    pagoReferencia?: true
    pagadoEn?: true
    canceladaEn?: true
    refundEstado?: true
    refundMonto?: true
    refundEn?: true
    refundMotivo?: true
    verificadaPorMeseroId?: true
    verificadaEn?: true
    aplicadoEnOrdenId?: true
    aplicadoEnPagoId?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type ReservaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reserva to aggregate.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaMaxAggregateInputType
  }

  export type GetReservaAggregateType<T extends ReservaAggregateArgs> = {
        [P in keyof T & keyof AggregateReserva]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReserva[P]>
      : GetScalarType<T[P], AggregateReserva[P]>
  }




  export type ReservaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithAggregationInput | ReservaOrderByWithAggregationInput[]
    by: ReservaScalarFieldEnum[] | ReservaScalarFieldEnum
    having?: ReservaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaCountAggregateInputType | true
    _avg?: ReservaAvgAggregateInputType
    _sum?: ReservaSumAggregateInputType
    _min?: ReservaMinAggregateInputType
    _max?: ReservaMaxAggregateInputType
  }

  export type ReservaGroupByOutputType = {
    id: number
    mesaId: number
    fechaHora: Date
    hastaHora: Date
    nombre: string
    telefono: string
    email: string
    nota: string | null
    monto: Decimal
    estado: $Enums.ReservaEstado
    pagoEstado: $Enums.PagoEstado
    pagoMetodo: string
    pagoReferencia: string | null
    pagadoEn: Date | null
    canceladaEn: Date | null
    refundEstado: $Enums.RefundEstado
    refundMonto: Decimal | null
    refundEn: Date | null
    refundMotivo: string | null
    verificadaPorMeseroId: number | null
    verificadaEn: Date | null
    aplicadoEnOrdenId: number | null
    aplicadoEnPagoId: number | null
    creadoEn: Date
    actualizadoEn: Date
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  type GetReservaGroupByPayload<T extends ReservaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaGroupByOutputType[P]>
        }
      >
    >


  export type ReservaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mesaId?: boolean
    fechaHora?: boolean
    hastaHora?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    nota?: boolean
    monto?: boolean
    estado?: boolean
    pagoEstado?: boolean
    pagoMetodo?: boolean
    pagoReferencia?: boolean
    pagadoEn?: boolean
    canceladaEn?: boolean
    refundEstado?: boolean
    refundMonto?: boolean
    refundEn?: boolean
    refundMotivo?: boolean
    verificadaPorMeseroId?: boolean
    verificadaEn?: boolean
    aplicadoEnOrdenId?: boolean
    aplicadoEnPagoId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mesaId?: boolean
    fechaHora?: boolean
    hastaHora?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    nota?: boolean
    monto?: boolean
    estado?: boolean
    pagoEstado?: boolean
    pagoMetodo?: boolean
    pagoReferencia?: boolean
    pagadoEn?: boolean
    canceladaEn?: boolean
    refundEstado?: boolean
    refundMonto?: boolean
    refundEn?: boolean
    refundMotivo?: boolean
    verificadaPorMeseroId?: boolean
    verificadaEn?: boolean
    aplicadoEnOrdenId?: boolean
    aplicadoEnPagoId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mesaId?: boolean
    fechaHora?: boolean
    hastaHora?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    nota?: boolean
    monto?: boolean
    estado?: boolean
    pagoEstado?: boolean
    pagoMetodo?: boolean
    pagoReferencia?: boolean
    pagadoEn?: boolean
    canceladaEn?: boolean
    refundEstado?: boolean
    refundMonto?: boolean
    refundEn?: boolean
    refundMotivo?: boolean
    verificadaPorMeseroId?: boolean
    verificadaEn?: boolean
    aplicadoEnOrdenId?: boolean
    aplicadoEnPagoId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectScalar = {
    id?: boolean
    mesaId?: boolean
    fechaHora?: boolean
    hastaHora?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
    nota?: boolean
    monto?: boolean
    estado?: boolean
    pagoEstado?: boolean
    pagoMetodo?: boolean
    pagoReferencia?: boolean
    pagadoEn?: boolean
    canceladaEn?: boolean
    refundEstado?: boolean
    refundMonto?: boolean
    refundEn?: boolean
    refundMotivo?: boolean
    verificadaPorMeseroId?: boolean
    verificadaEn?: boolean
    aplicadoEnOrdenId?: boolean
    aplicadoEnPagoId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type ReservaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mesaId" | "fechaHora" | "hastaHora" | "nombre" | "telefono" | "email" | "nota" | "monto" | "estado" | "pagoEstado" | "pagoMetodo" | "pagoReferencia" | "pagadoEn" | "canceladaEn" | "refundEstado" | "refundMonto" | "refundEn" | "refundMotivo" | "verificadaPorMeseroId" | "verificadaEn" | "aplicadoEnOrdenId" | "aplicadoEnPagoId" | "creadoEn" | "actualizadoEn", ExtArgs["result"]["reserva"]>
  export type ReservaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }
  export type ReservaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }
  export type ReservaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesa?: boolean | MesaDefaultArgs<ExtArgs>
  }

  export type $ReservaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reserva"
    objects: {
      mesa: Prisma.$MesaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      mesaId: number
      fechaHora: Date
      hastaHora: Date
      nombre: string
      telefono: string
      email: string
      nota: string | null
      monto: Prisma.Decimal
      estado: $Enums.ReservaEstado
      pagoEstado: $Enums.PagoEstado
      pagoMetodo: string
      pagoReferencia: string | null
      pagadoEn: Date | null
      canceladaEn: Date | null
      refundEstado: $Enums.RefundEstado
      refundMonto: Prisma.Decimal | null
      refundEn: Date | null
      refundMotivo: string | null
      verificadaPorMeseroId: number | null
      verificadaEn: Date | null
      aplicadoEnOrdenId: number | null
      aplicadoEnPagoId: number | null
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["reserva"]>
    composites: {}
  }

  type ReservaGetPayload<S extends boolean | null | undefined | ReservaDefaultArgs> = $Result.GetResult<Prisma.$ReservaPayload, S>

  type ReservaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaCountAggregateInputType | true
    }

  export interface ReservaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reserva'], meta: { name: 'Reserva' } }
    /**
     * Find zero or one Reserva that matches the filter.
     * @param {ReservaFindUniqueArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaFindUniqueArgs>(args: SelectSubset<T, ReservaFindUniqueArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reserva that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaFindUniqueOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaFindFirstArgs>(args?: SelectSubset<T, ReservaFindFirstArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reserva.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reserva.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservaWithIdOnly = await prisma.reserva.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservaFindManyArgs>(args?: SelectSubset<T, ReservaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reserva.
     * @param {ReservaCreateArgs} args - Arguments to create a Reserva.
     * @example
     * // Create one Reserva
     * const Reserva = await prisma.reserva.create({
     *   data: {
     *     // ... data to create a Reserva
     *   }
     * })
     * 
     */
    create<T extends ReservaCreateArgs>(args: SelectSubset<T, ReservaCreateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservas.
     * @param {ReservaCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaCreateManyArgs>(args?: SelectSubset<T, ReservaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservaCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `id`
     * const reservaWithIdOnly = await prisma.reserva.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reserva.
     * @param {ReservaDeleteArgs} args - Arguments to delete one Reserva.
     * @example
     * // Delete one Reserva
     * const Reserva = await prisma.reserva.delete({
     *   where: {
     *     // ... filter to delete one Reserva
     *   }
     * })
     * 
     */
    delete<T extends ReservaDeleteArgs>(args: SelectSubset<T, ReservaDeleteArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reserva.
     * @param {ReservaUpdateArgs} args - Arguments to update one Reserva.
     * @example
     * // Update one Reserva
     * const reserva = await prisma.reserva.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaUpdateArgs>(args: SelectSubset<T, ReservaUpdateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservas.
     * @param {ReservaDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reserva.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaDeleteManyArgs>(args?: SelectSubset<T, ReservaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaUpdateManyArgs>(args: SelectSubset<T, ReservaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas and returns the data updated in the database.
     * @param {ReservaUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservas and only return the `id`
     * const reservaWithIdOnly = await prisma.reserva.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reserva.
     * @param {ReservaUpsertArgs} args - Arguments to update or create a Reserva.
     * @example
     * // Update or create a Reserva
     * const reserva = await prisma.reserva.upsert({
     *   create: {
     *     // ... data to create a Reserva
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reserva we want to update
     *   }
     * })
     */
    upsert<T extends ReservaUpsertArgs>(args: SelectSubset<T, ReservaUpsertArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reserva.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservaCountArgs>(
      args?: Subset<T, ReservaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaAggregateArgs>(args: Subset<T, ReservaAggregateArgs>): Prisma.PrismaPromise<GetReservaAggregateType<T>>

    /**
     * Group by Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaGroupByArgs['orderBy'] }
        : { orderBy?: ReservaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reserva model
   */
  readonly fields: ReservaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reserva.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mesa<T extends MesaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MesaDefaultArgs<ExtArgs>>): Prisma__MesaClient<$Result.GetResult<Prisma.$MesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reserva model
   */
  interface ReservaFieldRefs {
    readonly id: FieldRef<"Reserva", 'Int'>
    readonly mesaId: FieldRef<"Reserva", 'Int'>
    readonly fechaHora: FieldRef<"Reserva", 'DateTime'>
    readonly hastaHora: FieldRef<"Reserva", 'DateTime'>
    readonly nombre: FieldRef<"Reserva", 'String'>
    readonly telefono: FieldRef<"Reserva", 'String'>
    readonly email: FieldRef<"Reserva", 'String'>
    readonly nota: FieldRef<"Reserva", 'String'>
    readonly monto: FieldRef<"Reserva", 'Decimal'>
    readonly estado: FieldRef<"Reserva", 'ReservaEstado'>
    readonly pagoEstado: FieldRef<"Reserva", 'PagoEstado'>
    readonly pagoMetodo: FieldRef<"Reserva", 'String'>
    readonly pagoReferencia: FieldRef<"Reserva", 'String'>
    readonly pagadoEn: FieldRef<"Reserva", 'DateTime'>
    readonly canceladaEn: FieldRef<"Reserva", 'DateTime'>
    readonly refundEstado: FieldRef<"Reserva", 'RefundEstado'>
    readonly refundMonto: FieldRef<"Reserva", 'Decimal'>
    readonly refundEn: FieldRef<"Reserva", 'DateTime'>
    readonly refundMotivo: FieldRef<"Reserva", 'String'>
    readonly verificadaPorMeseroId: FieldRef<"Reserva", 'Int'>
    readonly verificadaEn: FieldRef<"Reserva", 'DateTime'>
    readonly aplicadoEnOrdenId: FieldRef<"Reserva", 'Int'>
    readonly aplicadoEnPagoId: FieldRef<"Reserva", 'Int'>
    readonly creadoEn: FieldRef<"Reserva", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Reserva", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Reserva findUnique
   */
  export type ReservaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findUniqueOrThrow
   */
  export type ReservaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findFirst
   */
  export type ReservaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findFirstOrThrow
   */
  export type ReservaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findMany
   */
  export type ReservaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva create
   */
  export type ReservaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to create a Reserva.
     */
    data: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
  }

  /**
   * Reserva createMany
   */
  export type ReservaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reserva createManyAndReturn
   */
  export type ReservaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva update
   */
  export type ReservaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to update a Reserva.
     */
    data: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
    /**
     * Choose, which Reserva to update.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva updateMany
   */
  export type ReservaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reserva updateManyAndReturn
   */
  export type ReservaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva upsert
   */
  export type ReservaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The filter to search for the Reserva to update in case it exists.
     */
    where: ReservaWhereUniqueInput
    /**
     * In case the Reserva found by the `where` argument doesn't exist, create a new Reserva with this data.
     */
    create: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
    /**
     * In case the Reserva was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
  }

  /**
   * Reserva delete
   */
  export type ReservaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter which Reserva to delete.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva deleteMany
   */
  export type ReservaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to delete.
     */
    limit?: number
  }

  /**
   * Reserva without action
   */
  export type ReservaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
  }


  /**
   * Model Orden
   */

  export type AggregateOrden = {
    _count: OrdenCountAggregateOutputType | null
    _avg: OrdenAvgAggregateOutputType | null
    _sum: OrdenSumAggregateOutputType | null
    _min: OrdenMinAggregateOutputType | null
    _max: OrdenMaxAggregateOutputType | null
  }

  export type OrdenAvgAggregateOutputType = {
    id: number | null
    mesa: number | null
    durationSec: number | null
    meseroId: number | null
    totalPagado: number | null
    anticipo: number | null
  }

  export type OrdenSumAggregateOutputType = {
    id: number | null
    mesa: number | null
    durationSec: number | null
    meseroId: number | null
    totalPagado: number | null
    anticipo: number | null
  }

  export type OrdenMinAggregateOutputType = {
    id: number | null
    codigo: string | null
    mesa: number | null
    fecha: Date | null
    finishedAt: Date | null
    durationSec: number | null
    meseroId: number | null
    estado: $Enums.OrdenEstado | null
    totalPagado: number | null
    anticipo: number | null
  }

  export type OrdenMaxAggregateOutputType = {
    id: number | null
    codigo: string | null
    mesa: number | null
    fecha: Date | null
    finishedAt: Date | null
    durationSec: number | null
    meseroId: number | null
    estado: $Enums.OrdenEstado | null
    totalPagado: number | null
    anticipo: number | null
  }

  export type OrdenCountAggregateOutputType = {
    id: number
    codigo: number
    mesa: number
    fecha: number
    finishedAt: number
    durationSec: number
    meseroId: number
    estado: number
    totalPagado: number
    anticipo: number
    _all: number
  }


  export type OrdenAvgAggregateInputType = {
    id?: true
    mesa?: true
    durationSec?: true
    meseroId?: true
    totalPagado?: true
    anticipo?: true
  }

  export type OrdenSumAggregateInputType = {
    id?: true
    mesa?: true
    durationSec?: true
    meseroId?: true
    totalPagado?: true
    anticipo?: true
  }

  export type OrdenMinAggregateInputType = {
    id?: true
    codigo?: true
    mesa?: true
    fecha?: true
    finishedAt?: true
    durationSec?: true
    meseroId?: true
    estado?: true
    totalPagado?: true
    anticipo?: true
  }

  export type OrdenMaxAggregateInputType = {
    id?: true
    codigo?: true
    mesa?: true
    fecha?: true
    finishedAt?: true
    durationSec?: true
    meseroId?: true
    estado?: true
    totalPagado?: true
    anticipo?: true
  }

  export type OrdenCountAggregateInputType = {
    id?: true
    codigo?: true
    mesa?: true
    fecha?: true
    finishedAt?: true
    durationSec?: true
    meseroId?: true
    estado?: true
    totalPagado?: true
    anticipo?: true
    _all?: true
  }

  export type OrdenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orden to aggregate.
     */
    where?: OrdenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ordens to fetch.
     */
    orderBy?: OrdenOrderByWithRelationInput | OrdenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrdenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Ordens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ordens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ordens
    **/
    _count?: true | OrdenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdenMaxAggregateInputType
  }

  export type GetOrdenAggregateType<T extends OrdenAggregateArgs> = {
        [P in keyof T & keyof AggregateOrden]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrden[P]>
      : GetScalarType<T[P], AggregateOrden[P]>
  }




  export type OrdenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenWhereInput
    orderBy?: OrdenOrderByWithAggregationInput | OrdenOrderByWithAggregationInput[]
    by: OrdenScalarFieldEnum[] | OrdenScalarFieldEnum
    having?: OrdenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdenCountAggregateInputType | true
    _avg?: OrdenAvgAggregateInputType
    _sum?: OrdenSumAggregateInputType
    _min?: OrdenMinAggregateInputType
    _max?: OrdenMaxAggregateInputType
  }

  export type OrdenGroupByOutputType = {
    id: number
    codigo: string
    mesa: number
    fecha: Date
    finishedAt: Date | null
    durationSec: number | null
    meseroId: number | null
    estado: $Enums.OrdenEstado
    totalPagado: number | null
    anticipo: number
    _count: OrdenCountAggregateOutputType | null
    _avg: OrdenAvgAggregateOutputType | null
    _sum: OrdenSumAggregateOutputType | null
    _min: OrdenMinAggregateOutputType | null
    _max: OrdenMaxAggregateOutputType | null
  }

  type GetOrdenGroupByPayload<T extends OrdenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdenGroupByOutputType[P]>
            : GetScalarType<T[P], OrdenGroupByOutputType[P]>
        }
      >
    >


  export type OrdenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    mesa?: boolean
    fecha?: boolean
    finishedAt?: boolean
    durationSec?: boolean
    meseroId?: boolean
    estado?: boolean
    totalPagado?: boolean
    anticipo?: boolean
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
    items?: boolean | Orden$itemsArgs<ExtArgs>
    tickets?: boolean | Orden$ticketsArgs<ExtArgs>
    pedidoCliente?: boolean | Orden$pedidoClienteArgs<ExtArgs>
    notifs?: boolean | Orden$notifsArgs<ExtArgs>
    _count?: boolean | OrdenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orden"]>

  export type OrdenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    mesa?: boolean
    fecha?: boolean
    finishedAt?: boolean
    durationSec?: boolean
    meseroId?: boolean
    estado?: boolean
    totalPagado?: boolean
    anticipo?: boolean
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
  }, ExtArgs["result"]["orden"]>

  export type OrdenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    mesa?: boolean
    fecha?: boolean
    finishedAt?: boolean
    durationSec?: boolean
    meseroId?: boolean
    estado?: boolean
    totalPagado?: boolean
    anticipo?: boolean
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
  }, ExtArgs["result"]["orden"]>

  export type OrdenSelectScalar = {
    id?: boolean
    codigo?: boolean
    mesa?: boolean
    fecha?: boolean
    finishedAt?: boolean
    durationSec?: boolean
    meseroId?: boolean
    estado?: boolean
    totalPagado?: boolean
    anticipo?: boolean
  }

  export type OrdenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "mesa" | "fecha" | "finishedAt" | "durationSec" | "meseroId" | "estado" | "totalPagado" | "anticipo", ExtArgs["result"]["orden"]>
  export type OrdenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
    items?: boolean | Orden$itemsArgs<ExtArgs>
    tickets?: boolean | Orden$ticketsArgs<ExtArgs>
    pedidoCliente?: boolean | Orden$pedidoClienteArgs<ExtArgs>
    notifs?: boolean | Orden$notifsArgs<ExtArgs>
    _count?: boolean | OrdenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrdenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
  }
  export type OrdenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mesero?: boolean | Orden$meseroArgs<ExtArgs>
  }

  export type $OrdenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Orden"
    objects: {
      mesero: Prisma.$UsuarioPayload<ExtArgs> | null
      items: Prisma.$OrdenItemPayload<ExtArgs>[]
      tickets: Prisma.$TicketVentaPayload<ExtArgs>[]
      pedidoCliente: Prisma.$PedidoClientePayload<ExtArgs> | null
      notifs: Prisma.$MeseroNotifPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: string
      mesa: number
      fecha: Date
      finishedAt: Date | null
      durationSec: number | null
      meseroId: number | null
      estado: $Enums.OrdenEstado
      totalPagado: number | null
      anticipo: number
    }, ExtArgs["result"]["orden"]>
    composites: {}
  }

  type OrdenGetPayload<S extends boolean | null | undefined | OrdenDefaultArgs> = $Result.GetResult<Prisma.$OrdenPayload, S>

  type OrdenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrdenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdenCountAggregateInputType | true
    }

  export interface OrdenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Orden'], meta: { name: 'Orden' } }
    /**
     * Find zero or one Orden that matches the filter.
     * @param {OrdenFindUniqueArgs} args - Arguments to find a Orden
     * @example
     * // Get one Orden
     * const orden = await prisma.orden.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrdenFindUniqueArgs>(args: SelectSubset<T, OrdenFindUniqueArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orden that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrdenFindUniqueOrThrowArgs} args - Arguments to find a Orden
     * @example
     * // Get one Orden
     * const orden = await prisma.orden.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrdenFindUniqueOrThrowArgs>(args: SelectSubset<T, OrdenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orden that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenFindFirstArgs} args - Arguments to find a Orden
     * @example
     * // Get one Orden
     * const orden = await prisma.orden.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrdenFindFirstArgs>(args?: SelectSubset<T, OrdenFindFirstArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orden that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenFindFirstOrThrowArgs} args - Arguments to find a Orden
     * @example
     * // Get one Orden
     * const orden = await prisma.orden.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrdenFindFirstOrThrowArgs>(args?: SelectSubset<T, OrdenFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ordens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ordens
     * const ordens = await prisma.orden.findMany()
     * 
     * // Get first 10 Ordens
     * const ordens = await prisma.orden.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordenWithIdOnly = await prisma.orden.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrdenFindManyArgs>(args?: SelectSubset<T, OrdenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orden.
     * @param {OrdenCreateArgs} args - Arguments to create a Orden.
     * @example
     * // Create one Orden
     * const Orden = await prisma.orden.create({
     *   data: {
     *     // ... data to create a Orden
     *   }
     * })
     * 
     */
    create<T extends OrdenCreateArgs>(args: SelectSubset<T, OrdenCreateArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ordens.
     * @param {OrdenCreateManyArgs} args - Arguments to create many Ordens.
     * @example
     * // Create many Ordens
     * const orden = await prisma.orden.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrdenCreateManyArgs>(args?: SelectSubset<T, OrdenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ordens and returns the data saved in the database.
     * @param {OrdenCreateManyAndReturnArgs} args - Arguments to create many Ordens.
     * @example
     * // Create many Ordens
     * const orden = await prisma.orden.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ordens and only return the `id`
     * const ordenWithIdOnly = await prisma.orden.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrdenCreateManyAndReturnArgs>(args?: SelectSubset<T, OrdenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orden.
     * @param {OrdenDeleteArgs} args - Arguments to delete one Orden.
     * @example
     * // Delete one Orden
     * const Orden = await prisma.orden.delete({
     *   where: {
     *     // ... filter to delete one Orden
     *   }
     * })
     * 
     */
    delete<T extends OrdenDeleteArgs>(args: SelectSubset<T, OrdenDeleteArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orden.
     * @param {OrdenUpdateArgs} args - Arguments to update one Orden.
     * @example
     * // Update one Orden
     * const orden = await prisma.orden.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrdenUpdateArgs>(args: SelectSubset<T, OrdenUpdateArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ordens.
     * @param {OrdenDeleteManyArgs} args - Arguments to filter Ordens to delete.
     * @example
     * // Delete a few Ordens
     * const { count } = await prisma.orden.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrdenDeleteManyArgs>(args?: SelectSubset<T, OrdenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ordens
     * const orden = await prisma.orden.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrdenUpdateManyArgs>(args: SelectSubset<T, OrdenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordens and returns the data updated in the database.
     * @param {OrdenUpdateManyAndReturnArgs} args - Arguments to update many Ordens.
     * @example
     * // Update many Ordens
     * const orden = await prisma.orden.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ordens and only return the `id`
     * const ordenWithIdOnly = await prisma.orden.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrdenUpdateManyAndReturnArgs>(args: SelectSubset<T, OrdenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orden.
     * @param {OrdenUpsertArgs} args - Arguments to update or create a Orden.
     * @example
     * // Update or create a Orden
     * const orden = await prisma.orden.upsert({
     *   create: {
     *     // ... data to create a Orden
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orden we want to update
     *   }
     * })
     */
    upsert<T extends OrdenUpsertArgs>(args: SelectSubset<T, OrdenUpsertArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ordens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenCountArgs} args - Arguments to filter Ordens to count.
     * @example
     * // Count the number of Ordens
     * const count = await prisma.orden.count({
     *   where: {
     *     // ... the filter for the Ordens we want to count
     *   }
     * })
    **/
    count<T extends OrdenCountArgs>(
      args?: Subset<T, OrdenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orden.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdenAggregateArgs>(args: Subset<T, OrdenAggregateArgs>): Prisma.PrismaPromise<GetOrdenAggregateType<T>>

    /**
     * Group by Orden.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrdenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrdenGroupByArgs['orderBy'] }
        : { orderBy?: OrdenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrdenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Orden model
   */
  readonly fields: OrdenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Orden.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrdenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mesero<T extends Orden$meseroArgs<ExtArgs> = {}>(args?: Subset<T, Orden$meseroArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends Orden$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Orden$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tickets<T extends Orden$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, Orden$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedidoCliente<T extends Orden$pedidoClienteArgs<ExtArgs> = {}>(args?: Subset<T, Orden$pedidoClienteArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notifs<T extends Orden$notifsArgs<ExtArgs> = {}>(args?: Subset<T, Orden$notifsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Orden model
   */
  interface OrdenFieldRefs {
    readonly id: FieldRef<"Orden", 'Int'>
    readonly codigo: FieldRef<"Orden", 'String'>
    readonly mesa: FieldRef<"Orden", 'Int'>
    readonly fecha: FieldRef<"Orden", 'DateTime'>
    readonly finishedAt: FieldRef<"Orden", 'DateTime'>
    readonly durationSec: FieldRef<"Orden", 'Int'>
    readonly meseroId: FieldRef<"Orden", 'Int'>
    readonly estado: FieldRef<"Orden", 'OrdenEstado'>
    readonly totalPagado: FieldRef<"Orden", 'Float'>
    readonly anticipo: FieldRef<"Orden", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Orden findUnique
   */
  export type OrdenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter, which Orden to fetch.
     */
    where: OrdenWhereUniqueInput
  }

  /**
   * Orden findUniqueOrThrow
   */
  export type OrdenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter, which Orden to fetch.
     */
    where: OrdenWhereUniqueInput
  }

  /**
   * Orden findFirst
   */
  export type OrdenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter, which Orden to fetch.
     */
    where?: OrdenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ordens to fetch.
     */
    orderBy?: OrdenOrderByWithRelationInput | OrdenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ordens.
     */
    cursor?: OrdenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Ordens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ordens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ordens.
     */
    distinct?: OrdenScalarFieldEnum | OrdenScalarFieldEnum[]
  }

  /**
   * Orden findFirstOrThrow
   */
  export type OrdenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter, which Orden to fetch.
     */
    where?: OrdenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ordens to fetch.
     */
    orderBy?: OrdenOrderByWithRelationInput | OrdenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ordens.
     */
    cursor?: OrdenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Ordens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ordens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ordens.
     */
    distinct?: OrdenScalarFieldEnum | OrdenScalarFieldEnum[]
  }

  /**
   * Orden findMany
   */
  export type OrdenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter, which Ordens to fetch.
     */
    where?: OrdenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ordens to fetch.
     */
    orderBy?: OrdenOrderByWithRelationInput | OrdenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ordens.
     */
    cursor?: OrdenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Ordens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ordens.
     */
    skip?: number
    distinct?: OrdenScalarFieldEnum | OrdenScalarFieldEnum[]
  }

  /**
   * Orden create
   */
  export type OrdenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * The data needed to create a Orden.
     */
    data: XOR<OrdenCreateInput, OrdenUncheckedCreateInput>
  }

  /**
   * Orden createMany
   */
  export type OrdenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ordens.
     */
    data: OrdenCreateManyInput | OrdenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Orden createManyAndReturn
   */
  export type OrdenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * The data used to create many Ordens.
     */
    data: OrdenCreateManyInput | OrdenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Orden update
   */
  export type OrdenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * The data needed to update a Orden.
     */
    data: XOR<OrdenUpdateInput, OrdenUncheckedUpdateInput>
    /**
     * Choose, which Orden to update.
     */
    where: OrdenWhereUniqueInput
  }

  /**
   * Orden updateMany
   */
  export type OrdenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ordens.
     */
    data: XOR<OrdenUpdateManyMutationInput, OrdenUncheckedUpdateManyInput>
    /**
     * Filter which Ordens to update
     */
    where?: OrdenWhereInput
    /**
     * Limit how many Ordens to update.
     */
    limit?: number
  }

  /**
   * Orden updateManyAndReturn
   */
  export type OrdenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * The data used to update Ordens.
     */
    data: XOR<OrdenUpdateManyMutationInput, OrdenUncheckedUpdateManyInput>
    /**
     * Filter which Ordens to update
     */
    where?: OrdenWhereInput
    /**
     * Limit how many Ordens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Orden upsert
   */
  export type OrdenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * The filter to search for the Orden to update in case it exists.
     */
    where: OrdenWhereUniqueInput
    /**
     * In case the Orden found by the `where` argument doesn't exist, create a new Orden with this data.
     */
    create: XOR<OrdenCreateInput, OrdenUncheckedCreateInput>
    /**
     * In case the Orden was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrdenUpdateInput, OrdenUncheckedUpdateInput>
  }

  /**
   * Orden delete
   */
  export type OrdenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    /**
     * Filter which Orden to delete.
     */
    where: OrdenWhereUniqueInput
  }

  /**
   * Orden deleteMany
   */
  export type OrdenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ordens to delete
     */
    where?: OrdenWhereInput
    /**
     * Limit how many Ordens to delete.
     */
    limit?: number
  }

  /**
   * Orden.mesero
   */
  export type Orden$meseroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Orden.items
   */
  export type Orden$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    where?: OrdenItemWhereInput
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    cursor?: OrdenItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * Orden.tickets
   */
  export type Orden$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    where?: TicketVentaWhereInput
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    cursor?: TicketVentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * Orden.pedidoCliente
   */
  export type Orden$pedidoClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    where?: PedidoClienteWhereInput
  }

  /**
   * Orden.notifs
   */
  export type Orden$notifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    where?: MeseroNotifWhereInput
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    cursor?: MeseroNotifWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MeseroNotifScalarFieldEnum | MeseroNotifScalarFieldEnum[]
  }

  /**
   * Orden without action
   */
  export type OrdenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
  }


  /**
   * Model OrdenItem
   */

  export type AggregateOrdenItem = {
    _count: OrdenItemCountAggregateOutputType | null
    _avg: OrdenItemAvgAggregateOutputType | null
    _sum: OrdenItemSumAggregateOutputType | null
    _min: OrdenItemMinAggregateOutputType | null
    _max: OrdenItemMaxAggregateOutputType | null
  }

  export type OrdenItemAvgAggregateOutputType = {
    id: number | null
    precio: number | null
    qty: number | null
    subtotal: number | null
    prioridad: number | null
    ordenId: number | null
    chefId: number | null
    bartenderId: number | null
    ticketVentaId: number | null
  }

  export type OrdenItemSumAggregateOutputType = {
    id: number | null
    precio: number | null
    qty: number | null
    subtotal: number | null
    prioridad: number | null
    ordenId: number | null
    chefId: number | null
    bartenderId: number | null
    ticketVentaId: number | null
  }

  export type OrdenItemMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    precio: number | null
    nota: string | null
    tipo: string | null
    estado: string | null
    qty: number | null
    subtotal: number | null
    creadoEn: Date | null
    asignadoEn: Date | null
    preparandoEn: Date | null
    finalizadoEn: Date | null
    prioridad: number | null
    pagado: boolean | null
    ordenId: number | null
    chefId: number | null
    bartenderId: number | null
    ticketVentaId: number | null
  }

  export type OrdenItemMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    precio: number | null
    nota: string | null
    tipo: string | null
    estado: string | null
    qty: number | null
    subtotal: number | null
    creadoEn: Date | null
    asignadoEn: Date | null
    preparandoEn: Date | null
    finalizadoEn: Date | null
    prioridad: number | null
    pagado: boolean | null
    ordenId: number | null
    chefId: number | null
    bartenderId: number | null
    ticketVentaId: number | null
  }

  export type OrdenItemCountAggregateOutputType = {
    id: number
    nombre: number
    precio: number
    nota: number
    tipo: number
    estado: number
    qty: number
    subtotal: number
    creadoEn: number
    asignadoEn: number
    preparandoEn: number
    finalizadoEn: number
    prioridad: number
    pagado: number
    ordenId: number
    chefId: number
    bartenderId: number
    ticketVentaId: number
    _all: number
  }


  export type OrdenItemAvgAggregateInputType = {
    id?: true
    precio?: true
    qty?: true
    subtotal?: true
    prioridad?: true
    ordenId?: true
    chefId?: true
    bartenderId?: true
    ticketVentaId?: true
  }

  export type OrdenItemSumAggregateInputType = {
    id?: true
    precio?: true
    qty?: true
    subtotal?: true
    prioridad?: true
    ordenId?: true
    chefId?: true
    bartenderId?: true
    ticketVentaId?: true
  }

  export type OrdenItemMinAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    nota?: true
    tipo?: true
    estado?: true
    qty?: true
    subtotal?: true
    creadoEn?: true
    asignadoEn?: true
    preparandoEn?: true
    finalizadoEn?: true
    prioridad?: true
    pagado?: true
    ordenId?: true
    chefId?: true
    bartenderId?: true
    ticketVentaId?: true
  }

  export type OrdenItemMaxAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    nota?: true
    tipo?: true
    estado?: true
    qty?: true
    subtotal?: true
    creadoEn?: true
    asignadoEn?: true
    preparandoEn?: true
    finalizadoEn?: true
    prioridad?: true
    pagado?: true
    ordenId?: true
    chefId?: true
    bartenderId?: true
    ticketVentaId?: true
  }

  export type OrdenItemCountAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    nota?: true
    tipo?: true
    estado?: true
    qty?: true
    subtotal?: true
    creadoEn?: true
    asignadoEn?: true
    preparandoEn?: true
    finalizadoEn?: true
    prioridad?: true
    pagado?: true
    ordenId?: true
    chefId?: true
    bartenderId?: true
    ticketVentaId?: true
    _all?: true
  }

  export type OrdenItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdenItem to aggregate.
     */
    where?: OrdenItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdenItems to fetch.
     */
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrdenItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` OrdenItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdenItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrdenItems
    **/
    _count?: true | OrdenItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdenItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdenItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdenItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdenItemMaxAggregateInputType
  }

  export type GetOrdenItemAggregateType<T extends OrdenItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdenItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdenItem[P]>
      : GetScalarType<T[P], AggregateOrdenItem[P]>
  }




  export type OrdenItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrdenItemWhereInput
    orderBy?: OrdenItemOrderByWithAggregationInput | OrdenItemOrderByWithAggregationInput[]
    by: OrdenItemScalarFieldEnum[] | OrdenItemScalarFieldEnum
    having?: OrdenItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdenItemCountAggregateInputType | true
    _avg?: OrdenItemAvgAggregateInputType
    _sum?: OrdenItemSumAggregateInputType
    _min?: OrdenItemMinAggregateInputType
    _max?: OrdenItemMaxAggregateInputType
  }

  export type OrdenItemGroupByOutputType = {
    id: number
    nombre: string
    precio: number
    nota: string | null
    tipo: string
    estado: string
    qty: number
    subtotal: number | null
    creadoEn: Date
    asignadoEn: Date | null
    preparandoEn: Date | null
    finalizadoEn: Date | null
    prioridad: number | null
    pagado: boolean
    ordenId: number
    chefId: number | null
    bartenderId: number | null
    ticketVentaId: number | null
    _count: OrdenItemCountAggregateOutputType | null
    _avg: OrdenItemAvgAggregateOutputType | null
    _sum: OrdenItemSumAggregateOutputType | null
    _min: OrdenItemMinAggregateOutputType | null
    _max: OrdenItemMaxAggregateOutputType | null
  }

  type GetOrdenItemGroupByPayload<T extends OrdenItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdenItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdenItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdenItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrdenItemGroupByOutputType[P]>
        }
      >
    >


  export type OrdenItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    nota?: boolean
    tipo?: boolean
    estado?: boolean
    qty?: boolean
    subtotal?: boolean
    creadoEn?: boolean
    asignadoEn?: boolean
    preparandoEn?: boolean
    finalizadoEn?: boolean
    prioridad?: boolean
    pagado?: boolean
    ordenId?: boolean
    chefId?: boolean
    bartenderId?: boolean
    ticketVentaId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["ordenItem"]>

  export type OrdenItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    nota?: boolean
    tipo?: boolean
    estado?: boolean
    qty?: boolean
    subtotal?: boolean
    creadoEn?: boolean
    asignadoEn?: boolean
    preparandoEn?: boolean
    finalizadoEn?: boolean
    prioridad?: boolean
    pagado?: boolean
    ordenId?: boolean
    chefId?: boolean
    bartenderId?: boolean
    ticketVentaId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["ordenItem"]>

  export type OrdenItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    nota?: boolean
    tipo?: boolean
    estado?: boolean
    qty?: boolean
    subtotal?: boolean
    creadoEn?: boolean
    asignadoEn?: boolean
    preparandoEn?: boolean
    finalizadoEn?: boolean
    prioridad?: boolean
    pagado?: boolean
    ordenId?: boolean
    chefId?: boolean
    bartenderId?: boolean
    ticketVentaId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }, ExtArgs["result"]["ordenItem"]>

  export type OrdenItemSelectScalar = {
    id?: boolean
    nombre?: boolean
    precio?: boolean
    nota?: boolean
    tipo?: boolean
    estado?: boolean
    qty?: boolean
    subtotal?: boolean
    creadoEn?: boolean
    asignadoEn?: boolean
    preparandoEn?: boolean
    finalizadoEn?: boolean
    prioridad?: boolean
    pagado?: boolean
    ordenId?: boolean
    chefId?: boolean
    bartenderId?: boolean
    ticketVentaId?: boolean
  }

  export type OrdenItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "precio" | "nota" | "tipo" | "estado" | "qty" | "subtotal" | "creadoEn" | "asignadoEn" | "preparandoEn" | "finalizadoEn" | "prioridad" | "pagado" | "ordenId" | "chefId" | "bartenderId" | "ticketVentaId", ExtArgs["result"]["ordenItem"]>
  export type OrdenItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }
  export type OrdenItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }
  export type OrdenItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    chef?: boolean | OrdenItem$chefArgs<ExtArgs>
    bartender?: boolean | OrdenItem$bartenderArgs<ExtArgs>
    ticket?: boolean | OrdenItem$ticketArgs<ExtArgs>
  }

  export type $OrdenItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrdenItem"
    objects: {
      orden: Prisma.$OrdenPayload<ExtArgs>
      chef: Prisma.$UsuarioPayload<ExtArgs> | null
      bartender: Prisma.$UsuarioPayload<ExtArgs> | null
      ticket: Prisma.$TicketVentaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      precio: number
      nota: string | null
      tipo: string
      estado: string
      qty: number
      subtotal: number | null
      creadoEn: Date
      asignadoEn: Date | null
      preparandoEn: Date | null
      finalizadoEn: Date | null
      prioridad: number | null
      pagado: boolean
      ordenId: number
      chefId: number | null
      bartenderId: number | null
      ticketVentaId: number | null
    }, ExtArgs["result"]["ordenItem"]>
    composites: {}
  }

  type OrdenItemGetPayload<S extends boolean | null | undefined | OrdenItemDefaultArgs> = $Result.GetResult<Prisma.$OrdenItemPayload, S>

  type OrdenItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrdenItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdenItemCountAggregateInputType | true
    }

  export interface OrdenItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrdenItem'], meta: { name: 'OrdenItem' } }
    /**
     * Find zero or one OrdenItem that matches the filter.
     * @param {OrdenItemFindUniqueArgs} args - Arguments to find a OrdenItem
     * @example
     * // Get one OrdenItem
     * const ordenItem = await prisma.ordenItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrdenItemFindUniqueArgs>(args: SelectSubset<T, OrdenItemFindUniqueArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrdenItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrdenItemFindUniqueOrThrowArgs} args - Arguments to find a OrdenItem
     * @example
     * // Get one OrdenItem
     * const ordenItem = await prisma.ordenItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrdenItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrdenItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrdenItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemFindFirstArgs} args - Arguments to find a OrdenItem
     * @example
     * // Get one OrdenItem
     * const ordenItem = await prisma.ordenItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrdenItemFindFirstArgs>(args?: SelectSubset<T, OrdenItemFindFirstArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrdenItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemFindFirstOrThrowArgs} args - Arguments to find a OrdenItem
     * @example
     * // Get one OrdenItem
     * const ordenItem = await prisma.ordenItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrdenItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrdenItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrdenItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrdenItems
     * const ordenItems = await prisma.ordenItem.findMany()
     * 
     * // Get first 10 OrdenItems
     * const ordenItems = await prisma.ordenItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordenItemWithIdOnly = await prisma.ordenItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrdenItemFindManyArgs>(args?: SelectSubset<T, OrdenItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrdenItem.
     * @param {OrdenItemCreateArgs} args - Arguments to create a OrdenItem.
     * @example
     * // Create one OrdenItem
     * const OrdenItem = await prisma.ordenItem.create({
     *   data: {
     *     // ... data to create a OrdenItem
     *   }
     * })
     * 
     */
    create<T extends OrdenItemCreateArgs>(args: SelectSubset<T, OrdenItemCreateArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrdenItems.
     * @param {OrdenItemCreateManyArgs} args - Arguments to create many OrdenItems.
     * @example
     * // Create many OrdenItems
     * const ordenItem = await prisma.ordenItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrdenItemCreateManyArgs>(args?: SelectSubset<T, OrdenItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrdenItems and returns the data saved in the database.
     * @param {OrdenItemCreateManyAndReturnArgs} args - Arguments to create many OrdenItems.
     * @example
     * // Create many OrdenItems
     * const ordenItem = await prisma.ordenItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrdenItems and only return the `id`
     * const ordenItemWithIdOnly = await prisma.ordenItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrdenItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrdenItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrdenItem.
     * @param {OrdenItemDeleteArgs} args - Arguments to delete one OrdenItem.
     * @example
     * // Delete one OrdenItem
     * const OrdenItem = await prisma.ordenItem.delete({
     *   where: {
     *     // ... filter to delete one OrdenItem
     *   }
     * })
     * 
     */
    delete<T extends OrdenItemDeleteArgs>(args: SelectSubset<T, OrdenItemDeleteArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrdenItem.
     * @param {OrdenItemUpdateArgs} args - Arguments to update one OrdenItem.
     * @example
     * // Update one OrdenItem
     * const ordenItem = await prisma.ordenItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrdenItemUpdateArgs>(args: SelectSubset<T, OrdenItemUpdateArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrdenItems.
     * @param {OrdenItemDeleteManyArgs} args - Arguments to filter OrdenItems to delete.
     * @example
     * // Delete a few OrdenItems
     * const { count } = await prisma.ordenItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrdenItemDeleteManyArgs>(args?: SelectSubset<T, OrdenItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrdenItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrdenItems
     * const ordenItem = await prisma.ordenItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrdenItemUpdateManyArgs>(args: SelectSubset<T, OrdenItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrdenItems and returns the data updated in the database.
     * @param {OrdenItemUpdateManyAndReturnArgs} args - Arguments to update many OrdenItems.
     * @example
     * // Update many OrdenItems
     * const ordenItem = await prisma.ordenItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrdenItems and only return the `id`
     * const ordenItemWithIdOnly = await prisma.ordenItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrdenItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrdenItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrdenItem.
     * @param {OrdenItemUpsertArgs} args - Arguments to update or create a OrdenItem.
     * @example
     * // Update or create a OrdenItem
     * const ordenItem = await prisma.ordenItem.upsert({
     *   create: {
     *     // ... data to create a OrdenItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrdenItem we want to update
     *   }
     * })
     */
    upsert<T extends OrdenItemUpsertArgs>(args: SelectSubset<T, OrdenItemUpsertArgs<ExtArgs>>): Prisma__OrdenItemClient<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrdenItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemCountArgs} args - Arguments to filter OrdenItems to count.
     * @example
     * // Count the number of OrdenItems
     * const count = await prisma.ordenItem.count({
     *   where: {
     *     // ... the filter for the OrdenItems we want to count
     *   }
     * })
    **/
    count<T extends OrdenItemCountArgs>(
      args?: Subset<T, OrdenItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdenItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrdenItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdenItemAggregateArgs>(args: Subset<T, OrdenItemAggregateArgs>): Prisma.PrismaPromise<GetOrdenItemAggregateType<T>>

    /**
     * Group by OrdenItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrdenItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrdenItemGroupByArgs['orderBy'] }
        : { orderBy?: OrdenItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrdenItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdenItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrdenItem model
   */
  readonly fields: OrdenItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrdenItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrdenItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orden<T extends OrdenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrdenDefaultArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    chef<T extends OrdenItem$chefArgs<ExtArgs> = {}>(args?: Subset<T, OrdenItem$chefArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    bartender<T extends OrdenItem$bartenderArgs<ExtArgs> = {}>(args?: Subset<T, OrdenItem$bartenderArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ticket<T extends OrdenItem$ticketArgs<ExtArgs> = {}>(args?: Subset<T, OrdenItem$ticketArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrdenItem model
   */
  interface OrdenItemFieldRefs {
    readonly id: FieldRef<"OrdenItem", 'Int'>
    readonly nombre: FieldRef<"OrdenItem", 'String'>
    readonly precio: FieldRef<"OrdenItem", 'Float'>
    readonly nota: FieldRef<"OrdenItem", 'String'>
    readonly tipo: FieldRef<"OrdenItem", 'String'>
    readonly estado: FieldRef<"OrdenItem", 'String'>
    readonly qty: FieldRef<"OrdenItem", 'Int'>
    readonly subtotal: FieldRef<"OrdenItem", 'Float'>
    readonly creadoEn: FieldRef<"OrdenItem", 'DateTime'>
    readonly asignadoEn: FieldRef<"OrdenItem", 'DateTime'>
    readonly preparandoEn: FieldRef<"OrdenItem", 'DateTime'>
    readonly finalizadoEn: FieldRef<"OrdenItem", 'DateTime'>
    readonly prioridad: FieldRef<"OrdenItem", 'Int'>
    readonly pagado: FieldRef<"OrdenItem", 'Boolean'>
    readonly ordenId: FieldRef<"OrdenItem", 'Int'>
    readonly chefId: FieldRef<"OrdenItem", 'Int'>
    readonly bartenderId: FieldRef<"OrdenItem", 'Int'>
    readonly ticketVentaId: FieldRef<"OrdenItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OrdenItem findUnique
   */
  export type OrdenItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter, which OrdenItem to fetch.
     */
    where: OrdenItemWhereUniqueInput
  }

  /**
   * OrdenItem findUniqueOrThrow
   */
  export type OrdenItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter, which OrdenItem to fetch.
     */
    where: OrdenItemWhereUniqueInput
  }

  /**
   * OrdenItem findFirst
   */
  export type OrdenItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter, which OrdenItem to fetch.
     */
    where?: OrdenItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdenItems to fetch.
     */
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdenItems.
     */
    cursor?: OrdenItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` OrdenItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdenItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdenItems.
     */
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * OrdenItem findFirstOrThrow
   */
  export type OrdenItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter, which OrdenItem to fetch.
     */
    where?: OrdenItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdenItems to fetch.
     */
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrdenItems.
     */
    cursor?: OrdenItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` OrdenItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdenItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrdenItems.
     */
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * OrdenItem findMany
   */
  export type OrdenItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter, which OrdenItems to fetch.
     */
    where?: OrdenItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrdenItems to fetch.
     */
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrdenItems.
     */
    cursor?: OrdenItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` OrdenItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrdenItems.
     */
    skip?: number
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * OrdenItem create
   */
  export type OrdenItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrdenItem.
     */
    data: XOR<OrdenItemCreateInput, OrdenItemUncheckedCreateInput>
  }

  /**
   * OrdenItem createMany
   */
  export type OrdenItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrdenItems.
     */
    data: OrdenItemCreateManyInput | OrdenItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrdenItem createManyAndReturn
   */
  export type OrdenItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrdenItems.
     */
    data: OrdenItemCreateManyInput | OrdenItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrdenItem update
   */
  export type OrdenItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrdenItem.
     */
    data: XOR<OrdenItemUpdateInput, OrdenItemUncheckedUpdateInput>
    /**
     * Choose, which OrdenItem to update.
     */
    where: OrdenItemWhereUniqueInput
  }

  /**
   * OrdenItem updateMany
   */
  export type OrdenItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrdenItems.
     */
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyInput>
    /**
     * Filter which OrdenItems to update
     */
    where?: OrdenItemWhereInput
    /**
     * Limit how many OrdenItems to update.
     */
    limit?: number
  }

  /**
   * OrdenItem updateManyAndReturn
   */
  export type OrdenItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * The data used to update OrdenItems.
     */
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyInput>
    /**
     * Filter which OrdenItems to update
     */
    where?: OrdenItemWhereInput
    /**
     * Limit how many OrdenItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrdenItem upsert
   */
  export type OrdenItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrdenItem to update in case it exists.
     */
    where: OrdenItemWhereUniqueInput
    /**
     * In case the OrdenItem found by the `where` argument doesn't exist, create a new OrdenItem with this data.
     */
    create: XOR<OrdenItemCreateInput, OrdenItemUncheckedCreateInput>
    /**
     * In case the OrdenItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrdenItemUpdateInput, OrdenItemUncheckedUpdateInput>
  }

  /**
   * OrdenItem delete
   */
  export type OrdenItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    /**
     * Filter which OrdenItem to delete.
     */
    where: OrdenItemWhereUniqueInput
  }

  /**
   * OrdenItem deleteMany
   */
  export type OrdenItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrdenItems to delete
     */
    where?: OrdenItemWhereInput
    /**
     * Limit how many OrdenItems to delete.
     */
    limit?: number
  }

  /**
   * OrdenItem.chef
   */
  export type OrdenItem$chefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * OrdenItem.bartender
   */
  export type OrdenItem$bartenderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * OrdenItem.ticket
   */
  export type OrdenItem$ticketArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    where?: TicketVentaWhereInput
  }

  /**
   * OrdenItem without action
   */
  export type OrdenItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
  }


  /**
   * Model CocinaChef
   */

  export type AggregateCocinaChef = {
    _count: CocinaChefCountAggregateOutputType | null
    _avg: CocinaChefAvgAggregateOutputType | null
    _sum: CocinaChefSumAggregateOutputType | null
    _min: CocinaChefMinAggregateOutputType | null
    _max: CocinaChefMaxAggregateOutputType | null
  }

  export type CocinaChefAvgAggregateOutputType = {
    id: number | null
    chefId: number | null
  }

  export type CocinaChefSumAggregateOutputType = {
    id: number | null
    chefId: number | null
  }

  export type CocinaChefMinAggregateOutputType = {
    id: number | null
    chefId: number | null
    activo: boolean | null
    lastSeen: Date | null
  }

  export type CocinaChefMaxAggregateOutputType = {
    id: number | null
    chefId: number | null
    activo: boolean | null
    lastSeen: Date | null
  }

  export type CocinaChefCountAggregateOutputType = {
    id: number
    chefId: number
    activo: number
    lastSeen: number
    _all: number
  }


  export type CocinaChefAvgAggregateInputType = {
    id?: true
    chefId?: true
  }

  export type CocinaChefSumAggregateInputType = {
    id?: true
    chefId?: true
  }

  export type CocinaChefMinAggregateInputType = {
    id?: true
    chefId?: true
    activo?: true
    lastSeen?: true
  }

  export type CocinaChefMaxAggregateInputType = {
    id?: true
    chefId?: true
    activo?: true
    lastSeen?: true
  }

  export type CocinaChefCountAggregateInputType = {
    id?: true
    chefId?: true
    activo?: true
    lastSeen?: true
    _all?: true
  }

  export type CocinaChefAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CocinaChef to aggregate.
     */
    where?: CocinaChefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CocinaChefs to fetch.
     */
    orderBy?: CocinaChefOrderByWithRelationInput | CocinaChefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CocinaChefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CocinaChefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CocinaChefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CocinaChefs
    **/
    _count?: true | CocinaChefCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CocinaChefAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CocinaChefSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CocinaChefMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CocinaChefMaxAggregateInputType
  }

  export type GetCocinaChefAggregateType<T extends CocinaChefAggregateArgs> = {
        [P in keyof T & keyof AggregateCocinaChef]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCocinaChef[P]>
      : GetScalarType<T[P], AggregateCocinaChef[P]>
  }




  export type CocinaChefGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CocinaChefWhereInput
    orderBy?: CocinaChefOrderByWithAggregationInput | CocinaChefOrderByWithAggregationInput[]
    by: CocinaChefScalarFieldEnum[] | CocinaChefScalarFieldEnum
    having?: CocinaChefScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CocinaChefCountAggregateInputType | true
    _avg?: CocinaChefAvgAggregateInputType
    _sum?: CocinaChefSumAggregateInputType
    _min?: CocinaChefMinAggregateInputType
    _max?: CocinaChefMaxAggregateInputType
  }

  export type CocinaChefGroupByOutputType = {
    id: number
    chefId: number
    activo: boolean
    lastSeen: Date
    _count: CocinaChefCountAggregateOutputType | null
    _avg: CocinaChefAvgAggregateOutputType | null
    _sum: CocinaChefSumAggregateOutputType | null
    _min: CocinaChefMinAggregateOutputType | null
    _max: CocinaChefMaxAggregateOutputType | null
  }

  type GetCocinaChefGroupByPayload<T extends CocinaChefGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CocinaChefGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CocinaChefGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CocinaChefGroupByOutputType[P]>
            : GetScalarType<T[P], CocinaChefGroupByOutputType[P]>
        }
      >
    >


  export type CocinaChefSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chefId?: boolean
    activo?: boolean
    lastSeen?: boolean
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cocinaChef"]>

  export type CocinaChefSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chefId?: boolean
    activo?: boolean
    lastSeen?: boolean
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cocinaChef"]>

  export type CocinaChefSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chefId?: boolean
    activo?: boolean
    lastSeen?: boolean
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cocinaChef"]>

  export type CocinaChefSelectScalar = {
    id?: boolean
    chefId?: boolean
    activo?: boolean
    lastSeen?: boolean
  }

  export type CocinaChefOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chefId" | "activo" | "lastSeen", ExtArgs["result"]["cocinaChef"]>
  export type CocinaChefInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type CocinaChefIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type CocinaChefIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chef?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $CocinaChefPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CocinaChef"
    objects: {
      chef: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      chefId: number
      activo: boolean
      lastSeen: Date
    }, ExtArgs["result"]["cocinaChef"]>
    composites: {}
  }

  type CocinaChefGetPayload<S extends boolean | null | undefined | CocinaChefDefaultArgs> = $Result.GetResult<Prisma.$CocinaChefPayload, S>

  type CocinaChefCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CocinaChefFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CocinaChefCountAggregateInputType | true
    }

  export interface CocinaChefDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CocinaChef'], meta: { name: 'CocinaChef' } }
    /**
     * Find zero or one CocinaChef that matches the filter.
     * @param {CocinaChefFindUniqueArgs} args - Arguments to find a CocinaChef
     * @example
     * // Get one CocinaChef
     * const cocinaChef = await prisma.cocinaChef.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CocinaChefFindUniqueArgs>(args: SelectSubset<T, CocinaChefFindUniqueArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CocinaChef that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CocinaChefFindUniqueOrThrowArgs} args - Arguments to find a CocinaChef
     * @example
     * // Get one CocinaChef
     * const cocinaChef = await prisma.cocinaChef.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CocinaChefFindUniqueOrThrowArgs>(args: SelectSubset<T, CocinaChefFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CocinaChef that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefFindFirstArgs} args - Arguments to find a CocinaChef
     * @example
     * // Get one CocinaChef
     * const cocinaChef = await prisma.cocinaChef.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CocinaChefFindFirstArgs>(args?: SelectSubset<T, CocinaChefFindFirstArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CocinaChef that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefFindFirstOrThrowArgs} args - Arguments to find a CocinaChef
     * @example
     * // Get one CocinaChef
     * const cocinaChef = await prisma.cocinaChef.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CocinaChefFindFirstOrThrowArgs>(args?: SelectSubset<T, CocinaChefFindFirstOrThrowArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CocinaChefs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CocinaChefs
     * const cocinaChefs = await prisma.cocinaChef.findMany()
     * 
     * // Get first 10 CocinaChefs
     * const cocinaChefs = await prisma.cocinaChef.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cocinaChefWithIdOnly = await prisma.cocinaChef.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CocinaChefFindManyArgs>(args?: SelectSubset<T, CocinaChefFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CocinaChef.
     * @param {CocinaChefCreateArgs} args - Arguments to create a CocinaChef.
     * @example
     * // Create one CocinaChef
     * const CocinaChef = await prisma.cocinaChef.create({
     *   data: {
     *     // ... data to create a CocinaChef
     *   }
     * })
     * 
     */
    create<T extends CocinaChefCreateArgs>(args: SelectSubset<T, CocinaChefCreateArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CocinaChefs.
     * @param {CocinaChefCreateManyArgs} args - Arguments to create many CocinaChefs.
     * @example
     * // Create many CocinaChefs
     * const cocinaChef = await prisma.cocinaChef.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CocinaChefCreateManyArgs>(args?: SelectSubset<T, CocinaChefCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CocinaChefs and returns the data saved in the database.
     * @param {CocinaChefCreateManyAndReturnArgs} args - Arguments to create many CocinaChefs.
     * @example
     * // Create many CocinaChefs
     * const cocinaChef = await prisma.cocinaChef.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CocinaChefs and only return the `id`
     * const cocinaChefWithIdOnly = await prisma.cocinaChef.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CocinaChefCreateManyAndReturnArgs>(args?: SelectSubset<T, CocinaChefCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CocinaChef.
     * @param {CocinaChefDeleteArgs} args - Arguments to delete one CocinaChef.
     * @example
     * // Delete one CocinaChef
     * const CocinaChef = await prisma.cocinaChef.delete({
     *   where: {
     *     // ... filter to delete one CocinaChef
     *   }
     * })
     * 
     */
    delete<T extends CocinaChefDeleteArgs>(args: SelectSubset<T, CocinaChefDeleteArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CocinaChef.
     * @param {CocinaChefUpdateArgs} args - Arguments to update one CocinaChef.
     * @example
     * // Update one CocinaChef
     * const cocinaChef = await prisma.cocinaChef.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CocinaChefUpdateArgs>(args: SelectSubset<T, CocinaChefUpdateArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CocinaChefs.
     * @param {CocinaChefDeleteManyArgs} args - Arguments to filter CocinaChefs to delete.
     * @example
     * // Delete a few CocinaChefs
     * const { count } = await prisma.cocinaChef.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CocinaChefDeleteManyArgs>(args?: SelectSubset<T, CocinaChefDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CocinaChefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CocinaChefs
     * const cocinaChef = await prisma.cocinaChef.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CocinaChefUpdateManyArgs>(args: SelectSubset<T, CocinaChefUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CocinaChefs and returns the data updated in the database.
     * @param {CocinaChefUpdateManyAndReturnArgs} args - Arguments to update many CocinaChefs.
     * @example
     * // Update many CocinaChefs
     * const cocinaChef = await prisma.cocinaChef.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CocinaChefs and only return the `id`
     * const cocinaChefWithIdOnly = await prisma.cocinaChef.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CocinaChefUpdateManyAndReturnArgs>(args: SelectSubset<T, CocinaChefUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CocinaChef.
     * @param {CocinaChefUpsertArgs} args - Arguments to update or create a CocinaChef.
     * @example
     * // Update or create a CocinaChef
     * const cocinaChef = await prisma.cocinaChef.upsert({
     *   create: {
     *     // ... data to create a CocinaChef
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CocinaChef we want to update
     *   }
     * })
     */
    upsert<T extends CocinaChefUpsertArgs>(args: SelectSubset<T, CocinaChefUpsertArgs<ExtArgs>>): Prisma__CocinaChefClient<$Result.GetResult<Prisma.$CocinaChefPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CocinaChefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefCountArgs} args - Arguments to filter CocinaChefs to count.
     * @example
     * // Count the number of CocinaChefs
     * const count = await prisma.cocinaChef.count({
     *   where: {
     *     // ... the filter for the CocinaChefs we want to count
     *   }
     * })
    **/
    count<T extends CocinaChefCountArgs>(
      args?: Subset<T, CocinaChefCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CocinaChefCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CocinaChef.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CocinaChefAggregateArgs>(args: Subset<T, CocinaChefAggregateArgs>): Prisma.PrismaPromise<GetCocinaChefAggregateType<T>>

    /**
     * Group by CocinaChef.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CocinaChefGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CocinaChefGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CocinaChefGroupByArgs['orderBy'] }
        : { orderBy?: CocinaChefGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CocinaChefGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCocinaChefGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CocinaChef model
   */
  readonly fields: CocinaChefFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CocinaChef.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CocinaChefClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chef<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CocinaChef model
   */
  interface CocinaChefFieldRefs {
    readonly id: FieldRef<"CocinaChef", 'Int'>
    readonly chefId: FieldRef<"CocinaChef", 'Int'>
    readonly activo: FieldRef<"CocinaChef", 'Boolean'>
    readonly lastSeen: FieldRef<"CocinaChef", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CocinaChef findUnique
   */
  export type CocinaChefFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter, which CocinaChef to fetch.
     */
    where: CocinaChefWhereUniqueInput
  }

  /**
   * CocinaChef findUniqueOrThrow
   */
  export type CocinaChefFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter, which CocinaChef to fetch.
     */
    where: CocinaChefWhereUniqueInput
  }

  /**
   * CocinaChef findFirst
   */
  export type CocinaChefFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter, which CocinaChef to fetch.
     */
    where?: CocinaChefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CocinaChefs to fetch.
     */
    orderBy?: CocinaChefOrderByWithRelationInput | CocinaChefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CocinaChefs.
     */
    cursor?: CocinaChefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CocinaChefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CocinaChefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CocinaChefs.
     */
    distinct?: CocinaChefScalarFieldEnum | CocinaChefScalarFieldEnum[]
  }

  /**
   * CocinaChef findFirstOrThrow
   */
  export type CocinaChefFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter, which CocinaChef to fetch.
     */
    where?: CocinaChefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CocinaChefs to fetch.
     */
    orderBy?: CocinaChefOrderByWithRelationInput | CocinaChefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CocinaChefs.
     */
    cursor?: CocinaChefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CocinaChefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CocinaChefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CocinaChefs.
     */
    distinct?: CocinaChefScalarFieldEnum | CocinaChefScalarFieldEnum[]
  }

  /**
   * CocinaChef findMany
   */
  export type CocinaChefFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter, which CocinaChefs to fetch.
     */
    where?: CocinaChefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CocinaChefs to fetch.
     */
    orderBy?: CocinaChefOrderByWithRelationInput | CocinaChefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CocinaChefs.
     */
    cursor?: CocinaChefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CocinaChefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CocinaChefs.
     */
    skip?: number
    distinct?: CocinaChefScalarFieldEnum | CocinaChefScalarFieldEnum[]
  }

  /**
   * CocinaChef create
   */
  export type CocinaChefCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * The data needed to create a CocinaChef.
     */
    data: XOR<CocinaChefCreateInput, CocinaChefUncheckedCreateInput>
  }

  /**
   * CocinaChef createMany
   */
  export type CocinaChefCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CocinaChefs.
     */
    data: CocinaChefCreateManyInput | CocinaChefCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CocinaChef createManyAndReturn
   */
  export type CocinaChefCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * The data used to create many CocinaChefs.
     */
    data: CocinaChefCreateManyInput | CocinaChefCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CocinaChef update
   */
  export type CocinaChefUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * The data needed to update a CocinaChef.
     */
    data: XOR<CocinaChefUpdateInput, CocinaChefUncheckedUpdateInput>
    /**
     * Choose, which CocinaChef to update.
     */
    where: CocinaChefWhereUniqueInput
  }

  /**
   * CocinaChef updateMany
   */
  export type CocinaChefUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CocinaChefs.
     */
    data: XOR<CocinaChefUpdateManyMutationInput, CocinaChefUncheckedUpdateManyInput>
    /**
     * Filter which CocinaChefs to update
     */
    where?: CocinaChefWhereInput
    /**
     * Limit how many CocinaChefs to update.
     */
    limit?: number
  }

  /**
   * CocinaChef updateManyAndReturn
   */
  export type CocinaChefUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * The data used to update CocinaChefs.
     */
    data: XOR<CocinaChefUpdateManyMutationInput, CocinaChefUncheckedUpdateManyInput>
    /**
     * Filter which CocinaChefs to update
     */
    where?: CocinaChefWhereInput
    /**
     * Limit how many CocinaChefs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CocinaChef upsert
   */
  export type CocinaChefUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * The filter to search for the CocinaChef to update in case it exists.
     */
    where: CocinaChefWhereUniqueInput
    /**
     * In case the CocinaChef found by the `where` argument doesn't exist, create a new CocinaChef with this data.
     */
    create: XOR<CocinaChefCreateInput, CocinaChefUncheckedCreateInput>
    /**
     * In case the CocinaChef was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CocinaChefUpdateInput, CocinaChefUncheckedUpdateInput>
  }

  /**
   * CocinaChef delete
   */
  export type CocinaChefDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
    /**
     * Filter which CocinaChef to delete.
     */
    where: CocinaChefWhereUniqueInput
  }

  /**
   * CocinaChef deleteMany
   */
  export type CocinaChefDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CocinaChefs to delete
     */
    where?: CocinaChefWhereInput
    /**
     * Limit how many CocinaChefs to delete.
     */
    limit?: number
  }

  /**
   * CocinaChef without action
   */
  export type CocinaChefDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CocinaChef
     */
    select?: CocinaChefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CocinaChef
     */
    omit?: CocinaChefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CocinaChefInclude<ExtArgs> | null
  }


  /**
   * Model BarraBartender
   */

  export type AggregateBarraBartender = {
    _count: BarraBartenderCountAggregateOutputType | null
    _avg: BarraBartenderAvgAggregateOutputType | null
    _sum: BarraBartenderSumAggregateOutputType | null
    _min: BarraBartenderMinAggregateOutputType | null
    _max: BarraBartenderMaxAggregateOutputType | null
  }

  export type BarraBartenderAvgAggregateOutputType = {
    id: number | null
    bartenderId: number | null
  }

  export type BarraBartenderSumAggregateOutputType = {
    id: number | null
    bartenderId: number | null
  }

  export type BarraBartenderMinAggregateOutputType = {
    id: number | null
    bartenderId: number | null
    activo: boolean | null
    lastSeen: Date | null
  }

  export type BarraBartenderMaxAggregateOutputType = {
    id: number | null
    bartenderId: number | null
    activo: boolean | null
    lastSeen: Date | null
  }

  export type BarraBartenderCountAggregateOutputType = {
    id: number
    bartenderId: number
    activo: number
    lastSeen: number
    _all: number
  }


  export type BarraBartenderAvgAggregateInputType = {
    id?: true
    bartenderId?: true
  }

  export type BarraBartenderSumAggregateInputType = {
    id?: true
    bartenderId?: true
  }

  export type BarraBartenderMinAggregateInputType = {
    id?: true
    bartenderId?: true
    activo?: true
    lastSeen?: true
  }

  export type BarraBartenderMaxAggregateInputType = {
    id?: true
    bartenderId?: true
    activo?: true
    lastSeen?: true
  }

  export type BarraBartenderCountAggregateInputType = {
    id?: true
    bartenderId?: true
    activo?: true
    lastSeen?: true
    _all?: true
  }

  export type BarraBartenderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BarraBartender to aggregate.
     */
    where?: BarraBartenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BarraBartenders to fetch.
     */
    orderBy?: BarraBartenderOrderByWithRelationInput | BarraBartenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BarraBartenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` BarraBartenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BarraBartenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BarraBartenders
    **/
    _count?: true | BarraBartenderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BarraBartenderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BarraBartenderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BarraBartenderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BarraBartenderMaxAggregateInputType
  }

  export type GetBarraBartenderAggregateType<T extends BarraBartenderAggregateArgs> = {
        [P in keyof T & keyof AggregateBarraBartender]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBarraBartender[P]>
      : GetScalarType<T[P], AggregateBarraBartender[P]>
  }




  export type BarraBartenderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BarraBartenderWhereInput
    orderBy?: BarraBartenderOrderByWithAggregationInput | BarraBartenderOrderByWithAggregationInput[]
    by: BarraBartenderScalarFieldEnum[] | BarraBartenderScalarFieldEnum
    having?: BarraBartenderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BarraBartenderCountAggregateInputType | true
    _avg?: BarraBartenderAvgAggregateInputType
    _sum?: BarraBartenderSumAggregateInputType
    _min?: BarraBartenderMinAggregateInputType
    _max?: BarraBartenderMaxAggregateInputType
  }

  export type BarraBartenderGroupByOutputType = {
    id: number
    bartenderId: number
    activo: boolean
    lastSeen: Date
    _count: BarraBartenderCountAggregateOutputType | null
    _avg: BarraBartenderAvgAggregateOutputType | null
    _sum: BarraBartenderSumAggregateOutputType | null
    _min: BarraBartenderMinAggregateOutputType | null
    _max: BarraBartenderMaxAggregateOutputType | null
  }

  type GetBarraBartenderGroupByPayload<T extends BarraBartenderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BarraBartenderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BarraBartenderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BarraBartenderGroupByOutputType[P]>
            : GetScalarType<T[P], BarraBartenderGroupByOutputType[P]>
        }
      >
    >


  export type BarraBartenderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bartenderId?: boolean
    activo?: boolean
    lastSeen?: boolean
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["barraBartender"]>

  export type BarraBartenderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bartenderId?: boolean
    activo?: boolean
    lastSeen?: boolean
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["barraBartender"]>

  export type BarraBartenderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bartenderId?: boolean
    activo?: boolean
    lastSeen?: boolean
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["barraBartender"]>

  export type BarraBartenderSelectScalar = {
    id?: boolean
    bartenderId?: boolean
    activo?: boolean
    lastSeen?: boolean
  }

  export type BarraBartenderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bartenderId" | "activo" | "lastSeen", ExtArgs["result"]["barraBartender"]>
  export type BarraBartenderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type BarraBartenderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type BarraBartenderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bartender?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $BarraBartenderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BarraBartender"
    objects: {
      bartender: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bartenderId: number
      activo: boolean
      lastSeen: Date
    }, ExtArgs["result"]["barraBartender"]>
    composites: {}
  }

  type BarraBartenderGetPayload<S extends boolean | null | undefined | BarraBartenderDefaultArgs> = $Result.GetResult<Prisma.$BarraBartenderPayload, S>

  type BarraBartenderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BarraBartenderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BarraBartenderCountAggregateInputType | true
    }

  export interface BarraBartenderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BarraBartender'], meta: { name: 'BarraBartender' } }
    /**
     * Find zero or one BarraBartender that matches the filter.
     * @param {BarraBartenderFindUniqueArgs} args - Arguments to find a BarraBartender
     * @example
     * // Get one BarraBartender
     * const barraBartender = await prisma.barraBartender.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BarraBartenderFindUniqueArgs>(args: SelectSubset<T, BarraBartenderFindUniqueArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BarraBartender that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BarraBartenderFindUniqueOrThrowArgs} args - Arguments to find a BarraBartender
     * @example
     * // Get one BarraBartender
     * const barraBartender = await prisma.barraBartender.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BarraBartenderFindUniqueOrThrowArgs>(args: SelectSubset<T, BarraBartenderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BarraBartender that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderFindFirstArgs} args - Arguments to find a BarraBartender
     * @example
     * // Get one BarraBartender
     * const barraBartender = await prisma.barraBartender.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BarraBartenderFindFirstArgs>(args?: SelectSubset<T, BarraBartenderFindFirstArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BarraBartender that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderFindFirstOrThrowArgs} args - Arguments to find a BarraBartender
     * @example
     * // Get one BarraBartender
     * const barraBartender = await prisma.barraBartender.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BarraBartenderFindFirstOrThrowArgs>(args?: SelectSubset<T, BarraBartenderFindFirstOrThrowArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BarraBartenders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BarraBartenders
     * const barraBartenders = await prisma.barraBartender.findMany()
     * 
     * // Get first 10 BarraBartenders
     * const barraBartenders = await prisma.barraBartender.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const barraBartenderWithIdOnly = await prisma.barraBartender.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BarraBartenderFindManyArgs>(args?: SelectSubset<T, BarraBartenderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BarraBartender.
     * @param {BarraBartenderCreateArgs} args - Arguments to create a BarraBartender.
     * @example
     * // Create one BarraBartender
     * const BarraBartender = await prisma.barraBartender.create({
     *   data: {
     *     // ... data to create a BarraBartender
     *   }
     * })
     * 
     */
    create<T extends BarraBartenderCreateArgs>(args: SelectSubset<T, BarraBartenderCreateArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BarraBartenders.
     * @param {BarraBartenderCreateManyArgs} args - Arguments to create many BarraBartenders.
     * @example
     * // Create many BarraBartenders
     * const barraBartender = await prisma.barraBartender.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BarraBartenderCreateManyArgs>(args?: SelectSubset<T, BarraBartenderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BarraBartenders and returns the data saved in the database.
     * @param {BarraBartenderCreateManyAndReturnArgs} args - Arguments to create many BarraBartenders.
     * @example
     * // Create many BarraBartenders
     * const barraBartender = await prisma.barraBartender.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BarraBartenders and only return the `id`
     * const barraBartenderWithIdOnly = await prisma.barraBartender.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BarraBartenderCreateManyAndReturnArgs>(args?: SelectSubset<T, BarraBartenderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BarraBartender.
     * @param {BarraBartenderDeleteArgs} args - Arguments to delete one BarraBartender.
     * @example
     * // Delete one BarraBartender
     * const BarraBartender = await prisma.barraBartender.delete({
     *   where: {
     *     // ... filter to delete one BarraBartender
     *   }
     * })
     * 
     */
    delete<T extends BarraBartenderDeleteArgs>(args: SelectSubset<T, BarraBartenderDeleteArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BarraBartender.
     * @param {BarraBartenderUpdateArgs} args - Arguments to update one BarraBartender.
     * @example
     * // Update one BarraBartender
     * const barraBartender = await prisma.barraBartender.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BarraBartenderUpdateArgs>(args: SelectSubset<T, BarraBartenderUpdateArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BarraBartenders.
     * @param {BarraBartenderDeleteManyArgs} args - Arguments to filter BarraBartenders to delete.
     * @example
     * // Delete a few BarraBartenders
     * const { count } = await prisma.barraBartender.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BarraBartenderDeleteManyArgs>(args?: SelectSubset<T, BarraBartenderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BarraBartenders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BarraBartenders
     * const barraBartender = await prisma.barraBartender.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BarraBartenderUpdateManyArgs>(args: SelectSubset<T, BarraBartenderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BarraBartenders and returns the data updated in the database.
     * @param {BarraBartenderUpdateManyAndReturnArgs} args - Arguments to update many BarraBartenders.
     * @example
     * // Update many BarraBartenders
     * const barraBartender = await prisma.barraBartender.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BarraBartenders and only return the `id`
     * const barraBartenderWithIdOnly = await prisma.barraBartender.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BarraBartenderUpdateManyAndReturnArgs>(args: SelectSubset<T, BarraBartenderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BarraBartender.
     * @param {BarraBartenderUpsertArgs} args - Arguments to update or create a BarraBartender.
     * @example
     * // Update or create a BarraBartender
     * const barraBartender = await prisma.barraBartender.upsert({
     *   create: {
     *     // ... data to create a BarraBartender
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BarraBartender we want to update
     *   }
     * })
     */
    upsert<T extends BarraBartenderUpsertArgs>(args: SelectSubset<T, BarraBartenderUpsertArgs<ExtArgs>>): Prisma__BarraBartenderClient<$Result.GetResult<Prisma.$BarraBartenderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BarraBartenders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderCountArgs} args - Arguments to filter BarraBartenders to count.
     * @example
     * // Count the number of BarraBartenders
     * const count = await prisma.barraBartender.count({
     *   where: {
     *     // ... the filter for the BarraBartenders we want to count
     *   }
     * })
    **/
    count<T extends BarraBartenderCountArgs>(
      args?: Subset<T, BarraBartenderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BarraBartenderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BarraBartender.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BarraBartenderAggregateArgs>(args: Subset<T, BarraBartenderAggregateArgs>): Prisma.PrismaPromise<GetBarraBartenderAggregateType<T>>

    /**
     * Group by BarraBartender.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BarraBartenderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BarraBartenderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BarraBartenderGroupByArgs['orderBy'] }
        : { orderBy?: BarraBartenderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BarraBartenderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBarraBartenderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BarraBartender model
   */
  readonly fields: BarraBartenderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BarraBartender.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BarraBartenderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    bartender<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BarraBartender model
   */
  interface BarraBartenderFieldRefs {
    readonly id: FieldRef<"BarraBartender", 'Int'>
    readonly bartenderId: FieldRef<"BarraBartender", 'Int'>
    readonly activo: FieldRef<"BarraBartender", 'Boolean'>
    readonly lastSeen: FieldRef<"BarraBartender", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BarraBartender findUnique
   */
  export type BarraBartenderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter, which BarraBartender to fetch.
     */
    where: BarraBartenderWhereUniqueInput
  }

  /**
   * BarraBartender findUniqueOrThrow
   */
  export type BarraBartenderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter, which BarraBartender to fetch.
     */
    where: BarraBartenderWhereUniqueInput
  }

  /**
   * BarraBartender findFirst
   */
  export type BarraBartenderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter, which BarraBartender to fetch.
     */
    where?: BarraBartenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BarraBartenders to fetch.
     */
    orderBy?: BarraBartenderOrderByWithRelationInput | BarraBartenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BarraBartenders.
     */
    cursor?: BarraBartenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` BarraBartenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BarraBartenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BarraBartenders.
     */
    distinct?: BarraBartenderScalarFieldEnum | BarraBartenderScalarFieldEnum[]
  }

  /**
   * BarraBartender findFirstOrThrow
   */
  export type BarraBartenderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter, which BarraBartender to fetch.
     */
    where?: BarraBartenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BarraBartenders to fetch.
     */
    orderBy?: BarraBartenderOrderByWithRelationInput | BarraBartenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BarraBartenders.
     */
    cursor?: BarraBartenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` BarraBartenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BarraBartenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BarraBartenders.
     */
    distinct?: BarraBartenderScalarFieldEnum | BarraBartenderScalarFieldEnum[]
  }

  /**
   * BarraBartender findMany
   */
  export type BarraBartenderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter, which BarraBartenders to fetch.
     */
    where?: BarraBartenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BarraBartenders to fetch.
     */
    orderBy?: BarraBartenderOrderByWithRelationInput | BarraBartenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BarraBartenders.
     */
    cursor?: BarraBartenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` BarraBartenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BarraBartenders.
     */
    skip?: number
    distinct?: BarraBartenderScalarFieldEnum | BarraBartenderScalarFieldEnum[]
  }

  /**
   * BarraBartender create
   */
  export type BarraBartenderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * The data needed to create a BarraBartender.
     */
    data: XOR<BarraBartenderCreateInput, BarraBartenderUncheckedCreateInput>
  }

  /**
   * BarraBartender createMany
   */
  export type BarraBartenderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BarraBartenders.
     */
    data: BarraBartenderCreateManyInput | BarraBartenderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BarraBartender createManyAndReturn
   */
  export type BarraBartenderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * The data used to create many BarraBartenders.
     */
    data: BarraBartenderCreateManyInput | BarraBartenderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BarraBartender update
   */
  export type BarraBartenderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * The data needed to update a BarraBartender.
     */
    data: XOR<BarraBartenderUpdateInput, BarraBartenderUncheckedUpdateInput>
    /**
     * Choose, which BarraBartender to update.
     */
    where: BarraBartenderWhereUniqueInput
  }

  /**
   * BarraBartender updateMany
   */
  export type BarraBartenderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BarraBartenders.
     */
    data: XOR<BarraBartenderUpdateManyMutationInput, BarraBartenderUncheckedUpdateManyInput>
    /**
     * Filter which BarraBartenders to update
     */
    where?: BarraBartenderWhereInput
    /**
     * Limit how many BarraBartenders to update.
     */
    limit?: number
  }

  /**
   * BarraBartender updateManyAndReturn
   */
  export type BarraBartenderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * The data used to update BarraBartenders.
     */
    data: XOR<BarraBartenderUpdateManyMutationInput, BarraBartenderUncheckedUpdateManyInput>
    /**
     * Filter which BarraBartenders to update
     */
    where?: BarraBartenderWhereInput
    /**
     * Limit how many BarraBartenders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BarraBartender upsert
   */
  export type BarraBartenderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * The filter to search for the BarraBartender to update in case it exists.
     */
    where: BarraBartenderWhereUniqueInput
    /**
     * In case the BarraBartender found by the `where` argument doesn't exist, create a new BarraBartender with this data.
     */
    create: XOR<BarraBartenderCreateInput, BarraBartenderUncheckedCreateInput>
    /**
     * In case the BarraBartender was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BarraBartenderUpdateInput, BarraBartenderUncheckedUpdateInput>
  }

  /**
   * BarraBartender delete
   */
  export type BarraBartenderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
    /**
     * Filter which BarraBartender to delete.
     */
    where: BarraBartenderWhereUniqueInput
  }

  /**
   * BarraBartender deleteMany
   */
  export type BarraBartenderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BarraBartenders to delete
     */
    where?: BarraBartenderWhereInput
    /**
     * Limit how many BarraBartenders to delete.
     */
    limit?: number
  }

  /**
   * BarraBartender without action
   */
  export type BarraBartenderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BarraBartender
     */
    select?: BarraBartenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BarraBartender
     */
    omit?: BarraBartenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BarraBartenderInclude<ExtArgs> | null
  }


  /**
   * Model TicketVenta
   */

  export type AggregateTicketVenta = {
    _count: TicketVentaCountAggregateOutputType | null
    _avg: TicketVentaAvgAggregateOutputType | null
    _sum: TicketVentaSumAggregateOutputType | null
    _min: TicketVentaMinAggregateOutputType | null
    _max: TicketVentaMaxAggregateOutputType | null
  }

  export type TicketVentaAvgAggregateOutputType = {
    id: number | null
    ordenId: number | null
    cajeroId: number | null
    subtotal: number | null
    impuestos: number | null
    descuentos: number | null
    totalAPagar: number | null
    montoRecibido: number | null
    cambio: number | null
    anticipoAplicado: number | null
    propina: number | null
    anuladoPorId: number | null
  }

  export type TicketVentaSumAggregateOutputType = {
    id: number | null
    ordenId: number | null
    cajeroId: number | null
    subtotal: number | null
    impuestos: number | null
    descuentos: number | null
    totalAPagar: number | null
    montoRecibido: number | null
    cambio: number | null
    anticipoAplicado: number | null
    propina: number | null
    anuladoPorId: number | null
  }

  export type TicketVentaMinAggregateOutputType = {
    id: number | null
    ordenId: number | null
    cajeroId: number | null
    fechaPago: Date | null
    metodoPago: $Enums.MetodoPago | null
    subtotal: number | null
    impuestos: number | null
    descuentos: number | null
    totalAPagar: number | null
    montoRecibido: number | null
    cambio: number | null
    anticipoAplicado: number | null
    propina: number | null
    serie: string | null
    numero: string | null
    clienteNombre: string | null
    clienteNit: string | null
    estado: $Enums.ComprobanteEstado | null
    anuladoEn: Date | null
    anuladoPorId: number | null
    anuladoMotivo: string | null
    posCorrelativo: string | null
  }

  export type TicketVentaMaxAggregateOutputType = {
    id: number | null
    ordenId: number | null
    cajeroId: number | null
    fechaPago: Date | null
    metodoPago: $Enums.MetodoPago | null
    subtotal: number | null
    impuestos: number | null
    descuentos: number | null
    totalAPagar: number | null
    montoRecibido: number | null
    cambio: number | null
    anticipoAplicado: number | null
    propina: number | null
    serie: string | null
    numero: string | null
    clienteNombre: string | null
    clienteNit: string | null
    estado: $Enums.ComprobanteEstado | null
    anuladoEn: Date | null
    anuladoPorId: number | null
    anuladoMotivo: string | null
    posCorrelativo: string | null
  }

  export type TicketVentaCountAggregateOutputType = {
    id: number
    ordenId: number
    cajeroId: number
    fechaPago: number
    metodoPago: number
    subtotal: number
    impuestos: number
    descuentos: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado: number
    propina: number
    serie: number
    numero: number
    clienteNombre: number
    clienteNit: number
    snapshot: number
    estado: number
    anuladoEn: number
    anuladoPorId: number
    anuladoMotivo: number
    posCorrelativo: number
    _all: number
  }


  export type TicketVentaAvgAggregateInputType = {
    id?: true
    ordenId?: true
    cajeroId?: true
    subtotal?: true
    impuestos?: true
    descuentos?: true
    totalAPagar?: true
    montoRecibido?: true
    cambio?: true
    anticipoAplicado?: true
    propina?: true
    anuladoPorId?: true
  }

  export type TicketVentaSumAggregateInputType = {
    id?: true
    ordenId?: true
    cajeroId?: true
    subtotal?: true
    impuestos?: true
    descuentos?: true
    totalAPagar?: true
    montoRecibido?: true
    cambio?: true
    anticipoAplicado?: true
    propina?: true
    anuladoPorId?: true
  }

  export type TicketVentaMinAggregateInputType = {
    id?: true
    ordenId?: true
    cajeroId?: true
    fechaPago?: true
    metodoPago?: true
    subtotal?: true
    impuestos?: true
    descuentos?: true
    totalAPagar?: true
    montoRecibido?: true
    cambio?: true
    anticipoAplicado?: true
    propina?: true
    serie?: true
    numero?: true
    clienteNombre?: true
    clienteNit?: true
    estado?: true
    anuladoEn?: true
    anuladoPorId?: true
    anuladoMotivo?: true
    posCorrelativo?: true
  }

  export type TicketVentaMaxAggregateInputType = {
    id?: true
    ordenId?: true
    cajeroId?: true
    fechaPago?: true
    metodoPago?: true
    subtotal?: true
    impuestos?: true
    descuentos?: true
    totalAPagar?: true
    montoRecibido?: true
    cambio?: true
    anticipoAplicado?: true
    propina?: true
    serie?: true
    numero?: true
    clienteNombre?: true
    clienteNit?: true
    estado?: true
    anuladoEn?: true
    anuladoPorId?: true
    anuladoMotivo?: true
    posCorrelativo?: true
  }

  export type TicketVentaCountAggregateInputType = {
    id?: true
    ordenId?: true
    cajeroId?: true
    fechaPago?: true
    metodoPago?: true
    subtotal?: true
    impuestos?: true
    descuentos?: true
    totalAPagar?: true
    montoRecibido?: true
    cambio?: true
    anticipoAplicado?: true
    propina?: true
    serie?: true
    numero?: true
    clienteNombre?: true
    clienteNit?: true
    snapshot?: true
    estado?: true
    anuladoEn?: true
    anuladoPorId?: true
    anuladoMotivo?: true
    posCorrelativo?: true
    _all?: true
  }

  export type TicketVentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketVenta to aggregate.
     */
    where?: TicketVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketVentas to fetch.
     */
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` TicketVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketVentas
    **/
    _count?: true | TicketVentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketVentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketVentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketVentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketVentaMaxAggregateInputType
  }

  export type GetTicketVentaAggregateType<T extends TicketVentaAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketVenta[P]>
      : GetScalarType<T[P], AggregateTicketVenta[P]>
  }




  export type TicketVentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketVentaWhereInput
    orderBy?: TicketVentaOrderByWithAggregationInput | TicketVentaOrderByWithAggregationInput[]
    by: TicketVentaScalarFieldEnum[] | TicketVentaScalarFieldEnum
    having?: TicketVentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketVentaCountAggregateInputType | true
    _avg?: TicketVentaAvgAggregateInputType
    _sum?: TicketVentaSumAggregateInputType
    _min?: TicketVentaMinAggregateInputType
    _max?: TicketVentaMaxAggregateInputType
  }

  export type TicketVentaGroupByOutputType = {
    id: number
    ordenId: number
    cajeroId: number | null
    fechaPago: Date
    metodoPago: $Enums.MetodoPago
    subtotal: number
    impuestos: number
    descuentos: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado: number
    propina: number
    serie: string | null
    numero: string | null
    clienteNombre: string | null
    clienteNit: string | null
    snapshot: JsonValue | null
    estado: $Enums.ComprobanteEstado
    anuladoEn: Date | null
    anuladoPorId: number | null
    anuladoMotivo: string | null
    posCorrelativo: string | null
    _count: TicketVentaCountAggregateOutputType | null
    _avg: TicketVentaAvgAggregateOutputType | null
    _sum: TicketVentaSumAggregateOutputType | null
    _min: TicketVentaMinAggregateOutputType | null
    _max: TicketVentaMaxAggregateOutputType | null
  }

  type GetTicketVentaGroupByPayload<T extends TicketVentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketVentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketVentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketVentaGroupByOutputType[P]>
            : GetScalarType<T[P], TicketVentaGroupByOutputType[P]>
        }
      >
    >


  export type TicketVentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordenId?: boolean
    cajeroId?: boolean
    fechaPago?: boolean
    metodoPago?: boolean
    subtotal?: boolean
    impuestos?: boolean
    descuentos?: boolean
    totalAPagar?: boolean
    montoRecibido?: boolean
    cambio?: boolean
    anticipoAplicado?: boolean
    propina?: boolean
    serie?: boolean
    numero?: boolean
    clienteNombre?: boolean
    clienteNit?: boolean
    snapshot?: boolean
    estado?: boolean
    anuladoEn?: boolean
    anuladoPorId?: boolean
    anuladoMotivo?: boolean
    posCorrelativo?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
    items?: boolean | TicketVenta$itemsArgs<ExtArgs>
    _count?: boolean | TicketVentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticketVenta"]>

  export type TicketVentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordenId?: boolean
    cajeroId?: boolean
    fechaPago?: boolean
    metodoPago?: boolean
    subtotal?: boolean
    impuestos?: boolean
    descuentos?: boolean
    totalAPagar?: boolean
    montoRecibido?: boolean
    cambio?: boolean
    anticipoAplicado?: boolean
    propina?: boolean
    serie?: boolean
    numero?: boolean
    clienteNombre?: boolean
    clienteNit?: boolean
    snapshot?: boolean
    estado?: boolean
    anuladoEn?: boolean
    anuladoPorId?: boolean
    anuladoMotivo?: boolean
    posCorrelativo?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
  }, ExtArgs["result"]["ticketVenta"]>

  export type TicketVentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ordenId?: boolean
    cajeroId?: boolean
    fechaPago?: boolean
    metodoPago?: boolean
    subtotal?: boolean
    impuestos?: boolean
    descuentos?: boolean
    totalAPagar?: boolean
    montoRecibido?: boolean
    cambio?: boolean
    anticipoAplicado?: boolean
    propina?: boolean
    serie?: boolean
    numero?: boolean
    clienteNombre?: boolean
    clienteNit?: boolean
    snapshot?: boolean
    estado?: boolean
    anuladoEn?: boolean
    anuladoPorId?: boolean
    anuladoMotivo?: boolean
    posCorrelativo?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
  }, ExtArgs["result"]["ticketVenta"]>

  export type TicketVentaSelectScalar = {
    id?: boolean
    ordenId?: boolean
    cajeroId?: boolean
    fechaPago?: boolean
    metodoPago?: boolean
    subtotal?: boolean
    impuestos?: boolean
    descuentos?: boolean
    totalAPagar?: boolean
    montoRecibido?: boolean
    cambio?: boolean
    anticipoAplicado?: boolean
    propina?: boolean
    serie?: boolean
    numero?: boolean
    clienteNombre?: boolean
    clienteNit?: boolean
    snapshot?: boolean
    estado?: boolean
    anuladoEn?: boolean
    anuladoPorId?: boolean
    anuladoMotivo?: boolean
    posCorrelativo?: boolean
  }

  export type TicketVentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ordenId" | "cajeroId" | "fechaPago" | "metodoPago" | "subtotal" | "impuestos" | "descuentos" | "totalAPagar" | "montoRecibido" | "cambio" | "anticipoAplicado" | "propina" | "serie" | "numero" | "clienteNombre" | "clienteNit" | "snapshot" | "estado" | "anuladoEn" | "anuladoPorId" | "anuladoMotivo" | "posCorrelativo", ExtArgs["result"]["ticketVenta"]>
  export type TicketVentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
    items?: boolean | TicketVenta$itemsArgs<ExtArgs>
    _count?: boolean | TicketVentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TicketVentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
  }
  export type TicketVentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    cajero?: boolean | TicketVenta$cajeroArgs<ExtArgs>
    anuladoPor?: boolean | TicketVenta$anuladoPorArgs<ExtArgs>
  }

  export type $TicketVentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketVenta"
    objects: {
      orden: Prisma.$OrdenPayload<ExtArgs>
      cajero: Prisma.$UsuarioPayload<ExtArgs> | null
      anuladoPor: Prisma.$UsuarioPayload<ExtArgs> | null
      items: Prisma.$OrdenItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ordenId: number
      cajeroId: number | null
      fechaPago: Date
      metodoPago: $Enums.MetodoPago
      subtotal: number
      impuestos: number
      descuentos: number
      totalAPagar: number
      montoRecibido: number
      cambio: number
      anticipoAplicado: number
      propina: number
      serie: string | null
      numero: string | null
      clienteNombre: string | null
      clienteNit: string | null
      snapshot: Prisma.JsonValue | null
      estado: $Enums.ComprobanteEstado
      anuladoEn: Date | null
      anuladoPorId: number | null
      anuladoMotivo: string | null
      posCorrelativo: string | null
    }, ExtArgs["result"]["ticketVenta"]>
    composites: {}
  }

  type TicketVentaGetPayload<S extends boolean | null | undefined | TicketVentaDefaultArgs> = $Result.GetResult<Prisma.$TicketVentaPayload, S>

  type TicketVentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketVentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketVentaCountAggregateInputType | true
    }

  export interface TicketVentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketVenta'], meta: { name: 'TicketVenta' } }
    /**
     * Find zero or one TicketVenta that matches the filter.
     * @param {TicketVentaFindUniqueArgs} args - Arguments to find a TicketVenta
     * @example
     * // Get one TicketVenta
     * const ticketVenta = await prisma.ticketVenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketVentaFindUniqueArgs>(args: SelectSubset<T, TicketVentaFindUniqueArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TicketVenta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketVentaFindUniqueOrThrowArgs} args - Arguments to find a TicketVenta
     * @example
     * // Get one TicketVenta
     * const ticketVenta = await prisma.ticketVenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketVentaFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketVentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketVenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaFindFirstArgs} args - Arguments to find a TicketVenta
     * @example
     * // Get one TicketVenta
     * const ticketVenta = await prisma.ticketVenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketVentaFindFirstArgs>(args?: SelectSubset<T, TicketVentaFindFirstArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketVenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaFindFirstOrThrowArgs} args - Arguments to find a TicketVenta
     * @example
     * // Get one TicketVenta
     * const ticketVenta = await prisma.ticketVenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketVentaFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketVentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TicketVentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketVentas
     * const ticketVentas = await prisma.ticketVenta.findMany()
     * 
     * // Get first 10 TicketVentas
     * const ticketVentas = await prisma.ticketVenta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketVentaWithIdOnly = await prisma.ticketVenta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketVentaFindManyArgs>(args?: SelectSubset<T, TicketVentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TicketVenta.
     * @param {TicketVentaCreateArgs} args - Arguments to create a TicketVenta.
     * @example
     * // Create one TicketVenta
     * const TicketVenta = await prisma.ticketVenta.create({
     *   data: {
     *     // ... data to create a TicketVenta
     *   }
     * })
     * 
     */
    create<T extends TicketVentaCreateArgs>(args: SelectSubset<T, TicketVentaCreateArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TicketVentas.
     * @param {TicketVentaCreateManyArgs} args - Arguments to create many TicketVentas.
     * @example
     * // Create many TicketVentas
     * const ticketVenta = await prisma.ticketVenta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketVentaCreateManyArgs>(args?: SelectSubset<T, TicketVentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TicketVentas and returns the data saved in the database.
     * @param {TicketVentaCreateManyAndReturnArgs} args - Arguments to create many TicketVentas.
     * @example
     * // Create many TicketVentas
     * const ticketVenta = await prisma.ticketVenta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TicketVentas and only return the `id`
     * const ticketVentaWithIdOnly = await prisma.ticketVenta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TicketVentaCreateManyAndReturnArgs>(args?: SelectSubset<T, TicketVentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TicketVenta.
     * @param {TicketVentaDeleteArgs} args - Arguments to delete one TicketVenta.
     * @example
     * // Delete one TicketVenta
     * const TicketVenta = await prisma.ticketVenta.delete({
     *   where: {
     *     // ... filter to delete one TicketVenta
     *   }
     * })
     * 
     */
    delete<T extends TicketVentaDeleteArgs>(args: SelectSubset<T, TicketVentaDeleteArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TicketVenta.
     * @param {TicketVentaUpdateArgs} args - Arguments to update one TicketVenta.
     * @example
     * // Update one TicketVenta
     * const ticketVenta = await prisma.ticketVenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketVentaUpdateArgs>(args: SelectSubset<T, TicketVentaUpdateArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TicketVentas.
     * @param {TicketVentaDeleteManyArgs} args - Arguments to filter TicketVentas to delete.
     * @example
     * // Delete a few TicketVentas
     * const { count } = await prisma.ticketVenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketVentaDeleteManyArgs>(args?: SelectSubset<T, TicketVentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketVentas
     * const ticketVenta = await prisma.ticketVenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketVentaUpdateManyArgs>(args: SelectSubset<T, TicketVentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketVentas and returns the data updated in the database.
     * @param {TicketVentaUpdateManyAndReturnArgs} args - Arguments to update many TicketVentas.
     * @example
     * // Update many TicketVentas
     * const ticketVenta = await prisma.ticketVenta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TicketVentas and only return the `id`
     * const ticketVentaWithIdOnly = await prisma.ticketVenta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TicketVentaUpdateManyAndReturnArgs>(args: SelectSubset<T, TicketVentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TicketVenta.
     * @param {TicketVentaUpsertArgs} args - Arguments to update or create a TicketVenta.
     * @example
     * // Update or create a TicketVenta
     * const ticketVenta = await prisma.ticketVenta.upsert({
     *   create: {
     *     // ... data to create a TicketVenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketVenta we want to update
     *   }
     * })
     */
    upsert<T extends TicketVentaUpsertArgs>(args: SelectSubset<T, TicketVentaUpsertArgs<ExtArgs>>): Prisma__TicketVentaClient<$Result.GetResult<Prisma.$TicketVentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TicketVentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaCountArgs} args - Arguments to filter TicketVentas to count.
     * @example
     * // Count the number of TicketVentas
     * const count = await prisma.ticketVenta.count({
     *   where: {
     *     // ... the filter for the TicketVentas we want to count
     *   }
     * })
    **/
    count<T extends TicketVentaCountArgs>(
      args?: Subset<T, TicketVentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketVentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketVentaAggregateArgs>(args: Subset<T, TicketVentaAggregateArgs>): Prisma.PrismaPromise<GetTicketVentaAggregateType<T>>

    /**
     * Group by TicketVenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketVentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketVentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketVentaGroupByArgs['orderBy'] }
        : { orderBy?: TicketVentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketVentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketVenta model
   */
  readonly fields: TicketVentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketVenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketVentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orden<T extends OrdenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrdenDefaultArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cajero<T extends TicketVenta$cajeroArgs<ExtArgs> = {}>(args?: Subset<T, TicketVenta$cajeroArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    anuladoPor<T extends TicketVenta$anuladoPorArgs<ExtArgs> = {}>(args?: Subset<T, TicketVenta$anuladoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends TicketVenta$itemsArgs<ExtArgs> = {}>(args?: Subset<T, TicketVenta$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrdenItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketVenta model
   */
  interface TicketVentaFieldRefs {
    readonly id: FieldRef<"TicketVenta", 'Int'>
    readonly ordenId: FieldRef<"TicketVenta", 'Int'>
    readonly cajeroId: FieldRef<"TicketVenta", 'Int'>
    readonly fechaPago: FieldRef<"TicketVenta", 'DateTime'>
    readonly metodoPago: FieldRef<"TicketVenta", 'MetodoPago'>
    readonly subtotal: FieldRef<"TicketVenta", 'Float'>
    readonly impuestos: FieldRef<"TicketVenta", 'Float'>
    readonly descuentos: FieldRef<"TicketVenta", 'Float'>
    readonly totalAPagar: FieldRef<"TicketVenta", 'Float'>
    readonly montoRecibido: FieldRef<"TicketVenta", 'Float'>
    readonly cambio: FieldRef<"TicketVenta", 'Float'>
    readonly anticipoAplicado: FieldRef<"TicketVenta", 'Float'>
    readonly propina: FieldRef<"TicketVenta", 'Float'>
    readonly serie: FieldRef<"TicketVenta", 'String'>
    readonly numero: FieldRef<"TicketVenta", 'String'>
    readonly clienteNombre: FieldRef<"TicketVenta", 'String'>
    readonly clienteNit: FieldRef<"TicketVenta", 'String'>
    readonly snapshot: FieldRef<"TicketVenta", 'Json'>
    readonly estado: FieldRef<"TicketVenta", 'ComprobanteEstado'>
    readonly anuladoEn: FieldRef<"TicketVenta", 'DateTime'>
    readonly anuladoPorId: FieldRef<"TicketVenta", 'Int'>
    readonly anuladoMotivo: FieldRef<"TicketVenta", 'String'>
    readonly posCorrelativo: FieldRef<"TicketVenta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TicketVenta findUnique
   */
  export type TicketVentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter, which TicketVenta to fetch.
     */
    where: TicketVentaWhereUniqueInput
  }

  /**
   * TicketVenta findUniqueOrThrow
   */
  export type TicketVentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter, which TicketVenta to fetch.
     */
    where: TicketVentaWhereUniqueInput
  }

  /**
   * TicketVenta findFirst
   */
  export type TicketVentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter, which TicketVenta to fetch.
     */
    where?: TicketVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketVentas to fetch.
     */
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketVentas.
     */
    cursor?: TicketVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` TicketVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketVentas.
     */
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * TicketVenta findFirstOrThrow
   */
  export type TicketVentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter, which TicketVenta to fetch.
     */
    where?: TicketVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketVentas to fetch.
     */
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketVentas.
     */
    cursor?: TicketVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` TicketVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketVentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketVentas.
     */
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * TicketVenta findMany
   */
  export type TicketVentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter, which TicketVentas to fetch.
     */
    where?: TicketVentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketVentas to fetch.
     */
    orderBy?: TicketVentaOrderByWithRelationInput | TicketVentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketVentas.
     */
    cursor?: TicketVentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` TicketVentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketVentas.
     */
    skip?: number
    distinct?: TicketVentaScalarFieldEnum | TicketVentaScalarFieldEnum[]
  }

  /**
   * TicketVenta create
   */
  export type TicketVentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * The data needed to create a TicketVenta.
     */
    data: XOR<TicketVentaCreateInput, TicketVentaUncheckedCreateInput>
  }

  /**
   * TicketVenta createMany
   */
  export type TicketVentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketVentas.
     */
    data: TicketVentaCreateManyInput | TicketVentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketVenta createManyAndReturn
   */
  export type TicketVentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * The data used to create many TicketVentas.
     */
    data: TicketVentaCreateManyInput | TicketVentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TicketVenta update
   */
  export type TicketVentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * The data needed to update a TicketVenta.
     */
    data: XOR<TicketVentaUpdateInput, TicketVentaUncheckedUpdateInput>
    /**
     * Choose, which TicketVenta to update.
     */
    where: TicketVentaWhereUniqueInput
  }

  /**
   * TicketVenta updateMany
   */
  export type TicketVentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketVentas.
     */
    data: XOR<TicketVentaUpdateManyMutationInput, TicketVentaUncheckedUpdateManyInput>
    /**
     * Filter which TicketVentas to update
     */
    where?: TicketVentaWhereInput
    /**
     * Limit how many TicketVentas to update.
     */
    limit?: number
  }

  /**
   * TicketVenta updateManyAndReturn
   */
  export type TicketVentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * The data used to update TicketVentas.
     */
    data: XOR<TicketVentaUpdateManyMutationInput, TicketVentaUncheckedUpdateManyInput>
    /**
     * Filter which TicketVentas to update
     */
    where?: TicketVentaWhereInput
    /**
     * Limit how many TicketVentas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TicketVenta upsert
   */
  export type TicketVentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * The filter to search for the TicketVenta to update in case it exists.
     */
    where: TicketVentaWhereUniqueInput
    /**
     * In case the TicketVenta found by the `where` argument doesn't exist, create a new TicketVenta with this data.
     */
    create: XOR<TicketVentaCreateInput, TicketVentaUncheckedCreateInput>
    /**
     * In case the TicketVenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketVentaUpdateInput, TicketVentaUncheckedUpdateInput>
  }

  /**
   * TicketVenta delete
   */
  export type TicketVentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
    /**
     * Filter which TicketVenta to delete.
     */
    where: TicketVentaWhereUniqueInput
  }

  /**
   * TicketVenta deleteMany
   */
  export type TicketVentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketVentas to delete
     */
    where?: TicketVentaWhereInput
    /**
     * Limit how many TicketVentas to delete.
     */
    limit?: number
  }

  /**
   * TicketVenta.cajero
   */
  export type TicketVenta$cajeroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * TicketVenta.anuladoPor
   */
  export type TicketVenta$anuladoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * TicketVenta.items
   */
  export type TicketVenta$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenItem
     */
    select?: OrdenItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrdenItem
     */
    omit?: OrdenItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenItemInclude<ExtArgs> | null
    where?: OrdenItemWhereInput
    orderBy?: OrdenItemOrderByWithRelationInput | OrdenItemOrderByWithRelationInput[]
    cursor?: OrdenItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenItemScalarFieldEnum | OrdenItemScalarFieldEnum[]
  }

  /**
   * TicketVenta without action
   */
  export type TicketVentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketVenta
     */
    select?: TicketVentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketVenta
     */
    omit?: TicketVentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketVentaInclude<ExtArgs> | null
  }


  /**
   * Model EgresoCaja
   */

  export type AggregateEgresoCaja = {
    _count: EgresoCajaCountAggregateOutputType | null
    _avg: EgresoCajaAvgAggregateOutputType | null
    _sum: EgresoCajaSumAggregateOutputType | null
    _min: EgresoCajaMinAggregateOutputType | null
    _max: EgresoCajaMaxAggregateOutputType | null
  }

  export type EgresoCajaAvgAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    monto: number | null
    autorizadoPorId: number | null
  }

  export type EgresoCajaSumAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    monto: number | null
    autorizadoPorId: number | null
  }

  export type EgresoCajaMinAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    estado: $Enums.EgresoEstado | null
    cajeroId: number | null
    monto: number | null
    motivo: string | null
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    observacion: string | null
  }

  export type EgresoCajaMaxAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    estado: $Enums.EgresoEstado | null
    cajeroId: number | null
    monto: number | null
    motivo: string | null
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    observacion: string | null
  }

  export type EgresoCajaCountAggregateOutputType = {
    id: number
    creadoEn: number
    estado: number
    cajeroId: number
    monto: number
    motivo: number
    autorizadoPorId: number
    autorizadoEn: number
    observacion: number
    _all: number
  }


  export type EgresoCajaAvgAggregateInputType = {
    id?: true
    cajeroId?: true
    monto?: true
    autorizadoPorId?: true
  }

  export type EgresoCajaSumAggregateInputType = {
    id?: true
    cajeroId?: true
    monto?: true
    autorizadoPorId?: true
  }

  export type EgresoCajaMinAggregateInputType = {
    id?: true
    creadoEn?: true
    estado?: true
    cajeroId?: true
    monto?: true
    motivo?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    observacion?: true
  }

  export type EgresoCajaMaxAggregateInputType = {
    id?: true
    creadoEn?: true
    estado?: true
    cajeroId?: true
    monto?: true
    motivo?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    observacion?: true
  }

  export type EgresoCajaCountAggregateInputType = {
    id?: true
    creadoEn?: true
    estado?: true
    cajeroId?: true
    monto?: true
    motivo?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    observacion?: true
    _all?: true
  }

  export type EgresoCajaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EgresoCaja to aggregate.
     */
    where?: EgresoCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EgresoCajas to fetch.
     */
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EgresoCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` EgresoCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EgresoCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EgresoCajas
    **/
    _count?: true | EgresoCajaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EgresoCajaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EgresoCajaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EgresoCajaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EgresoCajaMaxAggregateInputType
  }

  export type GetEgresoCajaAggregateType<T extends EgresoCajaAggregateArgs> = {
        [P in keyof T & keyof AggregateEgresoCaja]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEgresoCaja[P]>
      : GetScalarType<T[P], AggregateEgresoCaja[P]>
  }




  export type EgresoCajaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoCajaWhereInput
    orderBy?: EgresoCajaOrderByWithAggregationInput | EgresoCajaOrderByWithAggregationInput[]
    by: EgresoCajaScalarFieldEnum[] | EgresoCajaScalarFieldEnum
    having?: EgresoCajaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EgresoCajaCountAggregateInputType | true
    _avg?: EgresoCajaAvgAggregateInputType
    _sum?: EgresoCajaSumAggregateInputType
    _min?: EgresoCajaMinAggregateInputType
    _max?: EgresoCajaMaxAggregateInputType
  }

  export type EgresoCajaGroupByOutputType = {
    id: number
    creadoEn: Date
    estado: $Enums.EgresoEstado
    cajeroId: number
    monto: number
    motivo: string
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    observacion: string | null
    _count: EgresoCajaCountAggregateOutputType | null
    _avg: EgresoCajaAvgAggregateOutputType | null
    _sum: EgresoCajaSumAggregateOutputType | null
    _min: EgresoCajaMinAggregateOutputType | null
    _max: EgresoCajaMaxAggregateOutputType | null
  }

  type GetEgresoCajaGroupByPayload<T extends EgresoCajaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EgresoCajaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EgresoCajaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EgresoCajaGroupByOutputType[P]>
            : GetScalarType<T[P], EgresoCajaGroupByOutputType[P]>
        }
      >
    >


  export type EgresoCajaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    estado?: boolean
    cajeroId?: boolean
    monto?: boolean
    motivo?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    observacion?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["egresoCaja"]>

  export type EgresoCajaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    estado?: boolean
    cajeroId?: boolean
    monto?: boolean
    motivo?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    observacion?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["egresoCaja"]>

  export type EgresoCajaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    estado?: boolean
    cajeroId?: boolean
    monto?: boolean
    motivo?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    observacion?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["egresoCaja"]>

  export type EgresoCajaSelectScalar = {
    id?: boolean
    creadoEn?: boolean
    estado?: boolean
    cajeroId?: boolean
    monto?: boolean
    motivo?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    observacion?: boolean
  }

  export type EgresoCajaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "creadoEn" | "estado" | "cajeroId" | "monto" | "motivo" | "autorizadoPorId" | "autorizadoEn" | "observacion", ExtArgs["result"]["egresoCaja"]>
  export type EgresoCajaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }
  export type EgresoCajaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }
  export type EgresoCajaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | EgresoCaja$autorizadoPorArgs<ExtArgs>
  }

  export type $EgresoCajaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EgresoCaja"
    objects: {
      cajero: Prisma.$UsuarioPayload<ExtArgs>
      autorizadoPor: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      creadoEn: Date
      estado: $Enums.EgresoEstado
      cajeroId: number
      monto: number
      motivo: string
      autorizadoPorId: number | null
      autorizadoEn: Date | null
      observacion: string | null
    }, ExtArgs["result"]["egresoCaja"]>
    composites: {}
  }

  type EgresoCajaGetPayload<S extends boolean | null | undefined | EgresoCajaDefaultArgs> = $Result.GetResult<Prisma.$EgresoCajaPayload, S>

  type EgresoCajaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EgresoCajaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EgresoCajaCountAggregateInputType | true
    }

  export interface EgresoCajaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EgresoCaja'], meta: { name: 'EgresoCaja' } }
    /**
     * Find zero or one EgresoCaja that matches the filter.
     * @param {EgresoCajaFindUniqueArgs} args - Arguments to find a EgresoCaja
     * @example
     * // Get one EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EgresoCajaFindUniqueArgs>(args: SelectSubset<T, EgresoCajaFindUniqueArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EgresoCaja that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EgresoCajaFindUniqueOrThrowArgs} args - Arguments to find a EgresoCaja
     * @example
     * // Get one EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EgresoCajaFindUniqueOrThrowArgs>(args: SelectSubset<T, EgresoCajaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EgresoCaja that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaFindFirstArgs} args - Arguments to find a EgresoCaja
     * @example
     * // Get one EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EgresoCajaFindFirstArgs>(args?: SelectSubset<T, EgresoCajaFindFirstArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EgresoCaja that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaFindFirstOrThrowArgs} args - Arguments to find a EgresoCaja
     * @example
     * // Get one EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EgresoCajaFindFirstOrThrowArgs>(args?: SelectSubset<T, EgresoCajaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EgresoCajas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EgresoCajas
     * const egresoCajas = await prisma.egresoCaja.findMany()
     * 
     * // Get first 10 EgresoCajas
     * const egresoCajas = await prisma.egresoCaja.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const egresoCajaWithIdOnly = await prisma.egresoCaja.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EgresoCajaFindManyArgs>(args?: SelectSubset<T, EgresoCajaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EgresoCaja.
     * @param {EgresoCajaCreateArgs} args - Arguments to create a EgresoCaja.
     * @example
     * // Create one EgresoCaja
     * const EgresoCaja = await prisma.egresoCaja.create({
     *   data: {
     *     // ... data to create a EgresoCaja
     *   }
     * })
     * 
     */
    create<T extends EgresoCajaCreateArgs>(args: SelectSubset<T, EgresoCajaCreateArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EgresoCajas.
     * @param {EgresoCajaCreateManyArgs} args - Arguments to create many EgresoCajas.
     * @example
     * // Create many EgresoCajas
     * const egresoCaja = await prisma.egresoCaja.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EgresoCajaCreateManyArgs>(args?: SelectSubset<T, EgresoCajaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EgresoCajas and returns the data saved in the database.
     * @param {EgresoCajaCreateManyAndReturnArgs} args - Arguments to create many EgresoCajas.
     * @example
     * // Create many EgresoCajas
     * const egresoCaja = await prisma.egresoCaja.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EgresoCajas and only return the `id`
     * const egresoCajaWithIdOnly = await prisma.egresoCaja.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EgresoCajaCreateManyAndReturnArgs>(args?: SelectSubset<T, EgresoCajaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EgresoCaja.
     * @param {EgresoCajaDeleteArgs} args - Arguments to delete one EgresoCaja.
     * @example
     * // Delete one EgresoCaja
     * const EgresoCaja = await prisma.egresoCaja.delete({
     *   where: {
     *     // ... filter to delete one EgresoCaja
     *   }
     * })
     * 
     */
    delete<T extends EgresoCajaDeleteArgs>(args: SelectSubset<T, EgresoCajaDeleteArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EgresoCaja.
     * @param {EgresoCajaUpdateArgs} args - Arguments to update one EgresoCaja.
     * @example
     * // Update one EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EgresoCajaUpdateArgs>(args: SelectSubset<T, EgresoCajaUpdateArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EgresoCajas.
     * @param {EgresoCajaDeleteManyArgs} args - Arguments to filter EgresoCajas to delete.
     * @example
     * // Delete a few EgresoCajas
     * const { count } = await prisma.egresoCaja.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EgresoCajaDeleteManyArgs>(args?: SelectSubset<T, EgresoCajaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EgresoCajas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EgresoCajas
     * const egresoCaja = await prisma.egresoCaja.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EgresoCajaUpdateManyArgs>(args: SelectSubset<T, EgresoCajaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EgresoCajas and returns the data updated in the database.
     * @param {EgresoCajaUpdateManyAndReturnArgs} args - Arguments to update many EgresoCajas.
     * @example
     * // Update many EgresoCajas
     * const egresoCaja = await prisma.egresoCaja.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EgresoCajas and only return the `id`
     * const egresoCajaWithIdOnly = await prisma.egresoCaja.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EgresoCajaUpdateManyAndReturnArgs>(args: SelectSubset<T, EgresoCajaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EgresoCaja.
     * @param {EgresoCajaUpsertArgs} args - Arguments to update or create a EgresoCaja.
     * @example
     * // Update or create a EgresoCaja
     * const egresoCaja = await prisma.egresoCaja.upsert({
     *   create: {
     *     // ... data to create a EgresoCaja
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EgresoCaja we want to update
     *   }
     * })
     */
    upsert<T extends EgresoCajaUpsertArgs>(args: SelectSubset<T, EgresoCajaUpsertArgs<ExtArgs>>): Prisma__EgresoCajaClient<$Result.GetResult<Prisma.$EgresoCajaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EgresoCajas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaCountArgs} args - Arguments to filter EgresoCajas to count.
     * @example
     * // Count the number of EgresoCajas
     * const count = await prisma.egresoCaja.count({
     *   where: {
     *     // ... the filter for the EgresoCajas we want to count
     *   }
     * })
    **/
    count<T extends EgresoCajaCountArgs>(
      args?: Subset<T, EgresoCajaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EgresoCajaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EgresoCaja.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EgresoCajaAggregateArgs>(args: Subset<T, EgresoCajaAggregateArgs>): Prisma.PrismaPromise<GetEgresoCajaAggregateType<T>>

    /**
     * Group by EgresoCaja.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCajaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EgresoCajaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EgresoCajaGroupByArgs['orderBy'] }
        : { orderBy?: EgresoCajaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EgresoCajaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEgresoCajaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EgresoCaja model
   */
  readonly fields: EgresoCajaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EgresoCaja.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EgresoCajaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cajero<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    autorizadoPor<T extends EgresoCaja$autorizadoPorArgs<ExtArgs> = {}>(args?: Subset<T, EgresoCaja$autorizadoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EgresoCaja model
   */
  interface EgresoCajaFieldRefs {
    readonly id: FieldRef<"EgresoCaja", 'Int'>
    readonly creadoEn: FieldRef<"EgresoCaja", 'DateTime'>
    readonly estado: FieldRef<"EgresoCaja", 'EgresoEstado'>
    readonly cajeroId: FieldRef<"EgresoCaja", 'Int'>
    readonly monto: FieldRef<"EgresoCaja", 'Float'>
    readonly motivo: FieldRef<"EgresoCaja", 'String'>
    readonly autorizadoPorId: FieldRef<"EgresoCaja", 'Int'>
    readonly autorizadoEn: FieldRef<"EgresoCaja", 'DateTime'>
    readonly observacion: FieldRef<"EgresoCaja", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EgresoCaja findUnique
   */
  export type EgresoCajaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter, which EgresoCaja to fetch.
     */
    where: EgresoCajaWhereUniqueInput
  }

  /**
   * EgresoCaja findUniqueOrThrow
   */
  export type EgresoCajaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter, which EgresoCaja to fetch.
     */
    where: EgresoCajaWhereUniqueInput
  }

  /**
   * EgresoCaja findFirst
   */
  export type EgresoCajaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter, which EgresoCaja to fetch.
     */
    where?: EgresoCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EgresoCajas to fetch.
     */
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EgresoCajas.
     */
    cursor?: EgresoCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` EgresoCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EgresoCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EgresoCajas.
     */
    distinct?: EgresoCajaScalarFieldEnum | EgresoCajaScalarFieldEnum[]
  }

  /**
   * EgresoCaja findFirstOrThrow
   */
  export type EgresoCajaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter, which EgresoCaja to fetch.
     */
    where?: EgresoCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EgresoCajas to fetch.
     */
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EgresoCajas.
     */
    cursor?: EgresoCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` EgresoCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EgresoCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EgresoCajas.
     */
    distinct?: EgresoCajaScalarFieldEnum | EgresoCajaScalarFieldEnum[]
  }

  /**
   * EgresoCaja findMany
   */
  export type EgresoCajaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter, which EgresoCajas to fetch.
     */
    where?: EgresoCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EgresoCajas to fetch.
     */
    orderBy?: EgresoCajaOrderByWithRelationInput | EgresoCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EgresoCajas.
     */
    cursor?: EgresoCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` EgresoCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EgresoCajas.
     */
    skip?: number
    distinct?: EgresoCajaScalarFieldEnum | EgresoCajaScalarFieldEnum[]
  }

  /**
   * EgresoCaja create
   */
  export type EgresoCajaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * The data needed to create a EgresoCaja.
     */
    data: XOR<EgresoCajaCreateInput, EgresoCajaUncheckedCreateInput>
  }

  /**
   * EgresoCaja createMany
   */
  export type EgresoCajaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EgresoCajas.
     */
    data: EgresoCajaCreateManyInput | EgresoCajaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EgresoCaja createManyAndReturn
   */
  export type EgresoCajaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * The data used to create many EgresoCajas.
     */
    data: EgresoCajaCreateManyInput | EgresoCajaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EgresoCaja update
   */
  export type EgresoCajaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * The data needed to update a EgresoCaja.
     */
    data: XOR<EgresoCajaUpdateInput, EgresoCajaUncheckedUpdateInput>
    /**
     * Choose, which EgresoCaja to update.
     */
    where: EgresoCajaWhereUniqueInput
  }

  /**
   * EgresoCaja updateMany
   */
  export type EgresoCajaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EgresoCajas.
     */
    data: XOR<EgresoCajaUpdateManyMutationInput, EgresoCajaUncheckedUpdateManyInput>
    /**
     * Filter which EgresoCajas to update
     */
    where?: EgresoCajaWhereInput
    /**
     * Limit how many EgresoCajas to update.
     */
    limit?: number
  }

  /**
   * EgresoCaja updateManyAndReturn
   */
  export type EgresoCajaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * The data used to update EgresoCajas.
     */
    data: XOR<EgresoCajaUpdateManyMutationInput, EgresoCajaUncheckedUpdateManyInput>
    /**
     * Filter which EgresoCajas to update
     */
    where?: EgresoCajaWhereInput
    /**
     * Limit how many EgresoCajas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EgresoCaja upsert
   */
  export type EgresoCajaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * The filter to search for the EgresoCaja to update in case it exists.
     */
    where: EgresoCajaWhereUniqueInput
    /**
     * In case the EgresoCaja found by the `where` argument doesn't exist, create a new EgresoCaja with this data.
     */
    create: XOR<EgresoCajaCreateInput, EgresoCajaUncheckedCreateInput>
    /**
     * In case the EgresoCaja was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EgresoCajaUpdateInput, EgresoCajaUncheckedUpdateInput>
  }

  /**
   * EgresoCaja delete
   */
  export type EgresoCajaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
    /**
     * Filter which EgresoCaja to delete.
     */
    where: EgresoCajaWhereUniqueInput
  }

  /**
   * EgresoCaja deleteMany
   */
  export type EgresoCajaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EgresoCajas to delete
     */
    where?: EgresoCajaWhereInput
    /**
     * Limit how many EgresoCajas to delete.
     */
    limit?: number
  }

  /**
   * EgresoCaja.autorizadoPor
   */
  export type EgresoCaja$autorizadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EgresoCaja without action
   */
  export type EgresoCajaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EgresoCaja
     */
    select?: EgresoCajaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EgresoCaja
     */
    omit?: EgresoCajaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoCajaInclude<ExtArgs> | null
  }


  /**
   * Model PedidoCliente
   */

  export type AggregatePedidoCliente = {
    _count: PedidoClienteCountAggregateOutputType | null
    _avg: PedidoClienteAvgAggregateOutputType | null
    _sum: PedidoClienteSumAggregateOutputType | null
    _min: PedidoClienteMinAggregateOutputType | null
    _max: PedidoClienteMaxAggregateOutputType | null
  }

  export type PedidoClienteAvgAggregateOutputType = {
    id: number | null
    repartidorId: number | null
    total: number | null
    ordenId: number | null
  }

  export type PedidoClienteSumAggregateOutputType = {
    id: number | null
    repartidorId: number | null
    total: number | null
    ordenId: number | null
  }

  export type PedidoClienteMinAggregateOutputType = {
    id: number | null
    codigo: string | null
    clienteEmail: string | null
    creadoEn: Date | null
    estado: string | null
    repartidorId: number | null
    tipoEntrega: $Enums.TipoEntrega | null
    metodoPago: string | null
    direccion: string | null
    telefono: string | null
    receptorNombre: string | null
    deliveryStatus: $Enums.DeliveryStatus | null
    readyAt: Date | null
    assignedAt: Date | null
    startedAt: Date | null
    deliveredAt: Date | null
    total: number | null
    ordenId: number | null
  }

  export type PedidoClienteMaxAggregateOutputType = {
    id: number | null
    codigo: string | null
    clienteEmail: string | null
    creadoEn: Date | null
    estado: string | null
    repartidorId: number | null
    tipoEntrega: $Enums.TipoEntrega | null
    metodoPago: string | null
    direccion: string | null
    telefono: string | null
    receptorNombre: string | null
    deliveryStatus: $Enums.DeliveryStatus | null
    readyAt: Date | null
    assignedAt: Date | null
    startedAt: Date | null
    deliveredAt: Date | null
    total: number | null
    ordenId: number | null
  }

  export type PedidoClienteCountAggregateOutputType = {
    id: number
    codigo: number
    clienteEmail: number
    creadoEn: number
    estado: number
    repartidorId: number
    tipoEntrega: number
    metodoPago: number
    direccion: number
    telefono: number
    receptorNombre: number
    deliveryStatus: number
    readyAt: number
    assignedAt: number
    startedAt: number
    deliveredAt: number
    total: number
    ordenId: number
    _all: number
  }


  export type PedidoClienteAvgAggregateInputType = {
    id?: true
    repartidorId?: true
    total?: true
    ordenId?: true
  }

  export type PedidoClienteSumAggregateInputType = {
    id?: true
    repartidorId?: true
    total?: true
    ordenId?: true
  }

  export type PedidoClienteMinAggregateInputType = {
    id?: true
    codigo?: true
    clienteEmail?: true
    creadoEn?: true
    estado?: true
    repartidorId?: true
    tipoEntrega?: true
    metodoPago?: true
    direccion?: true
    telefono?: true
    receptorNombre?: true
    deliveryStatus?: true
    readyAt?: true
    assignedAt?: true
    startedAt?: true
    deliveredAt?: true
    total?: true
    ordenId?: true
  }

  export type PedidoClienteMaxAggregateInputType = {
    id?: true
    codigo?: true
    clienteEmail?: true
    creadoEn?: true
    estado?: true
    repartidorId?: true
    tipoEntrega?: true
    metodoPago?: true
    direccion?: true
    telefono?: true
    receptorNombre?: true
    deliveryStatus?: true
    readyAt?: true
    assignedAt?: true
    startedAt?: true
    deliveredAt?: true
    total?: true
    ordenId?: true
  }

  export type PedidoClienteCountAggregateInputType = {
    id?: true
    codigo?: true
    clienteEmail?: true
    creadoEn?: true
    estado?: true
    repartidorId?: true
    tipoEntrega?: true
    metodoPago?: true
    direccion?: true
    telefono?: true
    receptorNombre?: true
    deliveryStatus?: true
    readyAt?: true
    assignedAt?: true
    startedAt?: true
    deliveredAt?: true
    total?: true
    ordenId?: true
    _all?: true
  }

  export type PedidoClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PedidoCliente to aggregate.
     */
    where?: PedidoClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClientes to fetch.
     */
    orderBy?: PedidoClienteOrderByWithRelationInput | PedidoClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PedidoClientes
    **/
    _count?: true | PedidoClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoClienteMaxAggregateInputType
  }

  export type GetPedidoClienteAggregateType<T extends PedidoClienteAggregateArgs> = {
        [P in keyof T & keyof AggregatePedidoCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedidoCliente[P]>
      : GetScalarType<T[P], AggregatePedidoCliente[P]>
  }




  export type PedidoClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoClienteWhereInput
    orderBy?: PedidoClienteOrderByWithAggregationInput | PedidoClienteOrderByWithAggregationInput[]
    by: PedidoClienteScalarFieldEnum[] | PedidoClienteScalarFieldEnum
    having?: PedidoClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoClienteCountAggregateInputType | true
    _avg?: PedidoClienteAvgAggregateInputType
    _sum?: PedidoClienteSumAggregateInputType
    _min?: PedidoClienteMinAggregateInputType
    _max?: PedidoClienteMaxAggregateInputType
  }

  export type PedidoClienteGroupByOutputType = {
    id: number
    codigo: string
    clienteEmail: string
    creadoEn: Date
    estado: string
    repartidorId: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion: string | null
    telefono: string | null
    receptorNombre: string | null
    deliveryStatus: $Enums.DeliveryStatus
    readyAt: Date | null
    assignedAt: Date | null
    startedAt: Date | null
    deliveredAt: Date | null
    total: number
    ordenId: number | null
    _count: PedidoClienteCountAggregateOutputType | null
    _avg: PedidoClienteAvgAggregateOutputType | null
    _sum: PedidoClienteSumAggregateOutputType | null
    _min: PedidoClienteMinAggregateOutputType | null
    _max: PedidoClienteMaxAggregateOutputType | null
  }

  type GetPedidoClienteGroupByPayload<T extends PedidoClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoClienteGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoClienteGroupByOutputType[P]>
        }
      >
    >


  export type PedidoClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    clienteEmail?: boolean
    creadoEn?: boolean
    estado?: boolean
    repartidorId?: boolean
    tipoEntrega?: boolean
    metodoPago?: boolean
    direccion?: boolean
    telefono?: boolean
    receptorNombre?: boolean
    deliveryStatus?: boolean
    readyAt?: boolean
    assignedAt?: boolean
    startedAt?: boolean
    deliveredAt?: boolean
    total?: boolean
    ordenId?: boolean
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    calificacion?: boolean | PedidoCliente$calificacionArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
    items?: boolean | PedidoCliente$itemsArgs<ExtArgs>
    observaciones?: boolean | PedidoCliente$observacionesArgs<ExtArgs>
    repartidorNotifs?: boolean | PedidoCliente$repartidorNotifsArgs<ExtArgs>
    _count?: boolean | PedidoClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoCliente"]>

  export type PedidoClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    clienteEmail?: boolean
    creadoEn?: boolean
    estado?: boolean
    repartidorId?: boolean
    tipoEntrega?: boolean
    metodoPago?: boolean
    direccion?: boolean
    telefono?: boolean
    receptorNombre?: boolean
    deliveryStatus?: boolean
    readyAt?: boolean
    assignedAt?: boolean
    startedAt?: boolean
    deliveredAt?: boolean
    total?: boolean
    ordenId?: boolean
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoCliente"]>

  export type PedidoClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    clienteEmail?: boolean
    creadoEn?: boolean
    estado?: boolean
    repartidorId?: boolean
    tipoEntrega?: boolean
    metodoPago?: boolean
    direccion?: boolean
    telefono?: boolean
    receptorNombre?: boolean
    deliveryStatus?: boolean
    readyAt?: boolean
    assignedAt?: boolean
    startedAt?: boolean
    deliveredAt?: boolean
    total?: boolean
    ordenId?: boolean
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoCliente"]>

  export type PedidoClienteSelectScalar = {
    id?: boolean
    codigo?: boolean
    clienteEmail?: boolean
    creadoEn?: boolean
    estado?: boolean
    repartidorId?: boolean
    tipoEntrega?: boolean
    metodoPago?: boolean
    direccion?: boolean
    telefono?: boolean
    receptorNombre?: boolean
    deliveryStatus?: boolean
    readyAt?: boolean
    assignedAt?: boolean
    startedAt?: boolean
    deliveredAt?: boolean
    total?: boolean
    ordenId?: boolean
  }

  export type PedidoClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "clienteEmail" | "creadoEn" | "estado" | "repartidorId" | "tipoEntrega" | "metodoPago" | "direccion" | "telefono" | "receptorNombre" | "deliveryStatus" | "readyAt" | "assignedAt" | "startedAt" | "deliveredAt" | "total" | "ordenId", ExtArgs["result"]["pedidoCliente"]>
  export type PedidoClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    calificacion?: boolean | PedidoCliente$calificacionArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
    items?: boolean | PedidoCliente$itemsArgs<ExtArgs>
    observaciones?: boolean | PedidoCliente$observacionesArgs<ExtArgs>
    repartidorNotifs?: boolean | PedidoCliente$repartidorNotifsArgs<ExtArgs>
    _count?: boolean | PedidoClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PedidoClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
  }
  export type PedidoClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | PedidoCliente$repartidorArgs<ExtArgs>
    orden?: boolean | PedidoCliente$ordenArgs<ExtArgs>
  }

  export type $PedidoClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PedidoCliente"
    objects: {
      repartidor: Prisma.$UsuarioPayload<ExtArgs> | null
      calificacion: Prisma.$CalificacionPedidoPayload<ExtArgs> | null
      orden: Prisma.$OrdenPayload<ExtArgs> | null
      items: Prisma.$PedidoClienteItemPayload<ExtArgs>[]
      observaciones: Prisma.$ObservacionEntregaPayload<ExtArgs>[]
      repartidorNotifs: Prisma.$RepartidorNotifPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: string
      clienteEmail: string
      creadoEn: Date
      estado: string
      repartidorId: number | null
      tipoEntrega: $Enums.TipoEntrega
      metodoPago: string
      direccion: string | null
      telefono: string | null
      receptorNombre: string | null
      deliveryStatus: $Enums.DeliveryStatus
      readyAt: Date | null
      assignedAt: Date | null
      startedAt: Date | null
      deliveredAt: Date | null
      total: number
      ordenId: number | null
    }, ExtArgs["result"]["pedidoCliente"]>
    composites: {}
  }

  type PedidoClienteGetPayload<S extends boolean | null | undefined | PedidoClienteDefaultArgs> = $Result.GetResult<Prisma.$PedidoClientePayload, S>

  type PedidoClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoClienteCountAggregateInputType | true
    }

  export interface PedidoClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PedidoCliente'], meta: { name: 'PedidoCliente' } }
    /**
     * Find zero or one PedidoCliente that matches the filter.
     * @param {PedidoClienteFindUniqueArgs} args - Arguments to find a PedidoCliente
     * @example
     * // Get one PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoClienteFindUniqueArgs>(args: SelectSubset<T, PedidoClienteFindUniqueArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PedidoCliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoClienteFindUniqueOrThrowArgs} args - Arguments to find a PedidoCliente
     * @example
     * // Get one PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PedidoCliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteFindFirstArgs} args - Arguments to find a PedidoCliente
     * @example
     * // Get one PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoClienteFindFirstArgs>(args?: SelectSubset<T, PedidoClienteFindFirstArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PedidoCliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteFindFirstOrThrowArgs} args - Arguments to find a PedidoCliente
     * @example
     * // Get one PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PedidoClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PedidoClientes
     * const pedidoClientes = await prisma.pedidoCliente.findMany()
     * 
     * // Get first 10 PedidoClientes
     * const pedidoClientes = await prisma.pedidoCliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pedidoClienteWithIdOnly = await prisma.pedidoCliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PedidoClienteFindManyArgs>(args?: SelectSubset<T, PedidoClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PedidoCliente.
     * @param {PedidoClienteCreateArgs} args - Arguments to create a PedidoCliente.
     * @example
     * // Create one PedidoCliente
     * const PedidoCliente = await prisma.pedidoCliente.create({
     *   data: {
     *     // ... data to create a PedidoCliente
     *   }
     * })
     * 
     */
    create<T extends PedidoClienteCreateArgs>(args: SelectSubset<T, PedidoClienteCreateArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PedidoClientes.
     * @param {PedidoClienteCreateManyArgs} args - Arguments to create many PedidoClientes.
     * @example
     * // Create many PedidoClientes
     * const pedidoCliente = await prisma.pedidoCliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoClienteCreateManyArgs>(args?: SelectSubset<T, PedidoClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PedidoClientes and returns the data saved in the database.
     * @param {PedidoClienteCreateManyAndReturnArgs} args - Arguments to create many PedidoClientes.
     * @example
     * // Create many PedidoClientes
     * const pedidoCliente = await prisma.pedidoCliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PedidoClientes and only return the `id`
     * const pedidoClienteWithIdOnly = await prisma.pedidoCliente.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PedidoCliente.
     * @param {PedidoClienteDeleteArgs} args - Arguments to delete one PedidoCliente.
     * @example
     * // Delete one PedidoCliente
     * const PedidoCliente = await prisma.pedidoCliente.delete({
     *   where: {
     *     // ... filter to delete one PedidoCliente
     *   }
     * })
     * 
     */
    delete<T extends PedidoClienteDeleteArgs>(args: SelectSubset<T, PedidoClienteDeleteArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PedidoCliente.
     * @param {PedidoClienteUpdateArgs} args - Arguments to update one PedidoCliente.
     * @example
     * // Update one PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoClienteUpdateArgs>(args: SelectSubset<T, PedidoClienteUpdateArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PedidoClientes.
     * @param {PedidoClienteDeleteManyArgs} args - Arguments to filter PedidoClientes to delete.
     * @example
     * // Delete a few PedidoClientes
     * const { count } = await prisma.pedidoCliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoClienteDeleteManyArgs>(args?: SelectSubset<T, PedidoClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PedidoClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PedidoClientes
     * const pedidoCliente = await prisma.pedidoCliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoClienteUpdateManyArgs>(args: SelectSubset<T, PedidoClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PedidoClientes and returns the data updated in the database.
     * @param {PedidoClienteUpdateManyAndReturnArgs} args - Arguments to update many PedidoClientes.
     * @example
     * // Update many PedidoClientes
     * const pedidoCliente = await prisma.pedidoCliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PedidoClientes and only return the `id`
     * const pedidoClienteWithIdOnly = await prisma.pedidoCliente.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PedidoCliente.
     * @param {PedidoClienteUpsertArgs} args - Arguments to update or create a PedidoCliente.
     * @example
     * // Update or create a PedidoCliente
     * const pedidoCliente = await prisma.pedidoCliente.upsert({
     *   create: {
     *     // ... data to create a PedidoCliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PedidoCliente we want to update
     *   }
     * })
     */
    upsert<T extends PedidoClienteUpsertArgs>(args: SelectSubset<T, PedidoClienteUpsertArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PedidoClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteCountArgs} args - Arguments to filter PedidoClientes to count.
     * @example
     * // Count the number of PedidoClientes
     * const count = await prisma.pedidoCliente.count({
     *   where: {
     *     // ... the filter for the PedidoClientes we want to count
     *   }
     * })
    **/
    count<T extends PedidoClienteCountArgs>(
      args?: Subset<T, PedidoClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PedidoCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoClienteAggregateArgs>(args: Subset<T, PedidoClienteAggregateArgs>): Prisma.PrismaPromise<GetPedidoClienteAggregateType<T>>

    /**
     * Group by PedidoCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoClienteGroupByArgs['orderBy'] }
        : { orderBy?: PedidoClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PedidoCliente model
   */
  readonly fields: PedidoClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PedidoCliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    repartidor<T extends PedidoCliente$repartidorArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$repartidorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    calificacion<T extends PedidoCliente$calificacionArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$calificacionArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orden<T extends PedidoCliente$ordenArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$ordenArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends PedidoCliente$itemsArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    observaciones<T extends PedidoCliente$observacionesArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$observacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    repartidorNotifs<T extends PedidoCliente$repartidorNotifsArgs<ExtArgs> = {}>(args?: Subset<T, PedidoCliente$repartidorNotifsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PedidoCliente model
   */
  interface PedidoClienteFieldRefs {
    readonly id: FieldRef<"PedidoCliente", 'Int'>
    readonly codigo: FieldRef<"PedidoCliente", 'String'>
    readonly clienteEmail: FieldRef<"PedidoCliente", 'String'>
    readonly creadoEn: FieldRef<"PedidoCliente", 'DateTime'>
    readonly estado: FieldRef<"PedidoCliente", 'String'>
    readonly repartidorId: FieldRef<"PedidoCliente", 'Int'>
    readonly tipoEntrega: FieldRef<"PedidoCliente", 'TipoEntrega'>
    readonly metodoPago: FieldRef<"PedidoCliente", 'String'>
    readonly direccion: FieldRef<"PedidoCliente", 'String'>
    readonly telefono: FieldRef<"PedidoCliente", 'String'>
    readonly receptorNombre: FieldRef<"PedidoCliente", 'String'>
    readonly deliveryStatus: FieldRef<"PedidoCliente", 'DeliveryStatus'>
    readonly readyAt: FieldRef<"PedidoCliente", 'DateTime'>
    readonly assignedAt: FieldRef<"PedidoCliente", 'DateTime'>
    readonly startedAt: FieldRef<"PedidoCliente", 'DateTime'>
    readonly deliveredAt: FieldRef<"PedidoCliente", 'DateTime'>
    readonly total: FieldRef<"PedidoCliente", 'Float'>
    readonly ordenId: FieldRef<"PedidoCliente", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PedidoCliente findUnique
   */
  export type PedidoClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter, which PedidoCliente to fetch.
     */
    where: PedidoClienteWhereUniqueInput
  }

  /**
   * PedidoCliente findUniqueOrThrow
   */
  export type PedidoClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter, which PedidoCliente to fetch.
     */
    where: PedidoClienteWhereUniqueInput
  }

  /**
   * PedidoCliente findFirst
   */
  export type PedidoClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter, which PedidoCliente to fetch.
     */
    where?: PedidoClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClientes to fetch.
     */
    orderBy?: PedidoClienteOrderByWithRelationInput | PedidoClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PedidoClientes.
     */
    cursor?: PedidoClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PedidoClientes.
     */
    distinct?: PedidoClienteScalarFieldEnum | PedidoClienteScalarFieldEnum[]
  }

  /**
   * PedidoCliente findFirstOrThrow
   */
  export type PedidoClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter, which PedidoCliente to fetch.
     */
    where?: PedidoClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClientes to fetch.
     */
    orderBy?: PedidoClienteOrderByWithRelationInput | PedidoClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PedidoClientes.
     */
    cursor?: PedidoClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PedidoClientes.
     */
    distinct?: PedidoClienteScalarFieldEnum | PedidoClienteScalarFieldEnum[]
  }

  /**
   * PedidoCliente findMany
   */
  export type PedidoClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClientes to fetch.
     */
    where?: PedidoClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClientes to fetch.
     */
    orderBy?: PedidoClienteOrderByWithRelationInput | PedidoClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PedidoClientes.
     */
    cursor?: PedidoClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClientes.
     */
    skip?: number
    distinct?: PedidoClienteScalarFieldEnum | PedidoClienteScalarFieldEnum[]
  }

  /**
   * PedidoCliente create
   */
  export type PedidoClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a PedidoCliente.
     */
    data: XOR<PedidoClienteCreateInput, PedidoClienteUncheckedCreateInput>
  }

  /**
   * PedidoCliente createMany
   */
  export type PedidoClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PedidoClientes.
     */
    data: PedidoClienteCreateManyInput | PedidoClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PedidoCliente createManyAndReturn
   */
  export type PedidoClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * The data used to create many PedidoClientes.
     */
    data: PedidoClienteCreateManyInput | PedidoClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PedidoCliente update
   */
  export type PedidoClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a PedidoCliente.
     */
    data: XOR<PedidoClienteUpdateInput, PedidoClienteUncheckedUpdateInput>
    /**
     * Choose, which PedidoCliente to update.
     */
    where: PedidoClienteWhereUniqueInput
  }

  /**
   * PedidoCliente updateMany
   */
  export type PedidoClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PedidoClientes.
     */
    data: XOR<PedidoClienteUpdateManyMutationInput, PedidoClienteUncheckedUpdateManyInput>
    /**
     * Filter which PedidoClientes to update
     */
    where?: PedidoClienteWhereInput
    /**
     * Limit how many PedidoClientes to update.
     */
    limit?: number
  }

  /**
   * PedidoCliente updateManyAndReturn
   */
  export type PedidoClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * The data used to update PedidoClientes.
     */
    data: XOR<PedidoClienteUpdateManyMutationInput, PedidoClienteUncheckedUpdateManyInput>
    /**
     * Filter which PedidoClientes to update
     */
    where?: PedidoClienteWhereInput
    /**
     * Limit how many PedidoClientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PedidoCliente upsert
   */
  export type PedidoClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the PedidoCliente to update in case it exists.
     */
    where: PedidoClienteWhereUniqueInput
    /**
     * In case the PedidoCliente found by the `where` argument doesn't exist, create a new PedidoCliente with this data.
     */
    create: XOR<PedidoClienteCreateInput, PedidoClienteUncheckedCreateInput>
    /**
     * In case the PedidoCliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoClienteUpdateInput, PedidoClienteUncheckedUpdateInput>
  }

  /**
   * PedidoCliente delete
   */
  export type PedidoClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    /**
     * Filter which PedidoCliente to delete.
     */
    where: PedidoClienteWhereUniqueInput
  }

  /**
   * PedidoCliente deleteMany
   */
  export type PedidoClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PedidoClientes to delete
     */
    where?: PedidoClienteWhereInput
    /**
     * Limit how many PedidoClientes to delete.
     */
    limit?: number
  }

  /**
   * PedidoCliente.repartidor
   */
  export type PedidoCliente$repartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * PedidoCliente.calificacion
   */
  export type PedidoCliente$calificacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    where?: CalificacionPedidoWhereInput
  }

  /**
   * PedidoCliente.orden
   */
  export type PedidoCliente$ordenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Orden
     */
    select?: OrdenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Orden
     */
    omit?: OrdenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrdenInclude<ExtArgs> | null
    where?: OrdenWhereInput
  }

  /**
   * PedidoCliente.items
   */
  export type PedidoCliente$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    where?: PedidoClienteItemWhereInput
    orderBy?: PedidoClienteItemOrderByWithRelationInput | PedidoClienteItemOrderByWithRelationInput[]
    cursor?: PedidoClienteItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoClienteItemScalarFieldEnum | PedidoClienteItemScalarFieldEnum[]
  }

  /**
   * PedidoCliente.observaciones
   */
  export type PedidoCliente$observacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    where?: ObservacionEntregaWhereInput
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    cursor?: ObservacionEntregaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ObservacionEntregaScalarFieldEnum | ObservacionEntregaScalarFieldEnum[]
  }

  /**
   * PedidoCliente.repartidorNotifs
   */
  export type PedidoCliente$repartidorNotifsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    where?: RepartidorNotifWhereInput
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    cursor?: RepartidorNotifWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RepartidorNotifScalarFieldEnum | RepartidorNotifScalarFieldEnum[]
  }

  /**
   * PedidoCliente without action
   */
  export type PedidoClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
  }


  /**
   * Model ObservacionEntrega
   */

  export type AggregateObservacionEntrega = {
    _count: ObservacionEntregaCountAggregateOutputType | null
    _avg: ObservacionEntregaAvgAggregateOutputType | null
    _sum: ObservacionEntregaSumAggregateOutputType | null
    _min: ObservacionEntregaMinAggregateOutputType | null
    _max: ObservacionEntregaMaxAggregateOutputType | null
  }

  export type ObservacionEntregaAvgAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    repartidorId: number | null
  }

  export type ObservacionEntregaSumAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    repartidorId: number | null
  }

  export type ObservacionEntregaMinAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    repartidorId: number | null
    texto: string | null
    createdAt: Date | null
  }

  export type ObservacionEntregaMaxAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    repartidorId: number | null
    texto: string | null
    createdAt: Date | null
  }

  export type ObservacionEntregaCountAggregateOutputType = {
    id: number
    pedidoId: number
    repartidorId: number
    texto: number
    createdAt: number
    _all: number
  }


  export type ObservacionEntregaAvgAggregateInputType = {
    id?: true
    pedidoId?: true
    repartidorId?: true
  }

  export type ObservacionEntregaSumAggregateInputType = {
    id?: true
    pedidoId?: true
    repartidorId?: true
  }

  export type ObservacionEntregaMinAggregateInputType = {
    id?: true
    pedidoId?: true
    repartidorId?: true
    texto?: true
    createdAt?: true
  }

  export type ObservacionEntregaMaxAggregateInputType = {
    id?: true
    pedidoId?: true
    repartidorId?: true
    texto?: true
    createdAt?: true
  }

  export type ObservacionEntregaCountAggregateInputType = {
    id?: true
    pedidoId?: true
    repartidorId?: true
    texto?: true
    createdAt?: true
    _all?: true
  }

  export type ObservacionEntregaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ObservacionEntrega to aggregate.
     */
    where?: ObservacionEntregaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ObservacionEntregas to fetch.
     */
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ObservacionEntregaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` ObservacionEntregas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ObservacionEntregas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ObservacionEntregas
    **/
    _count?: true | ObservacionEntregaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ObservacionEntregaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ObservacionEntregaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ObservacionEntregaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ObservacionEntregaMaxAggregateInputType
  }

  export type GetObservacionEntregaAggregateType<T extends ObservacionEntregaAggregateArgs> = {
        [P in keyof T & keyof AggregateObservacionEntrega]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObservacionEntrega[P]>
      : GetScalarType<T[P], AggregateObservacionEntrega[P]>
  }




  export type ObservacionEntregaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObservacionEntregaWhereInput
    orderBy?: ObservacionEntregaOrderByWithAggregationInput | ObservacionEntregaOrderByWithAggregationInput[]
    by: ObservacionEntregaScalarFieldEnum[] | ObservacionEntregaScalarFieldEnum
    having?: ObservacionEntregaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ObservacionEntregaCountAggregateInputType | true
    _avg?: ObservacionEntregaAvgAggregateInputType
    _sum?: ObservacionEntregaSumAggregateInputType
    _min?: ObservacionEntregaMinAggregateInputType
    _max?: ObservacionEntregaMaxAggregateInputType
  }

  export type ObservacionEntregaGroupByOutputType = {
    id: number
    pedidoId: number
    repartidorId: number
    texto: string
    createdAt: Date
    _count: ObservacionEntregaCountAggregateOutputType | null
    _avg: ObservacionEntregaAvgAggregateOutputType | null
    _sum: ObservacionEntregaSumAggregateOutputType | null
    _min: ObservacionEntregaMinAggregateOutputType | null
    _max: ObservacionEntregaMaxAggregateOutputType | null
  }

  type GetObservacionEntregaGroupByPayload<T extends ObservacionEntregaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ObservacionEntregaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ObservacionEntregaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ObservacionEntregaGroupByOutputType[P]>
            : GetScalarType<T[P], ObservacionEntregaGroupByOutputType[P]>
        }
      >
    >


  export type ObservacionEntregaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    repartidorId?: boolean
    texto?: boolean
    createdAt?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["observacionEntrega"]>

  export type ObservacionEntregaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    repartidorId?: boolean
    texto?: boolean
    createdAt?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["observacionEntrega"]>

  export type ObservacionEntregaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    repartidorId?: boolean
    texto?: boolean
    createdAt?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["observacionEntrega"]>

  export type ObservacionEntregaSelectScalar = {
    id?: boolean
    pedidoId?: boolean
    repartidorId?: boolean
    texto?: boolean
    createdAt?: boolean
  }

  export type ObservacionEntregaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoId" | "repartidorId" | "texto" | "createdAt", ExtArgs["result"]["observacionEntrega"]>
  export type ObservacionEntregaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ObservacionEntregaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ObservacionEntregaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ObservacionEntregaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ObservacionEntrega"
    objects: {
      pedido: Prisma.$PedidoClientePayload<ExtArgs>
      repartidor: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pedidoId: number
      repartidorId: number
      texto: string
      createdAt: Date
    }, ExtArgs["result"]["observacionEntrega"]>
    composites: {}
  }

  type ObservacionEntregaGetPayload<S extends boolean | null | undefined | ObservacionEntregaDefaultArgs> = $Result.GetResult<Prisma.$ObservacionEntregaPayload, S>

  type ObservacionEntregaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ObservacionEntregaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ObservacionEntregaCountAggregateInputType | true
    }

  export interface ObservacionEntregaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ObservacionEntrega'], meta: { name: 'ObservacionEntrega' } }
    /**
     * Find zero or one ObservacionEntrega that matches the filter.
     * @param {ObservacionEntregaFindUniqueArgs} args - Arguments to find a ObservacionEntrega
     * @example
     * // Get one ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ObservacionEntregaFindUniqueArgs>(args: SelectSubset<T, ObservacionEntregaFindUniqueArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ObservacionEntrega that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ObservacionEntregaFindUniqueOrThrowArgs} args - Arguments to find a ObservacionEntrega
     * @example
     * // Get one ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ObservacionEntregaFindUniqueOrThrowArgs>(args: SelectSubset<T, ObservacionEntregaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ObservacionEntrega that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaFindFirstArgs} args - Arguments to find a ObservacionEntrega
     * @example
     * // Get one ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ObservacionEntregaFindFirstArgs>(args?: SelectSubset<T, ObservacionEntregaFindFirstArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ObservacionEntrega that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaFindFirstOrThrowArgs} args - Arguments to find a ObservacionEntrega
     * @example
     * // Get one ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ObservacionEntregaFindFirstOrThrowArgs>(args?: SelectSubset<T, ObservacionEntregaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ObservacionEntregas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ObservacionEntregas
     * const observacionEntregas = await prisma.observacionEntrega.findMany()
     * 
     * // Get first 10 ObservacionEntregas
     * const observacionEntregas = await prisma.observacionEntrega.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const observacionEntregaWithIdOnly = await prisma.observacionEntrega.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ObservacionEntregaFindManyArgs>(args?: SelectSubset<T, ObservacionEntregaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ObservacionEntrega.
     * @param {ObservacionEntregaCreateArgs} args - Arguments to create a ObservacionEntrega.
     * @example
     * // Create one ObservacionEntrega
     * const ObservacionEntrega = await prisma.observacionEntrega.create({
     *   data: {
     *     // ... data to create a ObservacionEntrega
     *   }
     * })
     * 
     */
    create<T extends ObservacionEntregaCreateArgs>(args: SelectSubset<T, ObservacionEntregaCreateArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ObservacionEntregas.
     * @param {ObservacionEntregaCreateManyArgs} args - Arguments to create many ObservacionEntregas.
     * @example
     * // Create many ObservacionEntregas
     * const observacionEntrega = await prisma.observacionEntrega.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ObservacionEntregaCreateManyArgs>(args?: SelectSubset<T, ObservacionEntregaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ObservacionEntregas and returns the data saved in the database.
     * @param {ObservacionEntregaCreateManyAndReturnArgs} args - Arguments to create many ObservacionEntregas.
     * @example
     * // Create many ObservacionEntregas
     * const observacionEntrega = await prisma.observacionEntrega.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ObservacionEntregas and only return the `id`
     * const observacionEntregaWithIdOnly = await prisma.observacionEntrega.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ObservacionEntregaCreateManyAndReturnArgs>(args?: SelectSubset<T, ObservacionEntregaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ObservacionEntrega.
     * @param {ObservacionEntregaDeleteArgs} args - Arguments to delete one ObservacionEntrega.
     * @example
     * // Delete one ObservacionEntrega
     * const ObservacionEntrega = await prisma.observacionEntrega.delete({
     *   where: {
     *     // ... filter to delete one ObservacionEntrega
     *   }
     * })
     * 
     */
    delete<T extends ObservacionEntregaDeleteArgs>(args: SelectSubset<T, ObservacionEntregaDeleteArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ObservacionEntrega.
     * @param {ObservacionEntregaUpdateArgs} args - Arguments to update one ObservacionEntrega.
     * @example
     * // Update one ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ObservacionEntregaUpdateArgs>(args: SelectSubset<T, ObservacionEntregaUpdateArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ObservacionEntregas.
     * @param {ObservacionEntregaDeleteManyArgs} args - Arguments to filter ObservacionEntregas to delete.
     * @example
     * // Delete a few ObservacionEntregas
     * const { count } = await prisma.observacionEntrega.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ObservacionEntregaDeleteManyArgs>(args?: SelectSubset<T, ObservacionEntregaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ObservacionEntregas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ObservacionEntregas
     * const observacionEntrega = await prisma.observacionEntrega.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ObservacionEntregaUpdateManyArgs>(args: SelectSubset<T, ObservacionEntregaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ObservacionEntregas and returns the data updated in the database.
     * @param {ObservacionEntregaUpdateManyAndReturnArgs} args - Arguments to update many ObservacionEntregas.
     * @example
     * // Update many ObservacionEntregas
     * const observacionEntrega = await prisma.observacionEntrega.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ObservacionEntregas and only return the `id`
     * const observacionEntregaWithIdOnly = await prisma.observacionEntrega.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ObservacionEntregaUpdateManyAndReturnArgs>(args: SelectSubset<T, ObservacionEntregaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ObservacionEntrega.
     * @param {ObservacionEntregaUpsertArgs} args - Arguments to update or create a ObservacionEntrega.
     * @example
     * // Update or create a ObservacionEntrega
     * const observacionEntrega = await prisma.observacionEntrega.upsert({
     *   create: {
     *     // ... data to create a ObservacionEntrega
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ObservacionEntrega we want to update
     *   }
     * })
     */
    upsert<T extends ObservacionEntregaUpsertArgs>(args: SelectSubset<T, ObservacionEntregaUpsertArgs<ExtArgs>>): Prisma__ObservacionEntregaClient<$Result.GetResult<Prisma.$ObservacionEntregaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ObservacionEntregas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaCountArgs} args - Arguments to filter ObservacionEntregas to count.
     * @example
     * // Count the number of ObservacionEntregas
     * const count = await prisma.observacionEntrega.count({
     *   where: {
     *     // ... the filter for the ObservacionEntregas we want to count
     *   }
     * })
    **/
    count<T extends ObservacionEntregaCountArgs>(
      args?: Subset<T, ObservacionEntregaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ObservacionEntregaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ObservacionEntrega.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ObservacionEntregaAggregateArgs>(args: Subset<T, ObservacionEntregaAggregateArgs>): Prisma.PrismaPromise<GetObservacionEntregaAggregateType<T>>

    /**
     * Group by ObservacionEntrega.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservacionEntregaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ObservacionEntregaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ObservacionEntregaGroupByArgs['orderBy'] }
        : { orderBy?: ObservacionEntregaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ObservacionEntregaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObservacionEntregaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ObservacionEntrega model
   */
  readonly fields: ObservacionEntregaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ObservacionEntrega.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ObservacionEntregaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoClienteDefaultArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    repartidor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ObservacionEntrega model
   */
  interface ObservacionEntregaFieldRefs {
    readonly id: FieldRef<"ObservacionEntrega", 'Int'>
    readonly pedidoId: FieldRef<"ObservacionEntrega", 'Int'>
    readonly repartidorId: FieldRef<"ObservacionEntrega", 'Int'>
    readonly texto: FieldRef<"ObservacionEntrega", 'String'>
    readonly createdAt: FieldRef<"ObservacionEntrega", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ObservacionEntrega findUnique
   */
  export type ObservacionEntregaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter, which ObservacionEntrega to fetch.
     */
    where: ObservacionEntregaWhereUniqueInput
  }

  /**
   * ObservacionEntrega findUniqueOrThrow
   */
  export type ObservacionEntregaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter, which ObservacionEntrega to fetch.
     */
    where: ObservacionEntregaWhereUniqueInput
  }

  /**
   * ObservacionEntrega findFirst
   */
  export type ObservacionEntregaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter, which ObservacionEntrega to fetch.
     */
    where?: ObservacionEntregaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ObservacionEntregas to fetch.
     */
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ObservacionEntregas.
     */
    cursor?: ObservacionEntregaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` ObservacionEntregas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ObservacionEntregas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ObservacionEntregas.
     */
    distinct?: ObservacionEntregaScalarFieldEnum | ObservacionEntregaScalarFieldEnum[]
  }

  /**
   * ObservacionEntrega findFirstOrThrow
   */
  export type ObservacionEntregaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter, which ObservacionEntrega to fetch.
     */
    where?: ObservacionEntregaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ObservacionEntregas to fetch.
     */
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ObservacionEntregas.
     */
    cursor?: ObservacionEntregaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` ObservacionEntregas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ObservacionEntregas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ObservacionEntregas.
     */
    distinct?: ObservacionEntregaScalarFieldEnum | ObservacionEntregaScalarFieldEnum[]
  }

  /**
   * ObservacionEntrega findMany
   */
  export type ObservacionEntregaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter, which ObservacionEntregas to fetch.
     */
    where?: ObservacionEntregaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ObservacionEntregas to fetch.
     */
    orderBy?: ObservacionEntregaOrderByWithRelationInput | ObservacionEntregaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ObservacionEntregas.
     */
    cursor?: ObservacionEntregaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` ObservacionEntregas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ObservacionEntregas.
     */
    skip?: number
    distinct?: ObservacionEntregaScalarFieldEnum | ObservacionEntregaScalarFieldEnum[]
  }

  /**
   * ObservacionEntrega create
   */
  export type ObservacionEntregaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * The data needed to create a ObservacionEntrega.
     */
    data: XOR<ObservacionEntregaCreateInput, ObservacionEntregaUncheckedCreateInput>
  }

  /**
   * ObservacionEntrega createMany
   */
  export type ObservacionEntregaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ObservacionEntregas.
     */
    data: ObservacionEntregaCreateManyInput | ObservacionEntregaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ObservacionEntrega createManyAndReturn
   */
  export type ObservacionEntregaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * The data used to create many ObservacionEntregas.
     */
    data: ObservacionEntregaCreateManyInput | ObservacionEntregaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ObservacionEntrega update
   */
  export type ObservacionEntregaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * The data needed to update a ObservacionEntrega.
     */
    data: XOR<ObservacionEntregaUpdateInput, ObservacionEntregaUncheckedUpdateInput>
    /**
     * Choose, which ObservacionEntrega to update.
     */
    where: ObservacionEntregaWhereUniqueInput
  }

  /**
   * ObservacionEntrega updateMany
   */
  export type ObservacionEntregaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ObservacionEntregas.
     */
    data: XOR<ObservacionEntregaUpdateManyMutationInput, ObservacionEntregaUncheckedUpdateManyInput>
    /**
     * Filter which ObservacionEntregas to update
     */
    where?: ObservacionEntregaWhereInput
    /**
     * Limit how many ObservacionEntregas to update.
     */
    limit?: number
  }

  /**
   * ObservacionEntrega updateManyAndReturn
   */
  export type ObservacionEntregaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * The data used to update ObservacionEntregas.
     */
    data: XOR<ObservacionEntregaUpdateManyMutationInput, ObservacionEntregaUncheckedUpdateManyInput>
    /**
     * Filter which ObservacionEntregas to update
     */
    where?: ObservacionEntregaWhereInput
    /**
     * Limit how many ObservacionEntregas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ObservacionEntrega upsert
   */
  export type ObservacionEntregaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * The filter to search for the ObservacionEntrega to update in case it exists.
     */
    where: ObservacionEntregaWhereUniqueInput
    /**
     * In case the ObservacionEntrega found by the `where` argument doesn't exist, create a new ObservacionEntrega with this data.
     */
    create: XOR<ObservacionEntregaCreateInput, ObservacionEntregaUncheckedCreateInput>
    /**
     * In case the ObservacionEntrega was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ObservacionEntregaUpdateInput, ObservacionEntregaUncheckedUpdateInput>
  }

  /**
   * ObservacionEntrega delete
   */
  export type ObservacionEntregaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
    /**
     * Filter which ObservacionEntrega to delete.
     */
    where: ObservacionEntregaWhereUniqueInput
  }

  /**
   * ObservacionEntrega deleteMany
   */
  export type ObservacionEntregaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ObservacionEntregas to delete
     */
    where?: ObservacionEntregaWhereInput
    /**
     * Limit how many ObservacionEntregas to delete.
     */
    limit?: number
  }

  /**
   * ObservacionEntrega without action
   */
  export type ObservacionEntregaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObservacionEntrega
     */
    select?: ObservacionEntregaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ObservacionEntrega
     */
    omit?: ObservacionEntregaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObservacionEntregaInclude<ExtArgs> | null
  }


  /**
   * Model PedidoClienteItem
   */

  export type AggregatePedidoClienteItem = {
    _count: PedidoClienteItemCountAggregateOutputType | null
    _avg: PedidoClienteItemAvgAggregateOutputType | null
    _sum: PedidoClienteItemSumAggregateOutputType | null
    _min: PedidoClienteItemMinAggregateOutputType | null
    _max: PedidoClienteItemMaxAggregateOutputType | null
  }

  export type PedidoClienteItemAvgAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    platilloId: number | null
    precio: number | null
    qty: number | null
  }

  export type PedidoClienteItemSumAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    platilloId: number | null
    precio: number | null
    qty: number | null
  }

  export type PedidoClienteItemMinAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    platilloId: number | null
    nombre: string | null
    precio: number | null
    qty: number | null
    nota: string | null
  }

  export type PedidoClienteItemMaxAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    platilloId: number | null
    nombre: string | null
    precio: number | null
    qty: number | null
    nota: string | null
  }

  export type PedidoClienteItemCountAggregateOutputType = {
    id: number
    pedidoId: number
    platilloId: number
    nombre: number
    precio: number
    qty: number
    nota: number
    _all: number
  }


  export type PedidoClienteItemAvgAggregateInputType = {
    id?: true
    pedidoId?: true
    platilloId?: true
    precio?: true
    qty?: true
  }

  export type PedidoClienteItemSumAggregateInputType = {
    id?: true
    pedidoId?: true
    platilloId?: true
    precio?: true
    qty?: true
  }

  export type PedidoClienteItemMinAggregateInputType = {
    id?: true
    pedidoId?: true
    platilloId?: true
    nombre?: true
    precio?: true
    qty?: true
    nota?: true
  }

  export type PedidoClienteItemMaxAggregateInputType = {
    id?: true
    pedidoId?: true
    platilloId?: true
    nombre?: true
    precio?: true
    qty?: true
    nota?: true
  }

  export type PedidoClienteItemCountAggregateInputType = {
    id?: true
    pedidoId?: true
    platilloId?: true
    nombre?: true
    precio?: true
    qty?: true
    nota?: true
    _all?: true
  }

  export type PedidoClienteItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PedidoClienteItem to aggregate.
     */
    where?: PedidoClienteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClienteItems to fetch.
     */
    orderBy?: PedidoClienteItemOrderByWithRelationInput | PedidoClienteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoClienteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClienteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClienteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PedidoClienteItems
    **/
    _count?: true | PedidoClienteItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoClienteItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoClienteItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoClienteItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoClienteItemMaxAggregateInputType
  }

  export type GetPedidoClienteItemAggregateType<T extends PedidoClienteItemAggregateArgs> = {
        [P in keyof T & keyof AggregatePedidoClienteItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedidoClienteItem[P]>
      : GetScalarType<T[P], AggregatePedidoClienteItem[P]>
  }




  export type PedidoClienteItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoClienteItemWhereInput
    orderBy?: PedidoClienteItemOrderByWithAggregationInput | PedidoClienteItemOrderByWithAggregationInput[]
    by: PedidoClienteItemScalarFieldEnum[] | PedidoClienteItemScalarFieldEnum
    having?: PedidoClienteItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoClienteItemCountAggregateInputType | true
    _avg?: PedidoClienteItemAvgAggregateInputType
    _sum?: PedidoClienteItemSumAggregateInputType
    _min?: PedidoClienteItemMinAggregateInputType
    _max?: PedidoClienteItemMaxAggregateInputType
  }

  export type PedidoClienteItemGroupByOutputType = {
    id: number
    pedidoId: number
    platilloId: number
    nombre: string
    precio: number
    qty: number
    nota: string | null
    _count: PedidoClienteItemCountAggregateOutputType | null
    _avg: PedidoClienteItemAvgAggregateOutputType | null
    _sum: PedidoClienteItemSumAggregateOutputType | null
    _min: PedidoClienteItemMinAggregateOutputType | null
    _max: PedidoClienteItemMaxAggregateOutputType | null
  }

  type GetPedidoClienteItemGroupByPayload<T extends PedidoClienteItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoClienteItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoClienteItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoClienteItemGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoClienteItemGroupByOutputType[P]>
        }
      >
    >


  export type PedidoClienteItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    platilloId?: boolean
    nombre?: boolean
    precio?: boolean
    qty?: boolean
    nota?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoClienteItem"]>

  export type PedidoClienteItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    platilloId?: boolean
    nombre?: boolean
    precio?: boolean
    qty?: boolean
    nota?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoClienteItem"]>

  export type PedidoClienteItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    platilloId?: boolean
    nombre?: boolean
    precio?: boolean
    qty?: boolean
    nota?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedidoClienteItem"]>

  export type PedidoClienteItemSelectScalar = {
    id?: boolean
    pedidoId?: boolean
    platilloId?: boolean
    nombre?: boolean
    precio?: boolean
    qty?: boolean
    nota?: boolean
  }

  export type PedidoClienteItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoId" | "platilloId" | "nombre" | "precio" | "qty" | "nota", ExtArgs["result"]["pedidoClienteItem"]>
  export type PedidoClienteItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }
  export type PedidoClienteItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }
  export type PedidoClienteItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }

  export type $PedidoClienteItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PedidoClienteItem"
    objects: {
      pedido: Prisma.$PedidoClientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pedidoId: number
      platilloId: number
      nombre: string
      precio: number
      qty: number
      nota: string | null
    }, ExtArgs["result"]["pedidoClienteItem"]>
    composites: {}
  }

  type PedidoClienteItemGetPayload<S extends boolean | null | undefined | PedidoClienteItemDefaultArgs> = $Result.GetResult<Prisma.$PedidoClienteItemPayload, S>

  type PedidoClienteItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoClienteItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoClienteItemCountAggregateInputType | true
    }

  export interface PedidoClienteItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PedidoClienteItem'], meta: { name: 'PedidoClienteItem' } }
    /**
     * Find zero or one PedidoClienteItem that matches the filter.
     * @param {PedidoClienteItemFindUniqueArgs} args - Arguments to find a PedidoClienteItem
     * @example
     * // Get one PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoClienteItemFindUniqueArgs>(args: SelectSubset<T, PedidoClienteItemFindUniqueArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PedidoClienteItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoClienteItemFindUniqueOrThrowArgs} args - Arguments to find a PedidoClienteItem
     * @example
     * // Get one PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoClienteItemFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoClienteItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PedidoClienteItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemFindFirstArgs} args - Arguments to find a PedidoClienteItem
     * @example
     * // Get one PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoClienteItemFindFirstArgs>(args?: SelectSubset<T, PedidoClienteItemFindFirstArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PedidoClienteItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemFindFirstOrThrowArgs} args - Arguments to find a PedidoClienteItem
     * @example
     * // Get one PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoClienteItemFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoClienteItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PedidoClienteItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PedidoClienteItems
     * const pedidoClienteItems = await prisma.pedidoClienteItem.findMany()
     * 
     * // Get first 10 PedidoClienteItems
     * const pedidoClienteItems = await prisma.pedidoClienteItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pedidoClienteItemWithIdOnly = await prisma.pedidoClienteItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PedidoClienteItemFindManyArgs>(args?: SelectSubset<T, PedidoClienteItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PedidoClienteItem.
     * @param {PedidoClienteItemCreateArgs} args - Arguments to create a PedidoClienteItem.
     * @example
     * // Create one PedidoClienteItem
     * const PedidoClienteItem = await prisma.pedidoClienteItem.create({
     *   data: {
     *     // ... data to create a PedidoClienteItem
     *   }
     * })
     * 
     */
    create<T extends PedidoClienteItemCreateArgs>(args: SelectSubset<T, PedidoClienteItemCreateArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PedidoClienteItems.
     * @param {PedidoClienteItemCreateManyArgs} args - Arguments to create many PedidoClienteItems.
     * @example
     * // Create many PedidoClienteItems
     * const pedidoClienteItem = await prisma.pedidoClienteItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoClienteItemCreateManyArgs>(args?: SelectSubset<T, PedidoClienteItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PedidoClienteItems and returns the data saved in the database.
     * @param {PedidoClienteItemCreateManyAndReturnArgs} args - Arguments to create many PedidoClienteItems.
     * @example
     * // Create many PedidoClienteItems
     * const pedidoClienteItem = await prisma.pedidoClienteItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PedidoClienteItems and only return the `id`
     * const pedidoClienteItemWithIdOnly = await prisma.pedidoClienteItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoClienteItemCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoClienteItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PedidoClienteItem.
     * @param {PedidoClienteItemDeleteArgs} args - Arguments to delete one PedidoClienteItem.
     * @example
     * // Delete one PedidoClienteItem
     * const PedidoClienteItem = await prisma.pedidoClienteItem.delete({
     *   where: {
     *     // ... filter to delete one PedidoClienteItem
     *   }
     * })
     * 
     */
    delete<T extends PedidoClienteItemDeleteArgs>(args: SelectSubset<T, PedidoClienteItemDeleteArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PedidoClienteItem.
     * @param {PedidoClienteItemUpdateArgs} args - Arguments to update one PedidoClienteItem.
     * @example
     * // Update one PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoClienteItemUpdateArgs>(args: SelectSubset<T, PedidoClienteItemUpdateArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PedidoClienteItems.
     * @param {PedidoClienteItemDeleteManyArgs} args - Arguments to filter PedidoClienteItems to delete.
     * @example
     * // Delete a few PedidoClienteItems
     * const { count } = await prisma.pedidoClienteItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoClienteItemDeleteManyArgs>(args?: SelectSubset<T, PedidoClienteItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PedidoClienteItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PedidoClienteItems
     * const pedidoClienteItem = await prisma.pedidoClienteItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoClienteItemUpdateManyArgs>(args: SelectSubset<T, PedidoClienteItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PedidoClienteItems and returns the data updated in the database.
     * @param {PedidoClienteItemUpdateManyAndReturnArgs} args - Arguments to update many PedidoClienteItems.
     * @example
     * // Update many PedidoClienteItems
     * const pedidoClienteItem = await prisma.pedidoClienteItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PedidoClienteItems and only return the `id`
     * const pedidoClienteItemWithIdOnly = await prisma.pedidoClienteItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoClienteItemUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoClienteItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PedidoClienteItem.
     * @param {PedidoClienteItemUpsertArgs} args - Arguments to update or create a PedidoClienteItem.
     * @example
     * // Update or create a PedidoClienteItem
     * const pedidoClienteItem = await prisma.pedidoClienteItem.upsert({
     *   create: {
     *     // ... data to create a PedidoClienteItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PedidoClienteItem we want to update
     *   }
     * })
     */
    upsert<T extends PedidoClienteItemUpsertArgs>(args: SelectSubset<T, PedidoClienteItemUpsertArgs<ExtArgs>>): Prisma__PedidoClienteItemClient<$Result.GetResult<Prisma.$PedidoClienteItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PedidoClienteItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemCountArgs} args - Arguments to filter PedidoClienteItems to count.
     * @example
     * // Count the number of PedidoClienteItems
     * const count = await prisma.pedidoClienteItem.count({
     *   where: {
     *     // ... the filter for the PedidoClienteItems we want to count
     *   }
     * })
    **/
    count<T extends PedidoClienteItemCountArgs>(
      args?: Subset<T, PedidoClienteItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoClienteItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PedidoClienteItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoClienteItemAggregateArgs>(args: Subset<T, PedidoClienteItemAggregateArgs>): Prisma.PrismaPromise<GetPedidoClienteItemAggregateType<T>>

    /**
     * Group by PedidoClienteItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoClienteItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoClienteItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoClienteItemGroupByArgs['orderBy'] }
        : { orderBy?: PedidoClienteItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoClienteItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoClienteItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PedidoClienteItem model
   */
  readonly fields: PedidoClienteItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PedidoClienteItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClienteItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoClienteDefaultArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PedidoClienteItem model
   */
  interface PedidoClienteItemFieldRefs {
    readonly id: FieldRef<"PedidoClienteItem", 'Int'>
    readonly pedidoId: FieldRef<"PedidoClienteItem", 'Int'>
    readonly platilloId: FieldRef<"PedidoClienteItem", 'Int'>
    readonly nombre: FieldRef<"PedidoClienteItem", 'String'>
    readonly precio: FieldRef<"PedidoClienteItem", 'Float'>
    readonly qty: FieldRef<"PedidoClienteItem", 'Int'>
    readonly nota: FieldRef<"PedidoClienteItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PedidoClienteItem findUnique
   */
  export type PedidoClienteItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClienteItem to fetch.
     */
    where: PedidoClienteItemWhereUniqueInput
  }

  /**
   * PedidoClienteItem findUniqueOrThrow
   */
  export type PedidoClienteItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClienteItem to fetch.
     */
    where: PedidoClienteItemWhereUniqueInput
  }

  /**
   * PedidoClienteItem findFirst
   */
  export type PedidoClienteItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClienteItem to fetch.
     */
    where?: PedidoClienteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClienteItems to fetch.
     */
    orderBy?: PedidoClienteItemOrderByWithRelationInput | PedidoClienteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PedidoClienteItems.
     */
    cursor?: PedidoClienteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClienteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClienteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PedidoClienteItems.
     */
    distinct?: PedidoClienteItemScalarFieldEnum | PedidoClienteItemScalarFieldEnum[]
  }

  /**
   * PedidoClienteItem findFirstOrThrow
   */
  export type PedidoClienteItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClienteItem to fetch.
     */
    where?: PedidoClienteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClienteItems to fetch.
     */
    orderBy?: PedidoClienteItemOrderByWithRelationInput | PedidoClienteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PedidoClienteItems.
     */
    cursor?: PedidoClienteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClienteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClienteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PedidoClienteItems.
     */
    distinct?: PedidoClienteItemScalarFieldEnum | PedidoClienteItemScalarFieldEnum[]
  }

  /**
   * PedidoClienteItem findMany
   */
  export type PedidoClienteItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter, which PedidoClienteItems to fetch.
     */
    where?: PedidoClienteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PedidoClienteItems to fetch.
     */
    orderBy?: PedidoClienteItemOrderByWithRelationInput | PedidoClienteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PedidoClienteItems.
     */
    cursor?: PedidoClienteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` PedidoClienteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PedidoClienteItems.
     */
    skip?: number
    distinct?: PedidoClienteItemScalarFieldEnum | PedidoClienteItemScalarFieldEnum[]
  }

  /**
   * PedidoClienteItem create
   */
  export type PedidoClienteItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * The data needed to create a PedidoClienteItem.
     */
    data: XOR<PedidoClienteItemCreateInput, PedidoClienteItemUncheckedCreateInput>
  }

  /**
   * PedidoClienteItem createMany
   */
  export type PedidoClienteItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PedidoClienteItems.
     */
    data: PedidoClienteItemCreateManyInput | PedidoClienteItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PedidoClienteItem createManyAndReturn
   */
  export type PedidoClienteItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * The data used to create many PedidoClienteItems.
     */
    data: PedidoClienteItemCreateManyInput | PedidoClienteItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PedidoClienteItem update
   */
  export type PedidoClienteItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * The data needed to update a PedidoClienteItem.
     */
    data: XOR<PedidoClienteItemUpdateInput, PedidoClienteItemUncheckedUpdateInput>
    /**
     * Choose, which PedidoClienteItem to update.
     */
    where: PedidoClienteItemWhereUniqueInput
  }

  /**
   * PedidoClienteItem updateMany
   */
  export type PedidoClienteItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PedidoClienteItems.
     */
    data: XOR<PedidoClienteItemUpdateManyMutationInput, PedidoClienteItemUncheckedUpdateManyInput>
    /**
     * Filter which PedidoClienteItems to update
     */
    where?: PedidoClienteItemWhereInput
    /**
     * Limit how many PedidoClienteItems to update.
     */
    limit?: number
  }

  /**
   * PedidoClienteItem updateManyAndReturn
   */
  export type PedidoClienteItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * The data used to update PedidoClienteItems.
     */
    data: XOR<PedidoClienteItemUpdateManyMutationInput, PedidoClienteItemUncheckedUpdateManyInput>
    /**
     * Filter which PedidoClienteItems to update
     */
    where?: PedidoClienteItemWhereInput
    /**
     * Limit how many PedidoClienteItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PedidoClienteItem upsert
   */
  export type PedidoClienteItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * The filter to search for the PedidoClienteItem to update in case it exists.
     */
    where: PedidoClienteItemWhereUniqueInput
    /**
     * In case the PedidoClienteItem found by the `where` argument doesn't exist, create a new PedidoClienteItem with this data.
     */
    create: XOR<PedidoClienteItemCreateInput, PedidoClienteItemUncheckedCreateInput>
    /**
     * In case the PedidoClienteItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoClienteItemUpdateInput, PedidoClienteItemUncheckedUpdateInput>
  }

  /**
   * PedidoClienteItem delete
   */
  export type PedidoClienteItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
    /**
     * Filter which PedidoClienteItem to delete.
     */
    where: PedidoClienteItemWhereUniqueInput
  }

  /**
   * PedidoClienteItem deleteMany
   */
  export type PedidoClienteItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PedidoClienteItems to delete
     */
    where?: PedidoClienteItemWhereInput
    /**
     * Limit how many PedidoClienteItems to delete.
     */
    limit?: number
  }

  /**
   * PedidoClienteItem without action
   */
  export type PedidoClienteItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoClienteItem
     */
    select?: PedidoClienteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoClienteItem
     */
    omit?: PedidoClienteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteItemInclude<ExtArgs> | null
  }


  /**
   * Model MeseroNotif
   */

  export type AggregateMeseroNotif = {
    _count: MeseroNotifCountAggregateOutputType | null
    _avg: MeseroNotifAvgAggregateOutputType | null
    _sum: MeseroNotifSumAggregateOutputType | null
    _min: MeseroNotifMinAggregateOutputType | null
    _max: MeseroNotifMaxAggregateOutputType | null
  }

  export type MeseroNotifAvgAggregateOutputType = {
    id: number | null
    ordenId: number | null
    meseroId: number | null
  }

  export type MeseroNotifSumAggregateOutputType = {
    id: number | null
    ordenId: number | null
    meseroId: number | null
  }

  export type MeseroNotifMinAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    visto: boolean | null
    ordenId: number | null
    itemNombre: string | null
    tipo: string | null
    meseroId: number | null
  }

  export type MeseroNotifMaxAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    visto: boolean | null
    ordenId: number | null
    itemNombre: string | null
    tipo: string | null
    meseroId: number | null
  }

  export type MeseroNotifCountAggregateOutputType = {
    id: number
    creadoEn: number
    visto: number
    ordenId: number
    itemNombre: number
    tipo: number
    meseroId: number
    _all: number
  }


  export type MeseroNotifAvgAggregateInputType = {
    id?: true
    ordenId?: true
    meseroId?: true
  }

  export type MeseroNotifSumAggregateInputType = {
    id?: true
    ordenId?: true
    meseroId?: true
  }

  export type MeseroNotifMinAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    ordenId?: true
    itemNombre?: true
    tipo?: true
    meseroId?: true
  }

  export type MeseroNotifMaxAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    ordenId?: true
    itemNombre?: true
    tipo?: true
    meseroId?: true
  }

  export type MeseroNotifCountAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    ordenId?: true
    itemNombre?: true
    tipo?: true
    meseroId?: true
    _all?: true
  }

  export type MeseroNotifAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MeseroNotif to aggregate.
     */
    where?: MeseroNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MeseroNotifs to fetch.
     */
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MeseroNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` MeseroNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MeseroNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MeseroNotifs
    **/
    _count?: true | MeseroNotifCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MeseroNotifAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MeseroNotifSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MeseroNotifMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MeseroNotifMaxAggregateInputType
  }

  export type GetMeseroNotifAggregateType<T extends MeseroNotifAggregateArgs> = {
        [P in keyof T & keyof AggregateMeseroNotif]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMeseroNotif[P]>
      : GetScalarType<T[P], AggregateMeseroNotif[P]>
  }




  export type MeseroNotifGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MeseroNotifWhereInput
    orderBy?: MeseroNotifOrderByWithAggregationInput | MeseroNotifOrderByWithAggregationInput[]
    by: MeseroNotifScalarFieldEnum[] | MeseroNotifScalarFieldEnum
    having?: MeseroNotifScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MeseroNotifCountAggregateInputType | true
    _avg?: MeseroNotifAvgAggregateInputType
    _sum?: MeseroNotifSumAggregateInputType
    _min?: MeseroNotifMinAggregateInputType
    _max?: MeseroNotifMaxAggregateInputType
  }

  export type MeseroNotifGroupByOutputType = {
    id: number
    creadoEn: Date
    visto: boolean
    ordenId: number
    itemNombre: string
    tipo: string
    meseroId: number | null
    _count: MeseroNotifCountAggregateOutputType | null
    _avg: MeseroNotifAvgAggregateOutputType | null
    _sum: MeseroNotifSumAggregateOutputType | null
    _min: MeseroNotifMinAggregateOutputType | null
    _max: MeseroNotifMaxAggregateOutputType | null
  }

  type GetMeseroNotifGroupByPayload<T extends MeseroNotifGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MeseroNotifGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MeseroNotifGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MeseroNotifGroupByOutputType[P]>
            : GetScalarType<T[P], MeseroNotifGroupByOutputType[P]>
        }
      >
    >


  export type MeseroNotifSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    ordenId?: boolean
    itemNombre?: boolean
    tipo?: boolean
    meseroId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }, ExtArgs["result"]["meseroNotif"]>

  export type MeseroNotifSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    ordenId?: boolean
    itemNombre?: boolean
    tipo?: boolean
    meseroId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }, ExtArgs["result"]["meseroNotif"]>

  export type MeseroNotifSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    ordenId?: boolean
    itemNombre?: boolean
    tipo?: boolean
    meseroId?: boolean
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }, ExtArgs["result"]["meseroNotif"]>

  export type MeseroNotifSelectScalar = {
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    ordenId?: boolean
    itemNombre?: boolean
    tipo?: boolean
    meseroId?: boolean
  }

  export type MeseroNotifOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "creadoEn" | "visto" | "ordenId" | "itemNombre" | "tipo" | "meseroId", ExtArgs["result"]["meseroNotif"]>
  export type MeseroNotifInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }
  export type MeseroNotifIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }
  export type MeseroNotifIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orden?: boolean | OrdenDefaultArgs<ExtArgs>
    mesero?: boolean | MeseroNotif$meseroArgs<ExtArgs>
  }

  export type $MeseroNotifPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MeseroNotif"
    objects: {
      orden: Prisma.$OrdenPayload<ExtArgs>
      mesero: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      creadoEn: Date
      visto: boolean
      ordenId: number
      itemNombre: string
      tipo: string
      meseroId: number | null
    }, ExtArgs["result"]["meseroNotif"]>
    composites: {}
  }

  type MeseroNotifGetPayload<S extends boolean | null | undefined | MeseroNotifDefaultArgs> = $Result.GetResult<Prisma.$MeseroNotifPayload, S>

  type MeseroNotifCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MeseroNotifFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MeseroNotifCountAggregateInputType | true
    }

  export interface MeseroNotifDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MeseroNotif'], meta: { name: 'MeseroNotif' } }
    /**
     * Find zero or one MeseroNotif that matches the filter.
     * @param {MeseroNotifFindUniqueArgs} args - Arguments to find a MeseroNotif
     * @example
     * // Get one MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MeseroNotifFindUniqueArgs>(args: SelectSubset<T, MeseroNotifFindUniqueArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MeseroNotif that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MeseroNotifFindUniqueOrThrowArgs} args - Arguments to find a MeseroNotif
     * @example
     * // Get one MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MeseroNotifFindUniqueOrThrowArgs>(args: SelectSubset<T, MeseroNotifFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MeseroNotif that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifFindFirstArgs} args - Arguments to find a MeseroNotif
     * @example
     * // Get one MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MeseroNotifFindFirstArgs>(args?: SelectSubset<T, MeseroNotifFindFirstArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MeseroNotif that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifFindFirstOrThrowArgs} args - Arguments to find a MeseroNotif
     * @example
     * // Get one MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MeseroNotifFindFirstOrThrowArgs>(args?: SelectSubset<T, MeseroNotifFindFirstOrThrowArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MeseroNotifs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MeseroNotifs
     * const meseroNotifs = await prisma.meseroNotif.findMany()
     * 
     * // Get first 10 MeseroNotifs
     * const meseroNotifs = await prisma.meseroNotif.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const meseroNotifWithIdOnly = await prisma.meseroNotif.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MeseroNotifFindManyArgs>(args?: SelectSubset<T, MeseroNotifFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MeseroNotif.
     * @param {MeseroNotifCreateArgs} args - Arguments to create a MeseroNotif.
     * @example
     * // Create one MeseroNotif
     * const MeseroNotif = await prisma.meseroNotif.create({
     *   data: {
     *     // ... data to create a MeseroNotif
     *   }
     * })
     * 
     */
    create<T extends MeseroNotifCreateArgs>(args: SelectSubset<T, MeseroNotifCreateArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MeseroNotifs.
     * @param {MeseroNotifCreateManyArgs} args - Arguments to create many MeseroNotifs.
     * @example
     * // Create many MeseroNotifs
     * const meseroNotif = await prisma.meseroNotif.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MeseroNotifCreateManyArgs>(args?: SelectSubset<T, MeseroNotifCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MeseroNotifs and returns the data saved in the database.
     * @param {MeseroNotifCreateManyAndReturnArgs} args - Arguments to create many MeseroNotifs.
     * @example
     * // Create many MeseroNotifs
     * const meseroNotif = await prisma.meseroNotif.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MeseroNotifs and only return the `id`
     * const meseroNotifWithIdOnly = await prisma.meseroNotif.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MeseroNotifCreateManyAndReturnArgs>(args?: SelectSubset<T, MeseroNotifCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MeseroNotif.
     * @param {MeseroNotifDeleteArgs} args - Arguments to delete one MeseroNotif.
     * @example
     * // Delete one MeseroNotif
     * const MeseroNotif = await prisma.meseroNotif.delete({
     *   where: {
     *     // ... filter to delete one MeseroNotif
     *   }
     * })
     * 
     */
    delete<T extends MeseroNotifDeleteArgs>(args: SelectSubset<T, MeseroNotifDeleteArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MeseroNotif.
     * @param {MeseroNotifUpdateArgs} args - Arguments to update one MeseroNotif.
     * @example
     * // Update one MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MeseroNotifUpdateArgs>(args: SelectSubset<T, MeseroNotifUpdateArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MeseroNotifs.
     * @param {MeseroNotifDeleteManyArgs} args - Arguments to filter MeseroNotifs to delete.
     * @example
     * // Delete a few MeseroNotifs
     * const { count } = await prisma.meseroNotif.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MeseroNotifDeleteManyArgs>(args?: SelectSubset<T, MeseroNotifDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MeseroNotifs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MeseroNotifs
     * const meseroNotif = await prisma.meseroNotif.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MeseroNotifUpdateManyArgs>(args: SelectSubset<T, MeseroNotifUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MeseroNotifs and returns the data updated in the database.
     * @param {MeseroNotifUpdateManyAndReturnArgs} args - Arguments to update many MeseroNotifs.
     * @example
     * // Update many MeseroNotifs
     * const meseroNotif = await prisma.meseroNotif.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MeseroNotifs and only return the `id`
     * const meseroNotifWithIdOnly = await prisma.meseroNotif.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MeseroNotifUpdateManyAndReturnArgs>(args: SelectSubset<T, MeseroNotifUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MeseroNotif.
     * @param {MeseroNotifUpsertArgs} args - Arguments to update or create a MeseroNotif.
     * @example
     * // Update or create a MeseroNotif
     * const meseroNotif = await prisma.meseroNotif.upsert({
     *   create: {
     *     // ... data to create a MeseroNotif
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MeseroNotif we want to update
     *   }
     * })
     */
    upsert<T extends MeseroNotifUpsertArgs>(args: SelectSubset<T, MeseroNotifUpsertArgs<ExtArgs>>): Prisma__MeseroNotifClient<$Result.GetResult<Prisma.$MeseroNotifPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MeseroNotifs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifCountArgs} args - Arguments to filter MeseroNotifs to count.
     * @example
     * // Count the number of MeseroNotifs
     * const count = await prisma.meseroNotif.count({
     *   where: {
     *     // ... the filter for the MeseroNotifs we want to count
     *   }
     * })
    **/
    count<T extends MeseroNotifCountArgs>(
      args?: Subset<T, MeseroNotifCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MeseroNotifCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MeseroNotif.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MeseroNotifAggregateArgs>(args: Subset<T, MeseroNotifAggregateArgs>): Prisma.PrismaPromise<GetMeseroNotifAggregateType<T>>

    /**
     * Group by MeseroNotif.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MeseroNotifGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MeseroNotifGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MeseroNotifGroupByArgs['orderBy'] }
        : { orderBy?: MeseroNotifGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MeseroNotifGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMeseroNotifGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MeseroNotif model
   */
  readonly fields: MeseroNotifFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MeseroNotif.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MeseroNotifClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orden<T extends OrdenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrdenDefaultArgs<ExtArgs>>): Prisma__OrdenClient<$Result.GetResult<Prisma.$OrdenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    mesero<T extends MeseroNotif$meseroArgs<ExtArgs> = {}>(args?: Subset<T, MeseroNotif$meseroArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MeseroNotif model
   */
  interface MeseroNotifFieldRefs {
    readonly id: FieldRef<"MeseroNotif", 'Int'>
    readonly creadoEn: FieldRef<"MeseroNotif", 'DateTime'>
    readonly visto: FieldRef<"MeseroNotif", 'Boolean'>
    readonly ordenId: FieldRef<"MeseroNotif", 'Int'>
    readonly itemNombre: FieldRef<"MeseroNotif", 'String'>
    readonly tipo: FieldRef<"MeseroNotif", 'String'>
    readonly meseroId: FieldRef<"MeseroNotif", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MeseroNotif findUnique
   */
  export type MeseroNotifFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter, which MeseroNotif to fetch.
     */
    where: MeseroNotifWhereUniqueInput
  }

  /**
   * MeseroNotif findUniqueOrThrow
   */
  export type MeseroNotifFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter, which MeseroNotif to fetch.
     */
    where: MeseroNotifWhereUniqueInput
  }

  /**
   * MeseroNotif findFirst
   */
  export type MeseroNotifFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter, which MeseroNotif to fetch.
     */
    where?: MeseroNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MeseroNotifs to fetch.
     */
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MeseroNotifs.
     */
    cursor?: MeseroNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` MeseroNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MeseroNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MeseroNotifs.
     */
    distinct?: MeseroNotifScalarFieldEnum | MeseroNotifScalarFieldEnum[]
  }

  /**
   * MeseroNotif findFirstOrThrow
   */
  export type MeseroNotifFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter, which MeseroNotif to fetch.
     */
    where?: MeseroNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MeseroNotifs to fetch.
     */
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MeseroNotifs.
     */
    cursor?: MeseroNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` MeseroNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MeseroNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MeseroNotifs.
     */
    distinct?: MeseroNotifScalarFieldEnum | MeseroNotifScalarFieldEnum[]
  }

  /**
   * MeseroNotif findMany
   */
  export type MeseroNotifFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter, which MeseroNotifs to fetch.
     */
    where?: MeseroNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MeseroNotifs to fetch.
     */
    orderBy?: MeseroNotifOrderByWithRelationInput | MeseroNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MeseroNotifs.
     */
    cursor?: MeseroNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` MeseroNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MeseroNotifs.
     */
    skip?: number
    distinct?: MeseroNotifScalarFieldEnum | MeseroNotifScalarFieldEnum[]
  }

  /**
   * MeseroNotif create
   */
  export type MeseroNotifCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * The data needed to create a MeseroNotif.
     */
    data: XOR<MeseroNotifCreateInput, MeseroNotifUncheckedCreateInput>
  }

  /**
   * MeseroNotif createMany
   */
  export type MeseroNotifCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MeseroNotifs.
     */
    data: MeseroNotifCreateManyInput | MeseroNotifCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MeseroNotif createManyAndReturn
   */
  export type MeseroNotifCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * The data used to create many MeseroNotifs.
     */
    data: MeseroNotifCreateManyInput | MeseroNotifCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MeseroNotif update
   */
  export type MeseroNotifUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * The data needed to update a MeseroNotif.
     */
    data: XOR<MeseroNotifUpdateInput, MeseroNotifUncheckedUpdateInput>
    /**
     * Choose, which MeseroNotif to update.
     */
    where: MeseroNotifWhereUniqueInput
  }

  /**
   * MeseroNotif updateMany
   */
  export type MeseroNotifUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MeseroNotifs.
     */
    data: XOR<MeseroNotifUpdateManyMutationInput, MeseroNotifUncheckedUpdateManyInput>
    /**
     * Filter which MeseroNotifs to update
     */
    where?: MeseroNotifWhereInput
    /**
     * Limit how many MeseroNotifs to update.
     */
    limit?: number
  }

  /**
   * MeseroNotif updateManyAndReturn
   */
  export type MeseroNotifUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * The data used to update MeseroNotifs.
     */
    data: XOR<MeseroNotifUpdateManyMutationInput, MeseroNotifUncheckedUpdateManyInput>
    /**
     * Filter which MeseroNotifs to update
     */
    where?: MeseroNotifWhereInput
    /**
     * Limit how many MeseroNotifs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MeseroNotif upsert
   */
  export type MeseroNotifUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * The filter to search for the MeseroNotif to update in case it exists.
     */
    where: MeseroNotifWhereUniqueInput
    /**
     * In case the MeseroNotif found by the `where` argument doesn't exist, create a new MeseroNotif with this data.
     */
    create: XOR<MeseroNotifCreateInput, MeseroNotifUncheckedCreateInput>
    /**
     * In case the MeseroNotif was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MeseroNotifUpdateInput, MeseroNotifUncheckedUpdateInput>
  }

  /**
   * MeseroNotif delete
   */
  export type MeseroNotifDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
    /**
     * Filter which MeseroNotif to delete.
     */
    where: MeseroNotifWhereUniqueInput
  }

  /**
   * MeseroNotif deleteMany
   */
  export type MeseroNotifDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MeseroNotifs to delete
     */
    where?: MeseroNotifWhereInput
    /**
     * Limit how many MeseroNotifs to delete.
     */
    limit?: number
  }

  /**
   * MeseroNotif.mesero
   */
  export type MeseroNotif$meseroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * MeseroNotif without action
   */
  export type MeseroNotifDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MeseroNotif
     */
    select?: MeseroNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MeseroNotif
     */
    omit?: MeseroNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MeseroNotifInclude<ExtArgs> | null
  }


  /**
   * Model RepartidorNotif
   */

  export type AggregateRepartidorNotif = {
    _count: RepartidorNotifCountAggregateOutputType | null
    _avg: RepartidorNotifAvgAggregateOutputType | null
    _sum: RepartidorNotifSumAggregateOutputType | null
    _min: RepartidorNotifMinAggregateOutputType | null
    _max: RepartidorNotifMaxAggregateOutputType | null
  }

  export type RepartidorNotifAvgAggregateOutputType = {
    id: number | null
    repartidorId: number | null
    pedidoId: number | null
  }

  export type RepartidorNotifSumAggregateOutputType = {
    id: number | null
    repartidorId: number | null
    pedidoId: number | null
  }

  export type RepartidorNotifMinAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    visto: boolean | null
    tipo: string | null
    titulo: string | null
    cuerpo: string | null
    repartidorId: number | null
    pedidoId: number | null
  }

  export type RepartidorNotifMaxAggregateOutputType = {
    id: number | null
    creadoEn: Date | null
    visto: boolean | null
    tipo: string | null
    titulo: string | null
    cuerpo: string | null
    repartidorId: number | null
    pedidoId: number | null
  }

  export type RepartidorNotifCountAggregateOutputType = {
    id: number
    creadoEn: number
    visto: number
    tipo: number
    titulo: number
    cuerpo: number
    repartidorId: number
    pedidoId: number
    _all: number
  }


  export type RepartidorNotifAvgAggregateInputType = {
    id?: true
    repartidorId?: true
    pedidoId?: true
  }

  export type RepartidorNotifSumAggregateInputType = {
    id?: true
    repartidorId?: true
    pedidoId?: true
  }

  export type RepartidorNotifMinAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    tipo?: true
    titulo?: true
    cuerpo?: true
    repartidorId?: true
    pedidoId?: true
  }

  export type RepartidorNotifMaxAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    tipo?: true
    titulo?: true
    cuerpo?: true
    repartidorId?: true
    pedidoId?: true
  }

  export type RepartidorNotifCountAggregateInputType = {
    id?: true
    creadoEn?: true
    visto?: true
    tipo?: true
    titulo?: true
    cuerpo?: true
    repartidorId?: true
    pedidoId?: true
    _all?: true
  }

  export type RepartidorNotifAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RepartidorNotif to aggregate.
     */
    where?: RepartidorNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RepartidorNotifs to fetch.
     */
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RepartidorNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` RepartidorNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RepartidorNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RepartidorNotifs
    **/
    _count?: true | RepartidorNotifCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RepartidorNotifAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RepartidorNotifSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RepartidorNotifMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RepartidorNotifMaxAggregateInputType
  }

  export type GetRepartidorNotifAggregateType<T extends RepartidorNotifAggregateArgs> = {
        [P in keyof T & keyof AggregateRepartidorNotif]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRepartidorNotif[P]>
      : GetScalarType<T[P], AggregateRepartidorNotif[P]>
  }




  export type RepartidorNotifGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RepartidorNotifWhereInput
    orderBy?: RepartidorNotifOrderByWithAggregationInput | RepartidorNotifOrderByWithAggregationInput[]
    by: RepartidorNotifScalarFieldEnum[] | RepartidorNotifScalarFieldEnum
    having?: RepartidorNotifScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RepartidorNotifCountAggregateInputType | true
    _avg?: RepartidorNotifAvgAggregateInputType
    _sum?: RepartidorNotifSumAggregateInputType
    _min?: RepartidorNotifMinAggregateInputType
    _max?: RepartidorNotifMaxAggregateInputType
  }

  export type RepartidorNotifGroupByOutputType = {
    id: number
    creadoEn: Date
    visto: boolean
    tipo: string
    titulo: string
    cuerpo: string | null
    repartidorId: number | null
    pedidoId: number | null
    _count: RepartidorNotifCountAggregateOutputType | null
    _avg: RepartidorNotifAvgAggregateOutputType | null
    _sum: RepartidorNotifSumAggregateOutputType | null
    _min: RepartidorNotifMinAggregateOutputType | null
    _max: RepartidorNotifMaxAggregateOutputType | null
  }

  type GetRepartidorNotifGroupByPayload<T extends RepartidorNotifGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RepartidorNotifGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RepartidorNotifGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RepartidorNotifGroupByOutputType[P]>
            : GetScalarType<T[P], RepartidorNotifGroupByOutputType[P]>
        }
      >
    >


  export type RepartidorNotifSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    tipo?: boolean
    titulo?: boolean
    cuerpo?: boolean
    repartidorId?: boolean
    pedidoId?: boolean
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }, ExtArgs["result"]["repartidorNotif"]>

  export type RepartidorNotifSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    tipo?: boolean
    titulo?: boolean
    cuerpo?: boolean
    repartidorId?: boolean
    pedidoId?: boolean
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }, ExtArgs["result"]["repartidorNotif"]>

  export type RepartidorNotifSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    tipo?: boolean
    titulo?: boolean
    cuerpo?: boolean
    repartidorId?: boolean
    pedidoId?: boolean
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }, ExtArgs["result"]["repartidorNotif"]>

  export type RepartidorNotifSelectScalar = {
    id?: boolean
    creadoEn?: boolean
    visto?: boolean
    tipo?: boolean
    titulo?: boolean
    cuerpo?: boolean
    repartidorId?: boolean
    pedidoId?: boolean
  }

  export type RepartidorNotifOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "creadoEn" | "visto" | "tipo" | "titulo" | "cuerpo" | "repartidorId" | "pedidoId", ExtArgs["result"]["repartidorNotif"]>
  export type RepartidorNotifInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }
  export type RepartidorNotifIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }
  export type RepartidorNotifIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    repartidor?: boolean | RepartidorNotif$repartidorArgs<ExtArgs>
    pedido?: boolean | RepartidorNotif$pedidoArgs<ExtArgs>
  }

  export type $RepartidorNotifPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RepartidorNotif"
    objects: {
      repartidor: Prisma.$UsuarioPayload<ExtArgs> | null
      pedido: Prisma.$PedidoClientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      creadoEn: Date
      visto: boolean
      tipo: string
      titulo: string
      cuerpo: string | null
      repartidorId: number | null
      pedidoId: number | null
    }, ExtArgs["result"]["repartidorNotif"]>
    composites: {}
  }

  type RepartidorNotifGetPayload<S extends boolean | null | undefined | RepartidorNotifDefaultArgs> = $Result.GetResult<Prisma.$RepartidorNotifPayload, S>

  type RepartidorNotifCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RepartidorNotifFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RepartidorNotifCountAggregateInputType | true
    }

  export interface RepartidorNotifDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RepartidorNotif'], meta: { name: 'RepartidorNotif' } }
    /**
     * Find zero or one RepartidorNotif that matches the filter.
     * @param {RepartidorNotifFindUniqueArgs} args - Arguments to find a RepartidorNotif
     * @example
     * // Get one RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RepartidorNotifFindUniqueArgs>(args: SelectSubset<T, RepartidorNotifFindUniqueArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RepartidorNotif that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RepartidorNotifFindUniqueOrThrowArgs} args - Arguments to find a RepartidorNotif
     * @example
     * // Get one RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RepartidorNotifFindUniqueOrThrowArgs>(args: SelectSubset<T, RepartidorNotifFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RepartidorNotif that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifFindFirstArgs} args - Arguments to find a RepartidorNotif
     * @example
     * // Get one RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RepartidorNotifFindFirstArgs>(args?: SelectSubset<T, RepartidorNotifFindFirstArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RepartidorNotif that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifFindFirstOrThrowArgs} args - Arguments to find a RepartidorNotif
     * @example
     * // Get one RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RepartidorNotifFindFirstOrThrowArgs>(args?: SelectSubset<T, RepartidorNotifFindFirstOrThrowArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RepartidorNotifs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RepartidorNotifs
     * const repartidorNotifs = await prisma.repartidorNotif.findMany()
     * 
     * // Get first 10 RepartidorNotifs
     * const repartidorNotifs = await prisma.repartidorNotif.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const repartidorNotifWithIdOnly = await prisma.repartidorNotif.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RepartidorNotifFindManyArgs>(args?: SelectSubset<T, RepartidorNotifFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RepartidorNotif.
     * @param {RepartidorNotifCreateArgs} args - Arguments to create a RepartidorNotif.
     * @example
     * // Create one RepartidorNotif
     * const RepartidorNotif = await prisma.repartidorNotif.create({
     *   data: {
     *     // ... data to create a RepartidorNotif
     *   }
     * })
     * 
     */
    create<T extends RepartidorNotifCreateArgs>(args: SelectSubset<T, RepartidorNotifCreateArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RepartidorNotifs.
     * @param {RepartidorNotifCreateManyArgs} args - Arguments to create many RepartidorNotifs.
     * @example
     * // Create many RepartidorNotifs
     * const repartidorNotif = await prisma.repartidorNotif.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RepartidorNotifCreateManyArgs>(args?: SelectSubset<T, RepartidorNotifCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RepartidorNotifs and returns the data saved in the database.
     * @param {RepartidorNotifCreateManyAndReturnArgs} args - Arguments to create many RepartidorNotifs.
     * @example
     * // Create many RepartidorNotifs
     * const repartidorNotif = await prisma.repartidorNotif.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RepartidorNotifs and only return the `id`
     * const repartidorNotifWithIdOnly = await prisma.repartidorNotif.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RepartidorNotifCreateManyAndReturnArgs>(args?: SelectSubset<T, RepartidorNotifCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RepartidorNotif.
     * @param {RepartidorNotifDeleteArgs} args - Arguments to delete one RepartidorNotif.
     * @example
     * // Delete one RepartidorNotif
     * const RepartidorNotif = await prisma.repartidorNotif.delete({
     *   where: {
     *     // ... filter to delete one RepartidorNotif
     *   }
     * })
     * 
     */
    delete<T extends RepartidorNotifDeleteArgs>(args: SelectSubset<T, RepartidorNotifDeleteArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RepartidorNotif.
     * @param {RepartidorNotifUpdateArgs} args - Arguments to update one RepartidorNotif.
     * @example
     * // Update one RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RepartidorNotifUpdateArgs>(args: SelectSubset<T, RepartidorNotifUpdateArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RepartidorNotifs.
     * @param {RepartidorNotifDeleteManyArgs} args - Arguments to filter RepartidorNotifs to delete.
     * @example
     * // Delete a few RepartidorNotifs
     * const { count } = await prisma.repartidorNotif.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RepartidorNotifDeleteManyArgs>(args?: SelectSubset<T, RepartidorNotifDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RepartidorNotifs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RepartidorNotifs
     * const repartidorNotif = await prisma.repartidorNotif.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RepartidorNotifUpdateManyArgs>(args: SelectSubset<T, RepartidorNotifUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RepartidorNotifs and returns the data updated in the database.
     * @param {RepartidorNotifUpdateManyAndReturnArgs} args - Arguments to update many RepartidorNotifs.
     * @example
     * // Update many RepartidorNotifs
     * const repartidorNotif = await prisma.repartidorNotif.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RepartidorNotifs and only return the `id`
     * const repartidorNotifWithIdOnly = await prisma.repartidorNotif.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RepartidorNotifUpdateManyAndReturnArgs>(args: SelectSubset<T, RepartidorNotifUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RepartidorNotif.
     * @param {RepartidorNotifUpsertArgs} args - Arguments to update or create a RepartidorNotif.
     * @example
     * // Update or create a RepartidorNotif
     * const repartidorNotif = await prisma.repartidorNotif.upsert({
     *   create: {
     *     // ... data to create a RepartidorNotif
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RepartidorNotif we want to update
     *   }
     * })
     */
    upsert<T extends RepartidorNotifUpsertArgs>(args: SelectSubset<T, RepartidorNotifUpsertArgs<ExtArgs>>): Prisma__RepartidorNotifClient<$Result.GetResult<Prisma.$RepartidorNotifPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RepartidorNotifs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifCountArgs} args - Arguments to filter RepartidorNotifs to count.
     * @example
     * // Count the number of RepartidorNotifs
     * const count = await prisma.repartidorNotif.count({
     *   where: {
     *     // ... the filter for the RepartidorNotifs we want to count
     *   }
     * })
    **/
    count<T extends RepartidorNotifCountArgs>(
      args?: Subset<T, RepartidorNotifCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RepartidorNotifCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RepartidorNotif.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RepartidorNotifAggregateArgs>(args: Subset<T, RepartidorNotifAggregateArgs>): Prisma.PrismaPromise<GetRepartidorNotifAggregateType<T>>

    /**
     * Group by RepartidorNotif.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RepartidorNotifGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RepartidorNotifGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RepartidorNotifGroupByArgs['orderBy'] }
        : { orderBy?: RepartidorNotifGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RepartidorNotifGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRepartidorNotifGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RepartidorNotif model
   */
  readonly fields: RepartidorNotifFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RepartidorNotif.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RepartidorNotifClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    repartidor<T extends RepartidorNotif$repartidorArgs<ExtArgs> = {}>(args?: Subset<T, RepartidorNotif$repartidorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pedido<T extends RepartidorNotif$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, RepartidorNotif$pedidoArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RepartidorNotif model
   */
  interface RepartidorNotifFieldRefs {
    readonly id: FieldRef<"RepartidorNotif", 'Int'>
    readonly creadoEn: FieldRef<"RepartidorNotif", 'DateTime'>
    readonly visto: FieldRef<"RepartidorNotif", 'Boolean'>
    readonly tipo: FieldRef<"RepartidorNotif", 'String'>
    readonly titulo: FieldRef<"RepartidorNotif", 'String'>
    readonly cuerpo: FieldRef<"RepartidorNotif", 'String'>
    readonly repartidorId: FieldRef<"RepartidorNotif", 'Int'>
    readonly pedidoId: FieldRef<"RepartidorNotif", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RepartidorNotif findUnique
   */
  export type RepartidorNotifFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter, which RepartidorNotif to fetch.
     */
    where: RepartidorNotifWhereUniqueInput
  }

  /**
   * RepartidorNotif findUniqueOrThrow
   */
  export type RepartidorNotifFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter, which RepartidorNotif to fetch.
     */
    where: RepartidorNotifWhereUniqueInput
  }

  /**
   * RepartidorNotif findFirst
   */
  export type RepartidorNotifFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter, which RepartidorNotif to fetch.
     */
    where?: RepartidorNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RepartidorNotifs to fetch.
     */
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RepartidorNotifs.
     */
    cursor?: RepartidorNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` RepartidorNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RepartidorNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RepartidorNotifs.
     */
    distinct?: RepartidorNotifScalarFieldEnum | RepartidorNotifScalarFieldEnum[]
  }

  /**
   * RepartidorNotif findFirstOrThrow
   */
  export type RepartidorNotifFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter, which RepartidorNotif to fetch.
     */
    where?: RepartidorNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RepartidorNotifs to fetch.
     */
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RepartidorNotifs.
     */
    cursor?: RepartidorNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` RepartidorNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RepartidorNotifs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RepartidorNotifs.
     */
    distinct?: RepartidorNotifScalarFieldEnum | RepartidorNotifScalarFieldEnum[]
  }

  /**
   * RepartidorNotif findMany
   */
  export type RepartidorNotifFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter, which RepartidorNotifs to fetch.
     */
    where?: RepartidorNotifWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RepartidorNotifs to fetch.
     */
    orderBy?: RepartidorNotifOrderByWithRelationInput | RepartidorNotifOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RepartidorNotifs.
     */
    cursor?: RepartidorNotifWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` RepartidorNotifs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RepartidorNotifs.
     */
    skip?: number
    distinct?: RepartidorNotifScalarFieldEnum | RepartidorNotifScalarFieldEnum[]
  }

  /**
   * RepartidorNotif create
   */
  export type RepartidorNotifCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * The data needed to create a RepartidorNotif.
     */
    data: XOR<RepartidorNotifCreateInput, RepartidorNotifUncheckedCreateInput>
  }

  /**
   * RepartidorNotif createMany
   */
  export type RepartidorNotifCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RepartidorNotifs.
     */
    data: RepartidorNotifCreateManyInput | RepartidorNotifCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RepartidorNotif createManyAndReturn
   */
  export type RepartidorNotifCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * The data used to create many RepartidorNotifs.
     */
    data: RepartidorNotifCreateManyInput | RepartidorNotifCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RepartidorNotif update
   */
  export type RepartidorNotifUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * The data needed to update a RepartidorNotif.
     */
    data: XOR<RepartidorNotifUpdateInput, RepartidorNotifUncheckedUpdateInput>
    /**
     * Choose, which RepartidorNotif to update.
     */
    where: RepartidorNotifWhereUniqueInput
  }

  /**
   * RepartidorNotif updateMany
   */
  export type RepartidorNotifUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RepartidorNotifs.
     */
    data: XOR<RepartidorNotifUpdateManyMutationInput, RepartidorNotifUncheckedUpdateManyInput>
    /**
     * Filter which RepartidorNotifs to update
     */
    where?: RepartidorNotifWhereInput
    /**
     * Limit how many RepartidorNotifs to update.
     */
    limit?: number
  }

  /**
   * RepartidorNotif updateManyAndReturn
   */
  export type RepartidorNotifUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * The data used to update RepartidorNotifs.
     */
    data: XOR<RepartidorNotifUpdateManyMutationInput, RepartidorNotifUncheckedUpdateManyInput>
    /**
     * Filter which RepartidorNotifs to update
     */
    where?: RepartidorNotifWhereInput
    /**
     * Limit how many RepartidorNotifs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RepartidorNotif upsert
   */
  export type RepartidorNotifUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * The filter to search for the RepartidorNotif to update in case it exists.
     */
    where: RepartidorNotifWhereUniqueInput
    /**
     * In case the RepartidorNotif found by the `where` argument doesn't exist, create a new RepartidorNotif with this data.
     */
    create: XOR<RepartidorNotifCreateInput, RepartidorNotifUncheckedCreateInput>
    /**
     * In case the RepartidorNotif was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RepartidorNotifUpdateInput, RepartidorNotifUncheckedUpdateInput>
  }

  /**
   * RepartidorNotif delete
   */
  export type RepartidorNotifDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
    /**
     * Filter which RepartidorNotif to delete.
     */
    where: RepartidorNotifWhereUniqueInput
  }

  /**
   * RepartidorNotif deleteMany
   */
  export type RepartidorNotifDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RepartidorNotifs to delete
     */
    where?: RepartidorNotifWhereInput
    /**
     * Limit how many RepartidorNotifs to delete.
     */
    limit?: number
  }

  /**
   * RepartidorNotif.repartidor
   */
  export type RepartidorNotif$repartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * RepartidorNotif.pedido
   */
  export type RepartidorNotif$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCliente
     */
    select?: PedidoClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PedidoCliente
     */
    omit?: PedidoClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoClienteInclude<ExtArgs> | null
    where?: PedidoClienteWhereInput
  }

  /**
   * RepartidorNotif without action
   */
  export type RepartidorNotifDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RepartidorNotif
     */
    select?: RepartidorNotifSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RepartidorNotif
     */
    omit?: RepartidorNotifOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RepartidorNotifInclude<ExtArgs> | null
  }


  /**
   * Model CajaTurno
   */

  export type AggregateCajaTurno = {
    _count: CajaTurnoCountAggregateOutputType | null
    _avg: CajaTurnoAvgAggregateOutputType | null
    _sum: CajaTurnoSumAggregateOutputType | null
    _min: CajaTurnoMinAggregateOutputType | null
    _max: CajaTurnoMaxAggregateOutputType | null
  }

  export type CajaTurnoAvgAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    montoApertura: number | null
    autorizadoPorId: number | null
    montoCierre: number | null
    cierreAutorizadoPorId: number | null
  }

  export type CajaTurnoSumAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    montoApertura: number | null
    autorizadoPorId: number | null
    montoCierre: number | null
    cierreAutorizadoPorId: number | null
  }

  export type CajaTurnoMinAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    estado: $Enums.CajaTurnoEstado | null
    montoApertura: number | null
    solicitadoEn: Date | null
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    montoCierre: number | null
    cierreSolicitadoEn: Date | null
    cierreAutorizadoPorId: number | null
    cierreAutorizadoEn: Date | null
    cerradoEn: Date | null
  }

  export type CajaTurnoMaxAggregateOutputType = {
    id: number | null
    cajeroId: number | null
    estado: $Enums.CajaTurnoEstado | null
    montoApertura: number | null
    solicitadoEn: Date | null
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    montoCierre: number | null
    cierreSolicitadoEn: Date | null
    cierreAutorizadoPorId: number | null
    cierreAutorizadoEn: Date | null
    cerradoEn: Date | null
  }

  export type CajaTurnoCountAggregateOutputType = {
    id: number
    cajeroId: number
    estado: number
    montoApertura: number
    conteoInicial: number
    solicitadoEn: number
    autorizadoPorId: number
    autorizadoEn: number
    montoCierre: number
    conteoFinal: number
    cierreSolicitadoEn: number
    cierreAutorizadoPorId: number
    cierreAutorizadoEn: number
    cerradoEn: number
    _all: number
  }


  export type CajaTurnoAvgAggregateInputType = {
    id?: true
    cajeroId?: true
    montoApertura?: true
    autorizadoPorId?: true
    montoCierre?: true
    cierreAutorizadoPorId?: true
  }

  export type CajaTurnoSumAggregateInputType = {
    id?: true
    cajeroId?: true
    montoApertura?: true
    autorizadoPorId?: true
    montoCierre?: true
    cierreAutorizadoPorId?: true
  }

  export type CajaTurnoMinAggregateInputType = {
    id?: true
    cajeroId?: true
    estado?: true
    montoApertura?: true
    solicitadoEn?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    montoCierre?: true
    cierreSolicitadoEn?: true
    cierreAutorizadoPorId?: true
    cierreAutorizadoEn?: true
    cerradoEn?: true
  }

  export type CajaTurnoMaxAggregateInputType = {
    id?: true
    cajeroId?: true
    estado?: true
    montoApertura?: true
    solicitadoEn?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    montoCierre?: true
    cierreSolicitadoEn?: true
    cierreAutorizadoPorId?: true
    cierreAutorizadoEn?: true
    cerradoEn?: true
  }

  export type CajaTurnoCountAggregateInputType = {
    id?: true
    cajeroId?: true
    estado?: true
    montoApertura?: true
    conteoInicial?: true
    solicitadoEn?: true
    autorizadoPorId?: true
    autorizadoEn?: true
    montoCierre?: true
    conteoFinal?: true
    cierreSolicitadoEn?: true
    cierreAutorizadoPorId?: true
    cierreAutorizadoEn?: true
    cerradoEn?: true
    _all?: true
  }

  export type CajaTurnoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CajaTurno to aggregate.
     */
    where?: CajaTurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CajaTurnos to fetch.
     */
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CajaTurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CajaTurnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CajaTurnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CajaTurnos
    **/
    _count?: true | CajaTurnoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CajaTurnoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CajaTurnoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CajaTurnoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CajaTurnoMaxAggregateInputType
  }

  export type GetCajaTurnoAggregateType<T extends CajaTurnoAggregateArgs> = {
        [P in keyof T & keyof AggregateCajaTurno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCajaTurno[P]>
      : GetScalarType<T[P], AggregateCajaTurno[P]>
  }




  export type CajaTurnoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CajaTurnoWhereInput
    orderBy?: CajaTurnoOrderByWithAggregationInput | CajaTurnoOrderByWithAggregationInput[]
    by: CajaTurnoScalarFieldEnum[] | CajaTurnoScalarFieldEnum
    having?: CajaTurnoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CajaTurnoCountAggregateInputType | true
    _avg?: CajaTurnoAvgAggregateInputType
    _sum?: CajaTurnoSumAggregateInputType
    _min?: CajaTurnoMinAggregateInputType
    _max?: CajaTurnoMaxAggregateInputType
  }

  export type CajaTurnoGroupByOutputType = {
    id: number
    cajeroId: number
    estado: $Enums.CajaTurnoEstado
    montoApertura: number
    conteoInicial: JsonValue | null
    solicitadoEn: Date
    autorizadoPorId: number | null
    autorizadoEn: Date | null
    montoCierre: number | null
    conteoFinal: JsonValue | null
    cierreSolicitadoEn: Date | null
    cierreAutorizadoPorId: number | null
    cierreAutorizadoEn: Date | null
    cerradoEn: Date | null
    _count: CajaTurnoCountAggregateOutputType | null
    _avg: CajaTurnoAvgAggregateOutputType | null
    _sum: CajaTurnoSumAggregateOutputType | null
    _min: CajaTurnoMinAggregateOutputType | null
    _max: CajaTurnoMaxAggregateOutputType | null
  }

  type GetCajaTurnoGroupByPayload<T extends CajaTurnoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CajaTurnoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CajaTurnoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CajaTurnoGroupByOutputType[P]>
            : GetScalarType<T[P], CajaTurnoGroupByOutputType[P]>
        }
      >
    >


  export type CajaTurnoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cajeroId?: boolean
    estado?: boolean
    montoApertura?: boolean
    conteoInicial?: boolean
    solicitadoEn?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    montoCierre?: boolean
    conteoFinal?: boolean
    cierreSolicitadoEn?: boolean
    cierreAutorizadoPorId?: boolean
    cierreAutorizadoEn?: boolean
    cerradoEn?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["cajaTurno"]>

  export type CajaTurnoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cajeroId?: boolean
    estado?: boolean
    montoApertura?: boolean
    conteoInicial?: boolean
    solicitadoEn?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    montoCierre?: boolean
    conteoFinal?: boolean
    cierreSolicitadoEn?: boolean
    cierreAutorizadoPorId?: boolean
    cierreAutorizadoEn?: boolean
    cerradoEn?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["cajaTurno"]>

  export type CajaTurnoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cajeroId?: boolean
    estado?: boolean
    montoApertura?: boolean
    conteoInicial?: boolean
    solicitadoEn?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    montoCierre?: boolean
    conteoFinal?: boolean
    cierreSolicitadoEn?: boolean
    cierreAutorizadoPorId?: boolean
    cierreAutorizadoEn?: boolean
    cerradoEn?: boolean
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["cajaTurno"]>

  export type CajaTurnoSelectScalar = {
    id?: boolean
    cajeroId?: boolean
    estado?: boolean
    montoApertura?: boolean
    conteoInicial?: boolean
    solicitadoEn?: boolean
    autorizadoPorId?: boolean
    autorizadoEn?: boolean
    montoCierre?: boolean
    conteoFinal?: boolean
    cierreSolicitadoEn?: boolean
    cierreAutorizadoPorId?: boolean
    cierreAutorizadoEn?: boolean
    cerradoEn?: boolean
  }

  export type CajaTurnoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cajeroId" | "estado" | "montoApertura" | "conteoInicial" | "solicitadoEn" | "autorizadoPorId" | "autorizadoEn" | "montoCierre" | "conteoFinal" | "cierreSolicitadoEn" | "cierreAutorizadoPorId" | "cierreAutorizadoEn" | "cerradoEn", ExtArgs["result"]["cajaTurno"]>
  export type CajaTurnoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }
  export type CajaTurnoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }
  export type CajaTurnoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cajero?: boolean | UsuarioDefaultArgs<ExtArgs>
    autorizadoPor?: boolean | CajaTurno$autorizadoPorArgs<ExtArgs>
  }

  export type $CajaTurnoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CajaTurno"
    objects: {
      cajero: Prisma.$UsuarioPayload<ExtArgs>
      autorizadoPor: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cajeroId: number
      estado: $Enums.CajaTurnoEstado
      montoApertura: number
      conteoInicial: Prisma.JsonValue | null
      solicitadoEn: Date
      autorizadoPorId: number | null
      autorizadoEn: Date | null
      montoCierre: number | null
      conteoFinal: Prisma.JsonValue | null
      cierreSolicitadoEn: Date | null
      cierreAutorizadoPorId: number | null
      cierreAutorizadoEn: Date | null
      cerradoEn: Date | null
    }, ExtArgs["result"]["cajaTurno"]>
    composites: {}
  }

  type CajaTurnoGetPayload<S extends boolean | null | undefined | CajaTurnoDefaultArgs> = $Result.GetResult<Prisma.$CajaTurnoPayload, S>

  type CajaTurnoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CajaTurnoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CajaTurnoCountAggregateInputType | true
    }

  export interface CajaTurnoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CajaTurno'], meta: { name: 'CajaTurno' } }
    /**
     * Find zero or one CajaTurno that matches the filter.
     * @param {CajaTurnoFindUniqueArgs} args - Arguments to find a CajaTurno
     * @example
     * // Get one CajaTurno
     * const cajaTurno = await prisma.cajaTurno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CajaTurnoFindUniqueArgs>(args: SelectSubset<T, CajaTurnoFindUniqueArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CajaTurno that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CajaTurnoFindUniqueOrThrowArgs} args - Arguments to find a CajaTurno
     * @example
     * // Get one CajaTurno
     * const cajaTurno = await prisma.cajaTurno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CajaTurnoFindUniqueOrThrowArgs>(args: SelectSubset<T, CajaTurnoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CajaTurno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoFindFirstArgs} args - Arguments to find a CajaTurno
     * @example
     * // Get one CajaTurno
     * const cajaTurno = await prisma.cajaTurno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CajaTurnoFindFirstArgs>(args?: SelectSubset<T, CajaTurnoFindFirstArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CajaTurno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoFindFirstOrThrowArgs} args - Arguments to find a CajaTurno
     * @example
     * // Get one CajaTurno
     * const cajaTurno = await prisma.cajaTurno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CajaTurnoFindFirstOrThrowArgs>(args?: SelectSubset<T, CajaTurnoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CajaTurnos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CajaTurnos
     * const cajaTurnos = await prisma.cajaTurno.findMany()
     * 
     * // Get first 10 CajaTurnos
     * const cajaTurnos = await prisma.cajaTurno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cajaTurnoWithIdOnly = await prisma.cajaTurno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CajaTurnoFindManyArgs>(args?: SelectSubset<T, CajaTurnoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CajaTurno.
     * @param {CajaTurnoCreateArgs} args - Arguments to create a CajaTurno.
     * @example
     * // Create one CajaTurno
     * const CajaTurno = await prisma.cajaTurno.create({
     *   data: {
     *     // ... data to create a CajaTurno
     *   }
     * })
     * 
     */
    create<T extends CajaTurnoCreateArgs>(args: SelectSubset<T, CajaTurnoCreateArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CajaTurnos.
     * @param {CajaTurnoCreateManyArgs} args - Arguments to create many CajaTurnos.
     * @example
     * // Create many CajaTurnos
     * const cajaTurno = await prisma.cajaTurno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CajaTurnoCreateManyArgs>(args?: SelectSubset<T, CajaTurnoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CajaTurnos and returns the data saved in the database.
     * @param {CajaTurnoCreateManyAndReturnArgs} args - Arguments to create many CajaTurnos.
     * @example
     * // Create many CajaTurnos
     * const cajaTurno = await prisma.cajaTurno.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CajaTurnos and only return the `id`
     * const cajaTurnoWithIdOnly = await prisma.cajaTurno.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CajaTurnoCreateManyAndReturnArgs>(args?: SelectSubset<T, CajaTurnoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CajaTurno.
     * @param {CajaTurnoDeleteArgs} args - Arguments to delete one CajaTurno.
     * @example
     * // Delete one CajaTurno
     * const CajaTurno = await prisma.cajaTurno.delete({
     *   where: {
     *     // ... filter to delete one CajaTurno
     *   }
     * })
     * 
     */
    delete<T extends CajaTurnoDeleteArgs>(args: SelectSubset<T, CajaTurnoDeleteArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CajaTurno.
     * @param {CajaTurnoUpdateArgs} args - Arguments to update one CajaTurno.
     * @example
     * // Update one CajaTurno
     * const cajaTurno = await prisma.cajaTurno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CajaTurnoUpdateArgs>(args: SelectSubset<T, CajaTurnoUpdateArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CajaTurnos.
     * @param {CajaTurnoDeleteManyArgs} args - Arguments to filter CajaTurnos to delete.
     * @example
     * // Delete a few CajaTurnos
     * const { count } = await prisma.cajaTurno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CajaTurnoDeleteManyArgs>(args?: SelectSubset<T, CajaTurnoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CajaTurnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CajaTurnos
     * const cajaTurno = await prisma.cajaTurno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CajaTurnoUpdateManyArgs>(args: SelectSubset<T, CajaTurnoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CajaTurnos and returns the data updated in the database.
     * @param {CajaTurnoUpdateManyAndReturnArgs} args - Arguments to update many CajaTurnos.
     * @example
     * // Update many CajaTurnos
     * const cajaTurno = await prisma.cajaTurno.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CajaTurnos and only return the `id`
     * const cajaTurnoWithIdOnly = await prisma.cajaTurno.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CajaTurnoUpdateManyAndReturnArgs>(args: SelectSubset<T, CajaTurnoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CajaTurno.
     * @param {CajaTurnoUpsertArgs} args - Arguments to update or create a CajaTurno.
     * @example
     * // Update or create a CajaTurno
     * const cajaTurno = await prisma.cajaTurno.upsert({
     *   create: {
     *     // ... data to create a CajaTurno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CajaTurno we want to update
     *   }
     * })
     */
    upsert<T extends CajaTurnoUpsertArgs>(args: SelectSubset<T, CajaTurnoUpsertArgs<ExtArgs>>): Prisma__CajaTurnoClient<$Result.GetResult<Prisma.$CajaTurnoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CajaTurnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoCountArgs} args - Arguments to filter CajaTurnos to count.
     * @example
     * // Count the number of CajaTurnos
     * const count = await prisma.cajaTurno.count({
     *   where: {
     *     // ... the filter for the CajaTurnos we want to count
     *   }
     * })
    **/
    count<T extends CajaTurnoCountArgs>(
      args?: Subset<T, CajaTurnoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CajaTurnoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CajaTurno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CajaTurnoAggregateArgs>(args: Subset<T, CajaTurnoAggregateArgs>): Prisma.PrismaPromise<GetCajaTurnoAggregateType<T>>

    /**
     * Group by CajaTurno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CajaTurnoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CajaTurnoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CajaTurnoGroupByArgs['orderBy'] }
        : { orderBy?: CajaTurnoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CajaTurnoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCajaTurnoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CajaTurno model
   */
  readonly fields: CajaTurnoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CajaTurno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CajaTurnoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cajero<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    autorizadoPor<T extends CajaTurno$autorizadoPorArgs<ExtArgs> = {}>(args?: Subset<T, CajaTurno$autorizadoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CajaTurno model
   */
  interface CajaTurnoFieldRefs {
    readonly id: FieldRef<"CajaTurno", 'Int'>
    readonly cajeroId: FieldRef<"CajaTurno", 'Int'>
    readonly estado: FieldRef<"CajaTurno", 'CajaTurnoEstado'>
    readonly montoApertura: FieldRef<"CajaTurno", 'Float'>
    readonly conteoInicial: FieldRef<"CajaTurno", 'Json'>
    readonly solicitadoEn: FieldRef<"CajaTurno", 'DateTime'>
    readonly autorizadoPorId: FieldRef<"CajaTurno", 'Int'>
    readonly autorizadoEn: FieldRef<"CajaTurno", 'DateTime'>
    readonly montoCierre: FieldRef<"CajaTurno", 'Float'>
    readonly conteoFinal: FieldRef<"CajaTurno", 'Json'>
    readonly cierreSolicitadoEn: FieldRef<"CajaTurno", 'DateTime'>
    readonly cierreAutorizadoPorId: FieldRef<"CajaTurno", 'Int'>
    readonly cierreAutorizadoEn: FieldRef<"CajaTurno", 'DateTime'>
    readonly cerradoEn: FieldRef<"CajaTurno", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CajaTurno findUnique
   */
  export type CajaTurnoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter, which CajaTurno to fetch.
     */
    where: CajaTurnoWhereUniqueInput
  }

  /**
   * CajaTurno findUniqueOrThrow
   */
  export type CajaTurnoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter, which CajaTurno to fetch.
     */
    where: CajaTurnoWhereUniqueInput
  }

  /**
   * CajaTurno findFirst
   */
  export type CajaTurnoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter, which CajaTurno to fetch.
     */
    where?: CajaTurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CajaTurnos to fetch.
     */
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CajaTurnos.
     */
    cursor?: CajaTurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CajaTurnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CajaTurnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CajaTurnos.
     */
    distinct?: CajaTurnoScalarFieldEnum | CajaTurnoScalarFieldEnum[]
  }

  /**
   * CajaTurno findFirstOrThrow
   */
  export type CajaTurnoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter, which CajaTurno to fetch.
     */
    where?: CajaTurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CajaTurnos to fetch.
     */
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CajaTurnos.
     */
    cursor?: CajaTurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CajaTurnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CajaTurnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CajaTurnos.
     */
    distinct?: CajaTurnoScalarFieldEnum | CajaTurnoScalarFieldEnum[]
  }

  /**
   * CajaTurno findMany
   */
  export type CajaTurnoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter, which CajaTurnos to fetch.
     */
    where?: CajaTurnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CajaTurnos to fetch.
     */
    orderBy?: CajaTurnoOrderByWithRelationInput | CajaTurnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CajaTurnos.
     */
    cursor?: CajaTurnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CajaTurnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CajaTurnos.
     */
    skip?: number
    distinct?: CajaTurnoScalarFieldEnum | CajaTurnoScalarFieldEnum[]
  }

  /**
   * CajaTurno create
   */
  export type CajaTurnoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * The data needed to create a CajaTurno.
     */
    data: XOR<CajaTurnoCreateInput, CajaTurnoUncheckedCreateInput>
  }

  /**
   * CajaTurno createMany
   */
  export type CajaTurnoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CajaTurnos.
     */
    data: CajaTurnoCreateManyInput | CajaTurnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CajaTurno createManyAndReturn
   */
  export type CajaTurnoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * The data used to create many CajaTurnos.
     */
    data: CajaTurnoCreateManyInput | CajaTurnoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CajaTurno update
   */
  export type CajaTurnoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * The data needed to update a CajaTurno.
     */
    data: XOR<CajaTurnoUpdateInput, CajaTurnoUncheckedUpdateInput>
    /**
     * Choose, which CajaTurno to update.
     */
    where: CajaTurnoWhereUniqueInput
  }

  /**
   * CajaTurno updateMany
   */
  export type CajaTurnoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CajaTurnos.
     */
    data: XOR<CajaTurnoUpdateManyMutationInput, CajaTurnoUncheckedUpdateManyInput>
    /**
     * Filter which CajaTurnos to update
     */
    where?: CajaTurnoWhereInput
    /**
     * Limit how many CajaTurnos to update.
     */
    limit?: number
  }

  /**
   * CajaTurno updateManyAndReturn
   */
  export type CajaTurnoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * The data used to update CajaTurnos.
     */
    data: XOR<CajaTurnoUpdateManyMutationInput, CajaTurnoUncheckedUpdateManyInput>
    /**
     * Filter which CajaTurnos to update
     */
    where?: CajaTurnoWhereInput
    /**
     * Limit how many CajaTurnos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CajaTurno upsert
   */
  export type CajaTurnoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * The filter to search for the CajaTurno to update in case it exists.
     */
    where: CajaTurnoWhereUniqueInput
    /**
     * In case the CajaTurno found by the `where` argument doesn't exist, create a new CajaTurno with this data.
     */
    create: XOR<CajaTurnoCreateInput, CajaTurnoUncheckedCreateInput>
    /**
     * In case the CajaTurno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CajaTurnoUpdateInput, CajaTurnoUncheckedUpdateInput>
  }

  /**
   * CajaTurno delete
   */
  export type CajaTurnoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
    /**
     * Filter which CajaTurno to delete.
     */
    where: CajaTurnoWhereUniqueInput
  }

  /**
   * CajaTurno deleteMany
   */
  export type CajaTurnoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CajaTurnos to delete
     */
    where?: CajaTurnoWhereInput
    /**
     * Limit how many CajaTurnos to delete.
     */
    limit?: number
  }

  /**
   * CajaTurno.autorizadoPor
   */
  export type CajaTurno$autorizadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * CajaTurno without action
   */
  export type CajaTurnoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CajaTurno
     */
    select?: CajaTurnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CajaTurno
     */
    omit?: CajaTurnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CajaTurnoInclude<ExtArgs> | null
  }


  /**
   * Model CalificacionPedido
   */

  export type AggregateCalificacionPedido = {
    _count: CalificacionPedidoCountAggregateOutputType | null
    _avg: CalificacionPedidoAvgAggregateOutputType | null
    _sum: CalificacionPedidoSumAggregateOutputType | null
    _min: CalificacionPedidoMinAggregateOutputType | null
    _max: CalificacionPedidoMaxAggregateOutputType | null
  }

  export type CalificacionPedidoAvgAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    comida: number | null
    repartidor: number | null
    atencionCliente: number | null
  }

  export type CalificacionPedidoSumAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    comida: number | null
    repartidor: number | null
    atencionCliente: number | null
  }

  export type CalificacionPedidoMinAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    comida: number | null
    repartidor: number | null
    atencionCliente: number | null
    comentario: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type CalificacionPedidoMaxAggregateOutputType = {
    id: number | null
    pedidoId: number | null
    comida: number | null
    repartidor: number | null
    atencionCliente: number | null
    comentario: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type CalificacionPedidoCountAggregateOutputType = {
    id: number
    pedidoId: number
    comida: number
    repartidor: number
    atencionCliente: number
    comentario: number
    comidaOpciones: number
    repartidorOpciones: number
    atencionOpciones: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type CalificacionPedidoAvgAggregateInputType = {
    id?: true
    pedidoId?: true
    comida?: true
    repartidor?: true
    atencionCliente?: true
  }

  export type CalificacionPedidoSumAggregateInputType = {
    id?: true
    pedidoId?: true
    comida?: true
    repartidor?: true
    atencionCliente?: true
  }

  export type CalificacionPedidoMinAggregateInputType = {
    id?: true
    pedidoId?: true
    comida?: true
    repartidor?: true
    atencionCliente?: true
    comentario?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type CalificacionPedidoMaxAggregateInputType = {
    id?: true
    pedidoId?: true
    comida?: true
    repartidor?: true
    atencionCliente?: true
    comentario?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type CalificacionPedidoCountAggregateInputType = {
    id?: true
    pedidoId?: true
    comida?: true
    repartidor?: true
    atencionCliente?: true
    comentario?: true
    comidaOpciones?: true
    repartidorOpciones?: true
    atencionOpciones?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type CalificacionPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionPedido to aggregate.
     */
    where?: CalificacionPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionPedidos to fetch.
     */
    orderBy?: CalificacionPedidoOrderByWithRelationInput | CalificacionPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CalificacionPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CalificacionPedidos
    **/
    _count?: true | CalificacionPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionPedidoMaxAggregateInputType
  }

  export type GetCalificacionPedidoAggregateType<T extends CalificacionPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificacionPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificacionPedido[P]>
      : GetScalarType<T[P], AggregateCalificacionPedido[P]>
  }




  export type CalificacionPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionPedidoWhereInput
    orderBy?: CalificacionPedidoOrderByWithAggregationInput | CalificacionPedidoOrderByWithAggregationInput[]
    by: CalificacionPedidoScalarFieldEnum[] | CalificacionPedidoScalarFieldEnum
    having?: CalificacionPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionPedidoCountAggregateInputType | true
    _avg?: CalificacionPedidoAvgAggregateInputType
    _sum?: CalificacionPedidoSumAggregateInputType
    _min?: CalificacionPedidoMinAggregateInputType
    _max?: CalificacionPedidoMaxAggregateInputType
  }

  export type CalificacionPedidoGroupByOutputType = {
    id: number
    pedidoId: number
    comida: number
    repartidor: number | null
    atencionCliente: number | null
    comentario: string | null
    comidaOpciones: JsonValue | null
    repartidorOpciones: JsonValue | null
    atencionOpciones: JsonValue | null
    creadoEn: Date
    actualizadoEn: Date
    _count: CalificacionPedidoCountAggregateOutputType | null
    _avg: CalificacionPedidoAvgAggregateOutputType | null
    _sum: CalificacionPedidoSumAggregateOutputType | null
    _min: CalificacionPedidoMinAggregateOutputType | null
    _max: CalificacionPedidoMaxAggregateOutputType | null
  }

  type GetCalificacionPedidoGroupByPayload<T extends CalificacionPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionPedidoGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    comida?: boolean
    repartidor?: boolean
    atencionCliente?: boolean
    comentario?: boolean
    comidaOpciones?: boolean
    repartidorOpciones?: boolean
    atencionOpciones?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionPedido"]>

  export type CalificacionPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    comida?: boolean
    repartidor?: boolean
    atencionCliente?: boolean
    comentario?: boolean
    comidaOpciones?: boolean
    repartidorOpciones?: boolean
    atencionOpciones?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionPedido"]>

  export type CalificacionPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    comida?: boolean
    repartidor?: boolean
    atencionCliente?: boolean
    comentario?: boolean
    comidaOpciones?: boolean
    repartidorOpciones?: boolean
    atencionOpciones?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionPedido"]>

  export type CalificacionPedidoSelectScalar = {
    id?: boolean
    pedidoId?: boolean
    comida?: boolean
    repartidor?: boolean
    atencionCliente?: boolean
    comentario?: boolean
    comidaOpciones?: boolean
    repartidorOpciones?: boolean
    atencionOpciones?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type CalificacionPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoId" | "comida" | "repartidor" | "atencionCliente" | "comentario" | "comidaOpciones" | "repartidorOpciones" | "atencionOpciones" | "creadoEn" | "actualizadoEn", ExtArgs["result"]["calificacionPedido"]>
  export type CalificacionPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }
  export type CalificacionPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }
  export type CalificacionPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoClienteDefaultArgs<ExtArgs>
  }

  export type $CalificacionPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CalificacionPedido"
    objects: {
      pedido: Prisma.$PedidoClientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pedidoId: number
      comida: number
      repartidor: number | null
      atencionCliente: number | null
      comentario: string | null
      comidaOpciones: Prisma.JsonValue | null
      repartidorOpciones: Prisma.JsonValue | null
      atencionOpciones: Prisma.JsonValue | null
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["calificacionPedido"]>
    composites: {}
  }

  type CalificacionPedidoGetPayload<S extends boolean | null | undefined | CalificacionPedidoDefaultArgs> = $Result.GetResult<Prisma.$CalificacionPedidoPayload, S>

  type CalificacionPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionPedidoCountAggregateInputType | true
    }

  export interface CalificacionPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CalificacionPedido'], meta: { name: 'CalificacionPedido' } }
    /**
     * Find zero or one CalificacionPedido that matches the filter.
     * @param {CalificacionPedidoFindUniqueArgs} args - Arguments to find a CalificacionPedido
     * @example
     * // Get one CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionPedidoFindUniqueArgs>(args: SelectSubset<T, CalificacionPedidoFindUniqueArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CalificacionPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionPedidoFindUniqueOrThrowArgs} args - Arguments to find a CalificacionPedido
     * @example
     * // Get one CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoFindFirstArgs} args - Arguments to find a CalificacionPedido
     * @example
     * // Get one CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionPedidoFindFirstArgs>(args?: SelectSubset<T, CalificacionPedidoFindFirstArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoFindFirstOrThrowArgs} args - Arguments to find a CalificacionPedido
     * @example
     * // Get one CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CalificacionPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CalificacionPedidos
     * const calificacionPedidos = await prisma.calificacionPedido.findMany()
     * 
     * // Get first 10 CalificacionPedidos
     * const calificacionPedidos = await prisma.calificacionPedido.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calificacionPedidoWithIdOnly = await prisma.calificacionPedido.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalificacionPedidoFindManyArgs>(args?: SelectSubset<T, CalificacionPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CalificacionPedido.
     * @param {CalificacionPedidoCreateArgs} args - Arguments to create a CalificacionPedido.
     * @example
     * // Create one CalificacionPedido
     * const CalificacionPedido = await prisma.calificacionPedido.create({
     *   data: {
     *     // ... data to create a CalificacionPedido
     *   }
     * })
     * 
     */
    create<T extends CalificacionPedidoCreateArgs>(args: SelectSubset<T, CalificacionPedidoCreateArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CalificacionPedidos.
     * @param {CalificacionPedidoCreateManyArgs} args - Arguments to create many CalificacionPedidos.
     * @example
     * // Create many CalificacionPedidos
     * const calificacionPedido = await prisma.calificacionPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionPedidoCreateManyArgs>(args?: SelectSubset<T, CalificacionPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CalificacionPedidos and returns the data saved in the database.
     * @param {CalificacionPedidoCreateManyAndReturnArgs} args - Arguments to create many CalificacionPedidos.
     * @example
     * // Create many CalificacionPedidos
     * const calificacionPedido = await prisma.calificacionPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CalificacionPedidos and only return the `id`
     * const calificacionPedidoWithIdOnly = await prisma.calificacionPedido.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalificacionPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, CalificacionPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CalificacionPedido.
     * @param {CalificacionPedidoDeleteArgs} args - Arguments to delete one CalificacionPedido.
     * @example
     * // Delete one CalificacionPedido
     * const CalificacionPedido = await prisma.calificacionPedido.delete({
     *   where: {
     *     // ... filter to delete one CalificacionPedido
     *   }
     * })
     * 
     */
    delete<T extends CalificacionPedidoDeleteArgs>(args: SelectSubset<T, CalificacionPedidoDeleteArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CalificacionPedido.
     * @param {CalificacionPedidoUpdateArgs} args - Arguments to update one CalificacionPedido.
     * @example
     * // Update one CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionPedidoUpdateArgs>(args: SelectSubset<T, CalificacionPedidoUpdateArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CalificacionPedidos.
     * @param {CalificacionPedidoDeleteManyArgs} args - Arguments to filter CalificacionPedidos to delete.
     * @example
     * // Delete a few CalificacionPedidos
     * const { count } = await prisma.calificacionPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionPedidoDeleteManyArgs>(args?: SelectSubset<T, CalificacionPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CalificacionPedidos
     * const calificacionPedido = await prisma.calificacionPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionPedidoUpdateManyArgs>(args: SelectSubset<T, CalificacionPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionPedidos and returns the data updated in the database.
     * @param {CalificacionPedidoUpdateManyAndReturnArgs} args - Arguments to update many CalificacionPedidos.
     * @example
     * // Update many CalificacionPedidos
     * const calificacionPedido = await prisma.calificacionPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CalificacionPedidos and only return the `id`
     * const calificacionPedidoWithIdOnly = await prisma.calificacionPedido.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalificacionPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, CalificacionPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CalificacionPedido.
     * @param {CalificacionPedidoUpsertArgs} args - Arguments to update or create a CalificacionPedido.
     * @example
     * // Update or create a CalificacionPedido
     * const calificacionPedido = await prisma.calificacionPedido.upsert({
     *   create: {
     *     // ... data to create a CalificacionPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CalificacionPedido we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionPedidoUpsertArgs>(args: SelectSubset<T, CalificacionPedidoUpsertArgs<ExtArgs>>): Prisma__CalificacionPedidoClient<$Result.GetResult<Prisma.$CalificacionPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CalificacionPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoCountArgs} args - Arguments to filter CalificacionPedidos to count.
     * @example
     * // Count the number of CalificacionPedidos
     * const count = await prisma.calificacionPedido.count({
     *   where: {
     *     // ... the filter for the CalificacionPedidos we want to count
     *   }
     * })
    **/
    count<T extends CalificacionPedidoCountArgs>(
      args?: Subset<T, CalificacionPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CalificacionPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionPedidoAggregateArgs>(args: Subset<T, CalificacionPedidoAggregateArgs>): Prisma.PrismaPromise<GetCalificacionPedidoAggregateType<T>>

    /**
     * Group by CalificacionPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionPedidoGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CalificacionPedido model
   */
  readonly fields: CalificacionPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CalificacionPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoClienteDefaultArgs<ExtArgs>>): Prisma__PedidoClienteClient<$Result.GetResult<Prisma.$PedidoClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CalificacionPedido model
   */
  interface CalificacionPedidoFieldRefs {
    readonly id: FieldRef<"CalificacionPedido", 'Int'>
    readonly pedidoId: FieldRef<"CalificacionPedido", 'Int'>
    readonly comida: FieldRef<"CalificacionPedido", 'Int'>
    readonly repartidor: FieldRef<"CalificacionPedido", 'Int'>
    readonly atencionCliente: FieldRef<"CalificacionPedido", 'Int'>
    readonly comentario: FieldRef<"CalificacionPedido", 'String'>
    readonly comidaOpciones: FieldRef<"CalificacionPedido", 'Json'>
    readonly repartidorOpciones: FieldRef<"CalificacionPedido", 'Json'>
    readonly atencionOpciones: FieldRef<"CalificacionPedido", 'Json'>
    readonly creadoEn: FieldRef<"CalificacionPedido", 'DateTime'>
    readonly actualizadoEn: FieldRef<"CalificacionPedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CalificacionPedido findUnique
   */
  export type CalificacionPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionPedido to fetch.
     */
    where: CalificacionPedidoWhereUniqueInput
  }

  /**
   * CalificacionPedido findUniqueOrThrow
   */
  export type CalificacionPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionPedido to fetch.
     */
    where: CalificacionPedidoWhereUniqueInput
  }

  /**
   * CalificacionPedido findFirst
   */
  export type CalificacionPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionPedido to fetch.
     */
    where?: CalificacionPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionPedidos to fetch.
     */
    orderBy?: CalificacionPedidoOrderByWithRelationInput | CalificacionPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionPedidos.
     */
    cursor?: CalificacionPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CalificacionPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionPedidos.
     */
    distinct?: CalificacionPedidoScalarFieldEnum | CalificacionPedidoScalarFieldEnum[]
  }

  /**
   * CalificacionPedido findFirstOrThrow
   */
  export type CalificacionPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionPedido to fetch.
     */
    where?: CalificacionPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionPedidos to fetch.
     */
    orderBy?: CalificacionPedidoOrderByWithRelationInput | CalificacionPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionPedidos.
     */
    cursor?: CalificacionPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CalificacionPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionPedidos.
     */
    distinct?: CalificacionPedidoScalarFieldEnum | CalificacionPedidoScalarFieldEnum[]
  }

  /**
   * CalificacionPedido findMany
   */
  export type CalificacionPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionPedidos to fetch.
     */
    where?: CalificacionPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionPedidos to fetch.
     */
    orderBy?: CalificacionPedidoOrderByWithRelationInput | CalificacionPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CalificacionPedidos.
     */
    cursor?: CalificacionPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` CalificacionPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionPedidos.
     */
    skip?: number
    distinct?: CalificacionPedidoScalarFieldEnum | CalificacionPedidoScalarFieldEnum[]
  }

  /**
   * CalificacionPedido create
   */
  export type CalificacionPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a CalificacionPedido.
     */
    data: XOR<CalificacionPedidoCreateInput, CalificacionPedidoUncheckedCreateInput>
  }

  /**
   * CalificacionPedido createMany
   */
  export type CalificacionPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CalificacionPedidos.
     */
    data: CalificacionPedidoCreateManyInput | CalificacionPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CalificacionPedido createManyAndReturn
   */
  export type CalificacionPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many CalificacionPedidos.
     */
    data: CalificacionPedidoCreateManyInput | CalificacionPedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionPedido update
   */
  export type CalificacionPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a CalificacionPedido.
     */
    data: XOR<CalificacionPedidoUpdateInput, CalificacionPedidoUncheckedUpdateInput>
    /**
     * Choose, which CalificacionPedido to update.
     */
    where: CalificacionPedidoWhereUniqueInput
  }

  /**
   * CalificacionPedido updateMany
   */
  export type CalificacionPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CalificacionPedidos.
     */
    data: XOR<CalificacionPedidoUpdateManyMutationInput, CalificacionPedidoUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionPedidos to update
     */
    where?: CalificacionPedidoWhereInput
    /**
     * Limit how many CalificacionPedidos to update.
     */
    limit?: number
  }

  /**
   * CalificacionPedido updateManyAndReturn
   */
  export type CalificacionPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * The data used to update CalificacionPedidos.
     */
    data: XOR<CalificacionPedidoUpdateManyMutationInput, CalificacionPedidoUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionPedidos to update
     */
    where?: CalificacionPedidoWhereInput
    /**
     * Limit how many CalificacionPedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionPedido upsert
   */
  export type CalificacionPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the CalificacionPedido to update in case it exists.
     */
    where: CalificacionPedidoWhereUniqueInput
    /**
     * In case the CalificacionPedido found by the `where` argument doesn't exist, create a new CalificacionPedido with this data.
     */
    create: XOR<CalificacionPedidoCreateInput, CalificacionPedidoUncheckedCreateInput>
    /**
     * In case the CalificacionPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionPedidoUpdateInput, CalificacionPedidoUncheckedUpdateInput>
  }

  /**
   * CalificacionPedido delete
   */
  export type CalificacionPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
    /**
     * Filter which CalificacionPedido to delete.
     */
    where: CalificacionPedidoWhereUniqueInput
  }

  /**
   * CalificacionPedido deleteMany
   */
  export type CalificacionPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionPedidos to delete
     */
    where?: CalificacionPedidoWhereInput
    /**
     * Limit how many CalificacionPedidos to delete.
     */
    limit?: number
  }

  /**
   * CalificacionPedido without action
   */
  export type CalificacionPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionPedido
     */
    select?: CalificacionPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionPedido
     */
    omit?: CalificacionPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionPedidoInclude<ExtArgs> | null
  }


  /**
   * Model Setting
   */

  export type AggregateSetting = {
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  export type SettingAvgAggregateOutputType = {
    id: number | null
  }

  export type SettingSumAggregateOutputType = {
    id: number | null
  }

  export type SettingMinAggregateOutputType = {
    id: number | null
    key: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SettingMaxAggregateOutputType = {
    id: number | null
    key: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SettingCountAggregateOutputType = {
    id: number
    key: number
    value: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SettingAvgAggregateInputType = {
    id?: true
  }

  export type SettingSumAggregateInputType = {
    id?: true
  }

  export type SettingMinAggregateInputType = {
    id?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SettingMaxAggregateInputType = {
    id?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SettingCountAggregateInputType = {
    id?: true
    key?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Setting to aggregate.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Settings
    **/
    _count?: true | SettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingMaxAggregateInputType
  }

  export type GetSettingAggregateType<T extends SettingAggregateArgs> = {
        [P in keyof T & keyof AggregateSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSetting[P]>
      : GetScalarType<T[P], AggregateSetting[P]>
  }




  export type SettingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettingWhereInput
    orderBy?: SettingOrderByWithAggregationInput | SettingOrderByWithAggregationInput[]
    by: SettingScalarFieldEnum[] | SettingScalarFieldEnum
    having?: SettingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingCountAggregateInputType | true
    _avg?: SettingAvgAggregateInputType
    _sum?: SettingSumAggregateInputType
    _min?: SettingMinAggregateInputType
    _max?: SettingMaxAggregateInputType
  }

  export type SettingGroupByOutputType = {
    id: number
    key: string
    value: string
    createdAt: Date
    updatedAt: Date
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  type GetSettingGroupByPayload<T extends SettingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingGroupByOutputType[P]>
            : GetScalarType<T[P], SettingGroupByOutputType[P]>
        }
      >
    >


  export type SettingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["setting"]>

  export type SettingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["setting"]>

  export type SettingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["setting"]>

  export type SettingSelectScalar = {
    id?: boolean
    key?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SettingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "key" | "value" | "createdAt" | "updatedAt", ExtArgs["result"]["setting"]>

  export type $SettingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Setting"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      key: string
      value: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["setting"]>
    composites: {}
  }

  type SettingGetPayload<S extends boolean | null | undefined | SettingDefaultArgs> = $Result.GetResult<Prisma.$SettingPayload, S>

  type SettingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SettingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettingCountAggregateInputType | true
    }

  export interface SettingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Setting'], meta: { name: 'Setting' } }
    /**
     * Find zero or one Setting that matches the filter.
     * @param {SettingFindUniqueArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SettingFindUniqueArgs>(args: SelectSubset<T, SettingFindUniqueArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Setting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SettingFindUniqueOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SettingFindUniqueOrThrowArgs>(args: SelectSubset<T, SettingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindFirstArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SettingFindFirstArgs>(args?: SelectSubset<T, SettingFindFirstArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindFirstOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SettingFindFirstOrThrowArgs>(args?: SelectSubset<T, SettingFindFirstOrThrowArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.setting.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.setting.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const settingWithIdOnly = await prisma.setting.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SettingFindManyArgs>(args?: SelectSubset<T, SettingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Setting.
     * @param {SettingCreateArgs} args - Arguments to create a Setting.
     * @example
     * // Create one Setting
     * const Setting = await prisma.setting.create({
     *   data: {
     *     // ... data to create a Setting
     *   }
     * })
     * 
     */
    create<T extends SettingCreateArgs>(args: SelectSubset<T, SettingCreateArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settings.
     * @param {SettingCreateManyArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const setting = await prisma.setting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SettingCreateManyArgs>(args?: SelectSubset<T, SettingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Settings and returns the data saved in the database.
     * @param {SettingCreateManyAndReturnArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const setting = await prisma.setting.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Settings and only return the `id`
     * const settingWithIdOnly = await prisma.setting.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SettingCreateManyAndReturnArgs>(args?: SelectSubset<T, SettingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Setting.
     * @param {SettingDeleteArgs} args - Arguments to delete one Setting.
     * @example
     * // Delete one Setting
     * const Setting = await prisma.setting.delete({
     *   where: {
     *     // ... filter to delete one Setting
     *   }
     * })
     * 
     */
    delete<T extends SettingDeleteArgs>(args: SelectSubset<T, SettingDeleteArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Setting.
     * @param {SettingUpdateArgs} args - Arguments to update one Setting.
     * @example
     * // Update one Setting
     * const setting = await prisma.setting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SettingUpdateArgs>(args: SelectSubset<T, SettingUpdateArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settings.
     * @param {SettingDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.setting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SettingDeleteManyArgs>(args?: SelectSubset<T, SettingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const setting = await prisma.setting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SettingUpdateManyArgs>(args: SelectSubset<T, SettingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings and returns the data updated in the database.
     * @param {SettingUpdateManyAndReturnArgs} args - Arguments to update many Settings.
     * @example
     * // Update many Settings
     * const setting = await prisma.setting.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Settings and only return the `id`
     * const settingWithIdOnly = await prisma.setting.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SettingUpdateManyAndReturnArgs>(args: SelectSubset<T, SettingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Setting.
     * @param {SettingUpsertArgs} args - Arguments to update or create a Setting.
     * @example
     * // Update or create a Setting
     * const setting = await prisma.setting.upsert({
     *   create: {
     *     // ... data to create a Setting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Setting we want to update
     *   }
     * })
     */
    upsert<T extends SettingUpsertArgs>(args: SelectSubset<T, SettingUpsertArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.setting.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends SettingCountArgs>(
      args?: Subset<T, SettingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingAggregateArgs>(args: Subset<T, SettingAggregateArgs>): Prisma.PrismaPromise<GetSettingAggregateType<T>>

    /**
     * Group by Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SettingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SettingGroupByArgs['orderBy'] }
        : { orderBy?: SettingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SettingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Setting model
   */
  readonly fields: SettingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Setting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SettingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Setting model
   */
  interface SettingFieldRefs {
    readonly id: FieldRef<"Setting", 'Int'>
    readonly key: FieldRef<"Setting", 'String'>
    readonly value: FieldRef<"Setting", 'String'>
    readonly createdAt: FieldRef<"Setting", 'DateTime'>
    readonly updatedAt: FieldRef<"Setting", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Setting findUnique
   */
  export type SettingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting findUniqueOrThrow
   */
  export type SettingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting findFirst
   */
  export type SettingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting findFirstOrThrow
   */
  export type SettingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting findMany
   */
  export type SettingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `Â±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting create
   */
  export type SettingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * The data needed to create a Setting.
     */
    data: XOR<SettingCreateInput, SettingUncheckedCreateInput>
  }

  /**
   * Setting createMany
   */
  export type SettingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Settings.
     */
    data: SettingCreateManyInput | SettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Setting createManyAndReturn
   */
  export type SettingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * The data used to create many Settings.
     */
    data: SettingCreateManyInput | SettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Setting update
   */
  export type SettingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * The data needed to update a Setting.
     */
    data: XOR<SettingUpdateInput, SettingUncheckedUpdateInput>
    /**
     * Choose, which Setting to update.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting updateMany
   */
  export type SettingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Settings.
     */
    data: XOR<SettingUpdateManyMutationInput, SettingUncheckedUpdateManyInput>
    /**
     * Filter which Settings to update
     */
    where?: SettingWhereInput
    /**
     * Limit how many Settings to update.
     */
    limit?: number
  }

  /**
   * Setting updateManyAndReturn
   */
  export type SettingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * The data used to update Settings.
     */
    data: XOR<SettingUpdateManyMutationInput, SettingUncheckedUpdateManyInput>
    /**
     * Filter which Settings to update
     */
    where?: SettingWhereInput
    /**
     * Limit how many Settings to update.
     */
    limit?: number
  }

  /**
   * Setting upsert
   */
  export type SettingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * The filter to search for the Setting to update in case it exists.
     */
    where: SettingWhereUniqueInput
    /**
     * In case the Setting found by the `where` argument doesn't exist, create a new Setting with this data.
     */
    create: XOR<SettingCreateInput, SettingUncheckedCreateInput>
    /**
     * In case the Setting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SettingUpdateInput, SettingUncheckedUpdateInput>
  }

  /**
   * Setting delete
   */
  export type SettingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Filter which Setting to delete.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting deleteMany
   */
  export type SettingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settings to delete
     */
    where?: SettingWhereInput
    /**
     * Limit how many Settings to delete.
     */
    limit?: number
  }

  /**
   * Setting without action
   */
  export type SettingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    usuario: 'usuario',
    correo: 'correo',
    contrasena: 'contrasena',
    estado: 'estado',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    debeCambiarPassword: 'debeCambiarPassword',
    rolId: 'rolId'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const RolScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type RolScalarFieldEnum = (typeof RolScalarFieldEnum)[keyof typeof RolScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const PermisoPorRolScalarFieldEnum: {
    id: 'id',
    permisoId: 'permisoId',
    rolId: 'rolId'
  };

  export type PermisoPorRolScalarFieldEnum = (typeof PermisoPorRolScalarFieldEnum)[keyof typeof PermisoPorRolScalarFieldEnum]


  export const PermisoUsuarioScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    permisoId: 'permisoId'
  };

  export type PermisoUsuarioScalarFieldEnum = (typeof PermisoUsuarioScalarFieldEnum)[keyof typeof PermisoUsuarioScalarFieldEnum]


  export const PasswordHistoryScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    hash: 'hash',
    createdAt: 'createdAt'
  };

  export type PasswordHistoryScalarFieldEnum = (typeof PasswordHistoryScalarFieldEnum)[keyof typeof PasswordHistoryScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    activo: 'activo',
    creadoEn: 'creadoEn',
    tipo: 'tipo'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const PlatilloScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    precio: 'precio',
    creadoEn: 'creadoEn',
    disponible: 'disponible',
    imagenUrl: 'imagenUrl',
    categoriaId: 'categoriaId'
  };

  export type PlatilloScalarFieldEnum = (typeof PlatilloScalarFieldEnum)[keyof typeof PlatilloScalarFieldEnum]


  export const HistorialModificacionScalarFieldEnum: {
    id: 'id',
    campo: 'campo',
    valorAnterior: 'valorAnterior',
    valorNuevo: 'valorNuevo',
    fecha: 'fecha',
    accion: 'accion',
    responsableId: 'responsableId',
    usuarioId: 'usuarioId',
    platilloId: 'platilloId'
  };

  export type HistorialModificacionScalarFieldEnum = (typeof HistorialModificacionScalarFieldEnum)[keyof typeof HistorialModificacionScalarFieldEnum]


  export const MesaScalarFieldEnum: {
    id: 'id',
    numero: 'numero',
    capacidad: 'capacidad',
    estado: 'estado',
    reservadaPor: 'reservadaPor',
    activa: 'activa',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type MesaScalarFieldEnum = (typeof MesaScalarFieldEnum)[keyof typeof MesaScalarFieldEnum]


  export const ReservaScalarFieldEnum: {
    id: 'id',
    mesaId: 'mesaId',
    fechaHora: 'fechaHora',
    hastaHora: 'hastaHora',
    nombre: 'nombre',
    telefono: 'telefono',
    email: 'email',
    nota: 'nota',
    monto: 'monto',
    estado: 'estado',
    pagoEstado: 'pagoEstado',
    pagoMetodo: 'pagoMetodo',
    pagoReferencia: 'pagoReferencia',
    pagadoEn: 'pagadoEn',
    canceladaEn: 'canceladaEn',
    refundEstado: 'refundEstado',
    refundMonto: 'refundMonto',
    refundEn: 'refundEn',
    refundMotivo: 'refundMotivo',
    verificadaPorMeseroId: 'verificadaPorMeseroId',
    verificadaEn: 'verificadaEn',
    aplicadoEnOrdenId: 'aplicadoEnOrdenId',
    aplicadoEnPagoId: 'aplicadoEnPagoId',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type ReservaScalarFieldEnum = (typeof ReservaScalarFieldEnum)[keyof typeof ReservaScalarFieldEnum]


  export const OrdenScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    mesa: 'mesa',
    fecha: 'fecha',
    finishedAt: 'finishedAt',
    durationSec: 'durationSec',
    meseroId: 'meseroId',
    estado: 'estado',
    totalPagado: 'totalPagado',
    anticipo: 'anticipo'
  };

  export type OrdenScalarFieldEnum = (typeof OrdenScalarFieldEnum)[keyof typeof OrdenScalarFieldEnum]


  export const OrdenItemScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    precio: 'precio',
    nota: 'nota',
    tipo: 'tipo',
    estado: 'estado',
    qty: 'qty',
    subtotal: 'subtotal',
    creadoEn: 'creadoEn',
    asignadoEn: 'asignadoEn',
    preparandoEn: 'preparandoEn',
    finalizadoEn: 'finalizadoEn',
    prioridad: 'prioridad',
    pagado: 'pagado',
    ordenId: 'ordenId',
    chefId: 'chefId',
    bartenderId: 'bartenderId',
    ticketVentaId: 'ticketVentaId'
  };

  export type OrdenItemScalarFieldEnum = (typeof OrdenItemScalarFieldEnum)[keyof typeof OrdenItemScalarFieldEnum]


  export const CocinaChefScalarFieldEnum: {
    id: 'id',
    chefId: 'chefId',
    activo: 'activo',
    lastSeen: 'lastSeen'
  };

  export type CocinaChefScalarFieldEnum = (typeof CocinaChefScalarFieldEnum)[keyof typeof CocinaChefScalarFieldEnum]


  export const BarraBartenderScalarFieldEnum: {
    id: 'id',
    bartenderId: 'bartenderId',
    activo: 'activo',
    lastSeen: 'lastSeen'
  };

  export type BarraBartenderScalarFieldEnum = (typeof BarraBartenderScalarFieldEnum)[keyof typeof BarraBartenderScalarFieldEnum]


  export const TicketVentaScalarFieldEnum: {
    id: 'id',
    ordenId: 'ordenId',
    cajeroId: 'cajeroId',
    fechaPago: 'fechaPago',
    metodoPago: 'metodoPago',
    subtotal: 'subtotal',
    impuestos: 'impuestos',
    descuentos: 'descuentos',
    totalAPagar: 'totalAPagar',
    montoRecibido: 'montoRecibido',
    cambio: 'cambio',
    anticipoAplicado: 'anticipoAplicado',
    propina: 'propina',
    serie: 'serie',
    numero: 'numero',
    clienteNombre: 'clienteNombre',
    clienteNit: 'clienteNit',
    snapshot: 'snapshot',
    estado: 'estado',
    anuladoEn: 'anuladoEn',
    anuladoPorId: 'anuladoPorId',
    anuladoMotivo: 'anuladoMotivo',
    posCorrelativo: 'posCorrelativo'
  };

  export type TicketVentaScalarFieldEnum = (typeof TicketVentaScalarFieldEnum)[keyof typeof TicketVentaScalarFieldEnum]


  export const EgresoCajaScalarFieldEnum: {
    id: 'id',
    creadoEn: 'creadoEn',
    estado: 'estado',
    cajeroId: 'cajeroId',
    monto: 'monto',
    motivo: 'motivo',
    autorizadoPorId: 'autorizadoPorId',
    autorizadoEn: 'autorizadoEn',
    observacion: 'observacion'
  };

  export type EgresoCajaScalarFieldEnum = (typeof EgresoCajaScalarFieldEnum)[keyof typeof EgresoCajaScalarFieldEnum]


  export const PedidoClienteScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    clienteEmail: 'clienteEmail',
    creadoEn: 'creadoEn',
    estado: 'estado',
    repartidorId: 'repartidorId',
    tipoEntrega: 'tipoEntrega',
    metodoPago: 'metodoPago',
    direccion: 'direccion',
    telefono: 'telefono',
    receptorNombre: 'receptorNombre',
    deliveryStatus: 'deliveryStatus',
    readyAt: 'readyAt',
    assignedAt: 'assignedAt',
    startedAt: 'startedAt',
    deliveredAt: 'deliveredAt',
    total: 'total',
    ordenId: 'ordenId'
  };

  export type PedidoClienteScalarFieldEnum = (typeof PedidoClienteScalarFieldEnum)[keyof typeof PedidoClienteScalarFieldEnum]


  export const ObservacionEntregaScalarFieldEnum: {
    id: 'id',
    pedidoId: 'pedidoId',
    repartidorId: 'repartidorId',
    texto: 'texto',
    createdAt: 'createdAt'
  };

  export type ObservacionEntregaScalarFieldEnum = (typeof ObservacionEntregaScalarFieldEnum)[keyof typeof ObservacionEntregaScalarFieldEnum]


  export const PedidoClienteItemScalarFieldEnum: {
    id: 'id',
    pedidoId: 'pedidoId',
    platilloId: 'platilloId',
    nombre: 'nombre',
    precio: 'precio',
    qty: 'qty',
    nota: 'nota'
  };

  export type PedidoClienteItemScalarFieldEnum = (typeof PedidoClienteItemScalarFieldEnum)[keyof typeof PedidoClienteItemScalarFieldEnum]


  export const MeseroNotifScalarFieldEnum: {
    id: 'id',
    creadoEn: 'creadoEn',
    visto: 'visto',
    ordenId: 'ordenId',
    itemNombre: 'itemNombre',
    tipo: 'tipo',
    meseroId: 'meseroId'
  };

  export type MeseroNotifScalarFieldEnum = (typeof MeseroNotifScalarFieldEnum)[keyof typeof MeseroNotifScalarFieldEnum]


  export const RepartidorNotifScalarFieldEnum: {
    id: 'id',
    creadoEn: 'creadoEn',
    visto: 'visto',
    tipo: 'tipo',
    titulo: 'titulo',
    cuerpo: 'cuerpo',
    repartidorId: 'repartidorId',
    pedidoId: 'pedidoId'
  };

  export type RepartidorNotifScalarFieldEnum = (typeof RepartidorNotifScalarFieldEnum)[keyof typeof RepartidorNotifScalarFieldEnum]


  export const CajaTurnoScalarFieldEnum: {
    id: 'id',
    cajeroId: 'cajeroId',
    estado: 'estado',
    montoApertura: 'montoApertura',
    conteoInicial: 'conteoInicial',
    solicitadoEn: 'solicitadoEn',
    autorizadoPorId: 'autorizadoPorId',
    autorizadoEn: 'autorizadoEn',
    montoCierre: 'montoCierre',
    conteoFinal: 'conteoFinal',
    cierreSolicitadoEn: 'cierreSolicitadoEn',
    cierreAutorizadoPorId: 'cierreAutorizadoPorId',
    cierreAutorizadoEn: 'cierreAutorizadoEn',
    cerradoEn: 'cerradoEn'
  };

  export type CajaTurnoScalarFieldEnum = (typeof CajaTurnoScalarFieldEnum)[keyof typeof CajaTurnoScalarFieldEnum]


  export const CalificacionPedidoScalarFieldEnum: {
    id: 'id',
    pedidoId: 'pedidoId',
    comida: 'comida',
    repartidor: 'repartidor',
    atencionCliente: 'atencionCliente',
    comentario: 'comentario',
    comidaOpciones: 'comidaOpciones',
    repartidorOpciones: 'repartidorOpciones',
    atencionOpciones: 'atencionOpciones',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type CalificacionPedidoScalarFieldEnum = (typeof CalificacionPedidoScalarFieldEnum)[keyof typeof CalificacionPedidoScalarFieldEnum]


  export const SettingScalarFieldEnum: {
    id: 'id',
    key: 'key',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SettingScalarFieldEnum = (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'CategoriaTipo'
   */
  export type EnumCategoriaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaTipo'>
    


  /**
   * Reference to a field of type 'CategoriaTipo[]'
   */
  export type ListEnumCategoriaTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaTipo[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'MesaEstado'
   */
  export type EnumMesaEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MesaEstado'>
    


  /**
   * Reference to a field of type 'MesaEstado[]'
   */
  export type ListEnumMesaEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MesaEstado[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'ReservaEstado'
   */
  export type EnumReservaEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaEstado'>
    


  /**
   * Reference to a field of type 'ReservaEstado[]'
   */
  export type ListEnumReservaEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservaEstado[]'>
    


  /**
   * Reference to a field of type 'PagoEstado'
   */
  export type EnumPagoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PagoEstado'>
    


  /**
   * Reference to a field of type 'PagoEstado[]'
   */
  export type ListEnumPagoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PagoEstado[]'>
    


  /**
   * Reference to a field of type 'RefundEstado'
   */
  export type EnumRefundEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RefundEstado'>
    


  /**
   * Reference to a field of type 'RefundEstado[]'
   */
  export type ListEnumRefundEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RefundEstado[]'>
    


  /**
   * Reference to a field of type 'OrdenEstado'
   */
  export type EnumOrdenEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrdenEstado'>
    


  /**
   * Reference to a field of type 'OrdenEstado[]'
   */
  export type ListEnumOrdenEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrdenEstado[]'>
    


  /**
   * Reference to a field of type 'MetodoPago'
   */
  export type EnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago'>
    


  /**
   * Reference to a field of type 'MetodoPago[]'
   */
  export type ListEnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'ComprobanteEstado'
   */
  export type EnumComprobanteEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComprobanteEstado'>
    


  /**
   * Reference to a field of type 'ComprobanteEstado[]'
   */
  export type ListEnumComprobanteEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComprobanteEstado[]'>
    


  /**
   * Reference to a field of type 'EgresoEstado'
   */
  export type EnumEgresoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EgresoEstado'>
    


  /**
   * Reference to a field of type 'EgresoEstado[]'
   */
  export type ListEnumEgresoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EgresoEstado[]'>
    


  /**
   * Reference to a field of type 'TipoEntrega'
   */
  export type EnumTipoEntregaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoEntrega'>
    


  /**
   * Reference to a field of type 'TipoEntrega[]'
   */
  export type ListEnumTipoEntregaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoEntrega[]'>
    


  /**
   * Reference to a field of type 'DeliveryStatus'
   */
  export type EnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus'>
    


  /**
   * Reference to a field of type 'DeliveryStatus[]'
   */
  export type ListEnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus[]'>
    


  /**
   * Reference to a field of type 'CajaTurnoEstado'
   */
  export type EnumCajaTurnoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CajaTurnoEstado'>
    


  /**
   * Reference to a field of type 'CajaTurnoEstado[]'
   */
  export type ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CajaTurnoEstado[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    usuario?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    estado?: BoolFilter<"Usuario"> | boolean
    creadoEn?: DateTimeFilter<"Usuario"> | Date | string
    actualizadoEn?: DateTimeFilter<"Usuario"> | Date | string
    debeCambiarPassword?: BoolFilter<"Usuario"> | boolean
    rolId?: IntFilter<"Usuario"> | number
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    permisos?: PermisoUsuarioListRelationFilter
    historialModificaciones?: HistorialModificacionListRelationFilter
    historialResponsable?: HistorialModificacionListRelationFilter
    passwordHistory?: PasswordHistoryListRelationFilter
    ordenesMesero?: OrdenListRelationFilter
    itemsAsignados?: OrdenItemListRelationFilter
    cocinaEstado?: XOR<CocinaChefNullableScalarRelationFilter, CocinaChefWhereInput> | null
    itemsBarraAsignados?: OrdenItemListRelationFilter
    barraEstado?: XOR<BarraBartenderNullableScalarRelationFilter, BarraBartenderWhereInput> | null
    egresosSolicitados?: EgresoCajaListRelationFilter
    egresosAutorizados?: EgresoCajaListRelationFilter
    meseroNotifs?: MeseroNotifListRelationFilter
    pedidosRepartidor?: PedidoClienteListRelationFilter
    observacionesEntrega?: ObservacionEntregaListRelationFilter
    repartidorNotifs?: RepartidorNotifListRelationFilter
    ticketsCobrados?: TicketVentaListRelationFilter
    ticketsAnulados?: TicketVentaListRelationFilter
    cajaTurnosSolicitados?: CajaTurnoListRelationFilter
    cajaTurnosAutorizados?: CajaTurnoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuario?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrderInput | SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    debeCambiarPassword?: SortOrder
    rolId?: SortOrder
    rol?: RolOrderByWithRelationInput
    permisos?: PermisoUsuarioOrderByRelationAggregateInput
    historialModificaciones?: HistorialModificacionOrderByRelationAggregateInput
    historialResponsable?: HistorialModificacionOrderByRelationAggregateInput
    passwordHistory?: PasswordHistoryOrderByRelationAggregateInput
    ordenesMesero?: OrdenOrderByRelationAggregateInput
    itemsAsignados?: OrdenItemOrderByRelationAggregateInput
    cocinaEstado?: CocinaChefOrderByWithRelationInput
    itemsBarraAsignados?: OrdenItemOrderByRelationAggregateInput
    barraEstado?: BarraBartenderOrderByWithRelationInput
    egresosSolicitados?: EgresoCajaOrderByRelationAggregateInput
    egresosAutorizados?: EgresoCajaOrderByRelationAggregateInput
    meseroNotifs?: MeseroNotifOrderByRelationAggregateInput
    pedidosRepartidor?: PedidoClienteOrderByRelationAggregateInput
    observacionesEntrega?: ObservacionEntregaOrderByRelationAggregateInput
    repartidorNotifs?: RepartidorNotifOrderByRelationAggregateInput
    ticketsCobrados?: TicketVentaOrderByRelationAggregateInput
    ticketsAnulados?: TicketVentaOrderByRelationAggregateInput
    cajaTurnosSolicitados?: CajaTurnoOrderByRelationAggregateInput
    cajaTurnosAutorizados?: CajaTurnoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuario?: string
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    estado?: BoolFilter<"Usuario"> | boolean
    creadoEn?: DateTimeFilter<"Usuario"> | Date | string
    actualizadoEn?: DateTimeFilter<"Usuario"> | Date | string
    debeCambiarPassword?: BoolFilter<"Usuario"> | boolean
    rolId?: IntFilter<"Usuario"> | number
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    permisos?: PermisoUsuarioListRelationFilter
    historialModificaciones?: HistorialModificacionListRelationFilter
    historialResponsable?: HistorialModificacionListRelationFilter
    passwordHistory?: PasswordHistoryListRelationFilter
    ordenesMesero?: OrdenListRelationFilter
    itemsAsignados?: OrdenItemListRelationFilter
    cocinaEstado?: XOR<CocinaChefNullableScalarRelationFilter, CocinaChefWhereInput> | null
    itemsBarraAsignados?: OrdenItemListRelationFilter
    barraEstado?: XOR<BarraBartenderNullableScalarRelationFilter, BarraBartenderWhereInput> | null
    egresosSolicitados?: EgresoCajaListRelationFilter
    egresosAutorizados?: EgresoCajaListRelationFilter
    meseroNotifs?: MeseroNotifListRelationFilter
    pedidosRepartidor?: PedidoClienteListRelationFilter
    observacionesEntrega?: ObservacionEntregaListRelationFilter
    repartidorNotifs?: RepartidorNotifListRelationFilter
    ticketsCobrados?: TicketVentaListRelationFilter
    ticketsAnulados?: TicketVentaListRelationFilter
    cajaTurnosSolicitados?: CajaTurnoListRelationFilter
    cajaTurnosAutorizados?: CajaTurnoListRelationFilter
  }, "id" | "usuario" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuario?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrderInput | SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    debeCambiarPassword?: SortOrder
    rolId?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    usuario?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    contrasena?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    estado?: BoolWithAggregatesFilter<"Usuario"> | boolean
    creadoEn?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    debeCambiarPassword?: BoolWithAggregatesFilter<"Usuario"> | boolean
    rolId?: IntWithAggregatesFilter<"Usuario"> | number
  }

  export type RolWhereInput = {
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    id?: IntFilter<"Rol"> | number
    nombre?: StringFilter<"Rol"> | string
    usuarios?: UsuarioListRelationFilter
    permisos?: PermisoPorRolListRelationFilter
  }

  export type RolOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuarios?: UsuarioOrderByRelationAggregateInput
    permisos?: PermisoPorRolOrderByRelationAggregateInput
  }

  export type RolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    usuarios?: UsuarioListRelationFilter
    permisos?: PermisoPorRolListRelationFilter
  }, "id" | "nombre">

  export type RolOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: RolCountOrderByAggregateInput
    _avg?: RolAvgOrderByAggregateInput
    _max?: RolMaxOrderByAggregateInput
    _min?: RolMinOrderByAggregateInput
    _sum?: RolSumOrderByAggregateInput
  }

  export type RolScalarWhereWithAggregatesInput = {
    AND?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    OR?: RolScalarWhereWithAggregatesInput[]
    NOT?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Rol"> | number
    nombre?: StringWithAggregatesFilter<"Rol"> | string
  }

  export type PermisoWhereInput = {
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id?: IntFilter<"Permiso"> | number
    nombre?: StringFilter<"Permiso"> | string
    descripcion?: StringNullableFilter<"Permiso"> | string | null
    roles?: PermisoPorRolListRelationFilter
    usuarios?: PermisoUsuarioListRelationFilter
  }

  export type PermisoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    roles?: PermisoPorRolOrderByRelationAggregateInput
    usuarios?: PermisoUsuarioOrderByRelationAggregateInput
  }

  export type PermisoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    descripcion?: StringNullableFilter<"Permiso"> | string | null
    roles?: PermisoPorRolListRelationFilter
    usuarios?: PermisoUsuarioListRelationFilter
  }, "id" | "nombre">

  export type PermisoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: PermisoCountOrderByAggregateInput
    _avg?: PermisoAvgOrderByAggregateInput
    _max?: PermisoMaxOrderByAggregateInput
    _min?: PermisoMinOrderByAggregateInput
    _sum?: PermisoSumOrderByAggregateInput
  }

  export type PermisoScalarWhereWithAggregatesInput = {
    AND?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    OR?: PermisoScalarWhereWithAggregatesInput[]
    NOT?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permiso"> | number
    nombre?: StringWithAggregatesFilter<"Permiso"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Permiso"> | string | null
  }

  export type PermisoPorRolWhereInput = {
    AND?: PermisoPorRolWhereInput | PermisoPorRolWhereInput[]
    OR?: PermisoPorRolWhereInput[]
    NOT?: PermisoPorRolWhereInput | PermisoPorRolWhereInput[]
    id?: IntFilter<"PermisoPorRol"> | number
    permisoId?: IntFilter<"PermisoPorRol"> | number
    rolId?: IntFilter<"PermisoPorRol"> | number
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
  }

  export type PermisoPorRolOrderByWithRelationInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
    permiso?: PermisoOrderByWithRelationInput
    rol?: RolOrderByWithRelationInput
  }

  export type PermisoPorRolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    permisoId_rolId?: PermisoPorRolPermisoIdRolIdCompoundUniqueInput
    AND?: PermisoPorRolWhereInput | PermisoPorRolWhereInput[]
    OR?: PermisoPorRolWhereInput[]
    NOT?: PermisoPorRolWhereInput | PermisoPorRolWhereInput[]
    permisoId?: IntFilter<"PermisoPorRol"> | number
    rolId?: IntFilter<"PermisoPorRol"> | number
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
    rol?: XOR<RolScalarRelationFilter, RolWhereInput>
  }, "id" | "permisoId_rolId">

  export type PermisoPorRolOrderByWithAggregationInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
    _count?: PermisoPorRolCountOrderByAggregateInput
    _avg?: PermisoPorRolAvgOrderByAggregateInput
    _max?: PermisoPorRolMaxOrderByAggregateInput
    _min?: PermisoPorRolMinOrderByAggregateInput
    _sum?: PermisoPorRolSumOrderByAggregateInput
  }

  export type PermisoPorRolScalarWhereWithAggregatesInput = {
    AND?: PermisoPorRolScalarWhereWithAggregatesInput | PermisoPorRolScalarWhereWithAggregatesInput[]
    OR?: PermisoPorRolScalarWhereWithAggregatesInput[]
    NOT?: PermisoPorRolScalarWhereWithAggregatesInput | PermisoPorRolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PermisoPorRol"> | number
    permisoId?: IntWithAggregatesFilter<"PermisoPorRol"> | number
    rolId?: IntWithAggregatesFilter<"PermisoPorRol"> | number
  }

  export type PermisoUsuarioWhereInput = {
    AND?: PermisoUsuarioWhereInput | PermisoUsuarioWhereInput[]
    OR?: PermisoUsuarioWhereInput[]
    NOT?: PermisoUsuarioWhereInput | PermisoUsuarioWhereInput[]
    id?: IntFilter<"PermisoUsuario"> | number
    usuarioId?: IntFilter<"PermisoUsuario"> | number
    permisoId?: IntFilter<"PermisoUsuario"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
  }

  export type PermisoUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    permiso?: PermisoOrderByWithRelationInput
  }

  export type PermisoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuarioId_permisoId?: PermisoUsuarioUsuarioIdPermisoIdCompoundUniqueInput
    AND?: PermisoUsuarioWhereInput | PermisoUsuarioWhereInput[]
    OR?: PermisoUsuarioWhereInput[]
    NOT?: PermisoUsuarioWhereInput | PermisoUsuarioWhereInput[]
    usuarioId?: IntFilter<"PermisoUsuario"> | number
    permisoId?: IntFilter<"PermisoUsuario"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    permiso?: XOR<PermisoScalarRelationFilter, PermisoWhereInput>
  }, "id" | "usuarioId_permisoId">

  export type PermisoUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
    _count?: PermisoUsuarioCountOrderByAggregateInput
    _avg?: PermisoUsuarioAvgOrderByAggregateInput
    _max?: PermisoUsuarioMaxOrderByAggregateInput
    _min?: PermisoUsuarioMinOrderByAggregateInput
    _sum?: PermisoUsuarioSumOrderByAggregateInput
  }

  export type PermisoUsuarioScalarWhereWithAggregatesInput = {
    AND?: PermisoUsuarioScalarWhereWithAggregatesInput | PermisoUsuarioScalarWhereWithAggregatesInput[]
    OR?: PermisoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: PermisoUsuarioScalarWhereWithAggregatesInput | PermisoUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PermisoUsuario"> | number
    usuarioId?: IntWithAggregatesFilter<"PermisoUsuario"> | number
    permisoId?: IntWithAggregatesFilter<"PermisoUsuario"> | number
  }

  export type PasswordHistoryWhereInput = {
    AND?: PasswordHistoryWhereInput | PasswordHistoryWhereInput[]
    OR?: PasswordHistoryWhereInput[]
    NOT?: PasswordHistoryWhereInput | PasswordHistoryWhereInput[]
    id?: IntFilter<"PasswordHistory"> | number
    userId?: IntFilter<"PasswordHistory"> | number
    hash?: StringFilter<"PasswordHistory"> | string
    createdAt?: DateTimeFilter<"PasswordHistory"> | Date | string
    user?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type PasswordHistoryOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    hash?: SortOrder
    createdAt?: SortOrder
    user?: UsuarioOrderByWithRelationInput
  }

  export type PasswordHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PasswordHistoryWhereInput | PasswordHistoryWhereInput[]
    OR?: PasswordHistoryWhereInput[]
    NOT?: PasswordHistoryWhereInput | PasswordHistoryWhereInput[]
    userId?: IntFilter<"PasswordHistory"> | number
    hash?: StringFilter<"PasswordHistory"> | string
    createdAt?: DateTimeFilter<"PasswordHistory"> | Date | string
    user?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type PasswordHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    hash?: SortOrder
    createdAt?: SortOrder
    _count?: PasswordHistoryCountOrderByAggregateInput
    _avg?: PasswordHistoryAvgOrderByAggregateInput
    _max?: PasswordHistoryMaxOrderByAggregateInput
    _min?: PasswordHistoryMinOrderByAggregateInput
    _sum?: PasswordHistorySumOrderByAggregateInput
  }

  export type PasswordHistoryScalarWhereWithAggregatesInput = {
    AND?: PasswordHistoryScalarWhereWithAggregatesInput | PasswordHistoryScalarWhereWithAggregatesInput[]
    OR?: PasswordHistoryScalarWhereWithAggregatesInput[]
    NOT?: PasswordHistoryScalarWhereWithAggregatesInput | PasswordHistoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PasswordHistory"> | number
    userId?: IntWithAggregatesFilter<"PasswordHistory"> | number
    hash?: StringWithAggregatesFilter<"PasswordHistory"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PasswordHistory"> | Date | string
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    id?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    activo?: BoolFilter<"Categoria"> | boolean
    creadoEn?: DateTimeFilter<"Categoria"> | Date | string
    tipo?: EnumCategoriaTipoFilter<"Categoria"> | $Enums.CategoriaTipo
    platillos?: PlatilloListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    creadoEn?: SortOrder
    tipo?: SortOrder
    platillos?: PlatilloOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    activo?: BoolFilter<"Categoria"> | boolean
    creadoEn?: DateTimeFilter<"Categoria"> | Date | string
    tipo?: EnumCategoriaTipoFilter<"Categoria"> | $Enums.CategoriaTipo
    platillos?: PlatilloListRelationFilter
  }, "id" | "nombre">

  export type CategoriaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    creadoEn?: SortOrder
    tipo?: SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categoria"> | number
    nombre?: StringWithAggregatesFilter<"Categoria"> | string
    activo?: BoolWithAggregatesFilter<"Categoria"> | boolean
    creadoEn?: DateTimeWithAggregatesFilter<"Categoria"> | Date | string
    tipo?: EnumCategoriaTipoWithAggregatesFilter<"Categoria"> | $Enums.CategoriaTipo
  }

  export type PlatilloWhereInput = {
    AND?: PlatilloWhereInput | PlatilloWhereInput[]
    OR?: PlatilloWhereInput[]
    NOT?: PlatilloWhereInput | PlatilloWhereInput[]
    id?: IntFilter<"Platillo"> | number
    nombre?: StringFilter<"Platillo"> | string
    precio?: FloatFilter<"Platillo"> | number
    creadoEn?: DateTimeFilter<"Platillo"> | Date | string
    disponible?: BoolFilter<"Platillo"> | boolean
    imagenUrl?: StringNullableFilter<"Platillo"> | string | null
    categoriaId?: IntFilter<"Platillo"> | number
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    historialModificaciones?: HistorialModificacionListRelationFilter
  }

  export type PlatilloOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    creadoEn?: SortOrder
    disponible?: SortOrder
    imagenUrl?: SortOrderInput | SortOrder
    categoriaId?: SortOrder
    categoria?: CategoriaOrderByWithRelationInput
    historialModificaciones?: HistorialModificacionOrderByRelationAggregateInput
  }

  export type PlatilloWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: PlatilloWhereInput | PlatilloWhereInput[]
    OR?: PlatilloWhereInput[]
    NOT?: PlatilloWhereInput | PlatilloWhereInput[]
    precio?: FloatFilter<"Platillo"> | number
    creadoEn?: DateTimeFilter<"Platillo"> | Date | string
    disponible?: BoolFilter<"Platillo"> | boolean
    imagenUrl?: StringNullableFilter<"Platillo"> | string | null
    categoriaId?: IntFilter<"Platillo"> | number
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    historialModificaciones?: HistorialModificacionListRelationFilter
  }, "id" | "nombre">

  export type PlatilloOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    creadoEn?: SortOrder
    disponible?: SortOrder
    imagenUrl?: SortOrderInput | SortOrder
    categoriaId?: SortOrder
    _count?: PlatilloCountOrderByAggregateInput
    _avg?: PlatilloAvgOrderByAggregateInput
    _max?: PlatilloMaxOrderByAggregateInput
    _min?: PlatilloMinOrderByAggregateInput
    _sum?: PlatilloSumOrderByAggregateInput
  }

  export type PlatilloScalarWhereWithAggregatesInput = {
    AND?: PlatilloScalarWhereWithAggregatesInput | PlatilloScalarWhereWithAggregatesInput[]
    OR?: PlatilloScalarWhereWithAggregatesInput[]
    NOT?: PlatilloScalarWhereWithAggregatesInput | PlatilloScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Platillo"> | number
    nombre?: StringWithAggregatesFilter<"Platillo"> | string
    precio?: FloatWithAggregatesFilter<"Platillo"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"Platillo"> | Date | string
    disponible?: BoolWithAggregatesFilter<"Platillo"> | boolean
    imagenUrl?: StringNullableWithAggregatesFilter<"Platillo"> | string | null
    categoriaId?: IntWithAggregatesFilter<"Platillo"> | number
  }

  export type HistorialModificacionWhereInput = {
    AND?: HistorialModificacionWhereInput | HistorialModificacionWhereInput[]
    OR?: HistorialModificacionWhereInput[]
    NOT?: HistorialModificacionWhereInput | HistorialModificacionWhereInput[]
    id?: IntFilter<"HistorialModificacion"> | number
    campo?: StringFilter<"HistorialModificacion"> | string
    valorAnterior?: StringNullableFilter<"HistorialModificacion"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialModificacion"> | string | null
    fecha?: DateTimeFilter<"HistorialModificacion"> | Date | string
    accion?: StringFilter<"HistorialModificacion"> | string
    responsableId?: IntFilter<"HistorialModificacion"> | number
    usuarioId?: IntNullableFilter<"HistorialModificacion"> | number | null
    platilloId?: IntNullableFilter<"HistorialModificacion"> | number | null
    responsable?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    platillo?: XOR<PlatilloNullableScalarRelationFilter, PlatilloWhereInput> | null
  }

  export type HistorialModificacionOrderByWithRelationInput = {
    id?: SortOrder
    campo?: SortOrder
    valorAnterior?: SortOrderInput | SortOrder
    valorNuevo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    accion?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    platilloId?: SortOrderInput | SortOrder
    responsable?: UsuarioOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    platillo?: PlatilloOrderByWithRelationInput
  }

  export type HistorialModificacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialModificacionWhereInput | HistorialModificacionWhereInput[]
    OR?: HistorialModificacionWhereInput[]
    NOT?: HistorialModificacionWhereInput | HistorialModificacionWhereInput[]
    campo?: StringFilter<"HistorialModificacion"> | string
    valorAnterior?: StringNullableFilter<"HistorialModificacion"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialModificacion"> | string | null
    fecha?: DateTimeFilter<"HistorialModificacion"> | Date | string
    accion?: StringFilter<"HistorialModificacion"> | string
    responsableId?: IntFilter<"HistorialModificacion"> | number
    usuarioId?: IntNullableFilter<"HistorialModificacion"> | number | null
    platilloId?: IntNullableFilter<"HistorialModificacion"> | number | null
    responsable?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    platillo?: XOR<PlatilloNullableScalarRelationFilter, PlatilloWhereInput> | null
  }, "id">

  export type HistorialModificacionOrderByWithAggregationInput = {
    id?: SortOrder
    campo?: SortOrder
    valorAnterior?: SortOrderInput | SortOrder
    valorNuevo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    accion?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    platilloId?: SortOrderInput | SortOrder
    _count?: HistorialModificacionCountOrderByAggregateInput
    _avg?: HistorialModificacionAvgOrderByAggregateInput
    _max?: HistorialModificacionMaxOrderByAggregateInput
    _min?: HistorialModificacionMinOrderByAggregateInput
    _sum?: HistorialModificacionSumOrderByAggregateInput
  }

  export type HistorialModificacionScalarWhereWithAggregatesInput = {
    AND?: HistorialModificacionScalarWhereWithAggregatesInput | HistorialModificacionScalarWhereWithAggregatesInput[]
    OR?: HistorialModificacionScalarWhereWithAggregatesInput[]
    NOT?: HistorialModificacionScalarWhereWithAggregatesInput | HistorialModificacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialModificacion"> | number
    campo?: StringWithAggregatesFilter<"HistorialModificacion"> | string
    valorAnterior?: StringNullableWithAggregatesFilter<"HistorialModificacion"> | string | null
    valorNuevo?: StringNullableWithAggregatesFilter<"HistorialModificacion"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"HistorialModificacion"> | Date | string
    accion?: StringWithAggregatesFilter<"HistorialModificacion"> | string
    responsableId?: IntWithAggregatesFilter<"HistorialModificacion"> | number
    usuarioId?: IntNullableWithAggregatesFilter<"HistorialModificacion"> | number | null
    platilloId?: IntNullableWithAggregatesFilter<"HistorialModificacion"> | number | null
  }

  export type MesaWhereInput = {
    AND?: MesaWhereInput | MesaWhereInput[]
    OR?: MesaWhereInput[]
    NOT?: MesaWhereInput | MesaWhereInput[]
    id?: IntFilter<"Mesa"> | number
    numero?: IntFilter<"Mesa"> | number
    capacidad?: IntFilter<"Mesa"> | number
    estado?: EnumMesaEstadoFilter<"Mesa"> | $Enums.MesaEstado
    reservadaPor?: StringNullableFilter<"Mesa"> | string | null
    activa?: BoolFilter<"Mesa"> | boolean
    creadoEn?: DateTimeFilter<"Mesa"> | Date | string
    actualizadoEn?: DateTimeFilter<"Mesa"> | Date | string
    reservas?: ReservaListRelationFilter
  }

  export type MesaOrderByWithRelationInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
    estado?: SortOrder
    reservadaPor?: SortOrderInput | SortOrder
    activa?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    reservas?: ReservaOrderByRelationAggregateInput
  }

  export type MesaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numero?: number
    AND?: MesaWhereInput | MesaWhereInput[]
    OR?: MesaWhereInput[]
    NOT?: MesaWhereInput | MesaWhereInput[]
    capacidad?: IntFilter<"Mesa"> | number
    estado?: EnumMesaEstadoFilter<"Mesa"> | $Enums.MesaEstado
    reservadaPor?: StringNullableFilter<"Mesa"> | string | null
    activa?: BoolFilter<"Mesa"> | boolean
    creadoEn?: DateTimeFilter<"Mesa"> | Date | string
    actualizadoEn?: DateTimeFilter<"Mesa"> | Date | string
    reservas?: ReservaListRelationFilter
  }, "id" | "numero">

  export type MesaOrderByWithAggregationInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
    estado?: SortOrder
    reservadaPor?: SortOrderInput | SortOrder
    activa?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: MesaCountOrderByAggregateInput
    _avg?: MesaAvgOrderByAggregateInput
    _max?: MesaMaxOrderByAggregateInput
    _min?: MesaMinOrderByAggregateInput
    _sum?: MesaSumOrderByAggregateInput
  }

  export type MesaScalarWhereWithAggregatesInput = {
    AND?: MesaScalarWhereWithAggregatesInput | MesaScalarWhereWithAggregatesInput[]
    OR?: MesaScalarWhereWithAggregatesInput[]
    NOT?: MesaScalarWhereWithAggregatesInput | MesaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mesa"> | number
    numero?: IntWithAggregatesFilter<"Mesa"> | number
    capacidad?: IntWithAggregatesFilter<"Mesa"> | number
    estado?: EnumMesaEstadoWithAggregatesFilter<"Mesa"> | $Enums.MesaEstado
    reservadaPor?: StringNullableWithAggregatesFilter<"Mesa"> | string | null
    activa?: BoolWithAggregatesFilter<"Mesa"> | boolean
    creadoEn?: DateTimeWithAggregatesFilter<"Mesa"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Mesa"> | Date | string
  }

  export type ReservaWhereInput = {
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    id?: IntFilter<"Reserva"> | number
    mesaId?: IntFilter<"Reserva"> | number
    fechaHora?: DateTimeFilter<"Reserva"> | Date | string
    hastaHora?: DateTimeFilter<"Reserva"> | Date | string
    nombre?: StringFilter<"Reserva"> | string
    telefono?: StringFilter<"Reserva"> | string
    email?: StringFilter<"Reserva"> | string
    nota?: StringNullableFilter<"Reserva"> | string | null
    monto?: DecimalFilter<"Reserva"> | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFilter<"Reserva"> | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFilter<"Reserva"> | $Enums.PagoEstado
    pagoMetodo?: StringFilter<"Reserva"> | string
    pagoReferencia?: StringNullableFilter<"Reserva"> | string | null
    pagadoEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    canceladaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundEstado?: EnumRefundEstadoFilter<"Reserva"> | $Enums.RefundEstado
    refundMonto?: DecimalNullableFilter<"Reserva"> | Decimal | DecimalJsLike | number | string | null
    refundEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundMotivo?: StringNullableFilter<"Reserva"> | string | null
    verificadaPorMeseroId?: IntNullableFilter<"Reserva"> | number | null
    verificadaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    aplicadoEnOrdenId?: IntNullableFilter<"Reserva"> | number | null
    aplicadoEnPagoId?: IntNullableFilter<"Reserva"> | number | null
    creadoEn?: DateTimeFilter<"Reserva"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reserva"> | Date | string
    mesa?: XOR<MesaScalarRelationFilter, MesaWhereInput>
  }

  export type ReservaOrderByWithRelationInput = {
    id?: SortOrder
    mesaId?: SortOrder
    fechaHora?: SortOrder
    hastaHora?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    nota?: SortOrderInput | SortOrder
    monto?: SortOrder
    estado?: SortOrder
    pagoEstado?: SortOrder
    pagoMetodo?: SortOrder
    pagoReferencia?: SortOrderInput | SortOrder
    pagadoEn?: SortOrderInput | SortOrder
    canceladaEn?: SortOrderInput | SortOrder
    refundEstado?: SortOrder
    refundMonto?: SortOrderInput | SortOrder
    refundEn?: SortOrderInput | SortOrder
    refundMotivo?: SortOrderInput | SortOrder
    verificadaPorMeseroId?: SortOrderInput | SortOrder
    verificadaEn?: SortOrderInput | SortOrder
    aplicadoEnOrdenId?: SortOrderInput | SortOrder
    aplicadoEnPagoId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    mesa?: MesaOrderByWithRelationInput
  }

  export type ReservaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    mesaId?: IntFilter<"Reserva"> | number
    fechaHora?: DateTimeFilter<"Reserva"> | Date | string
    hastaHora?: DateTimeFilter<"Reserva"> | Date | string
    nombre?: StringFilter<"Reserva"> | string
    telefono?: StringFilter<"Reserva"> | string
    email?: StringFilter<"Reserva"> | string
    nota?: StringNullableFilter<"Reserva"> | string | null
    monto?: DecimalFilter<"Reserva"> | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFilter<"Reserva"> | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFilter<"Reserva"> | $Enums.PagoEstado
    pagoMetodo?: StringFilter<"Reserva"> | string
    pagoReferencia?: StringNullableFilter<"Reserva"> | string | null
    pagadoEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    canceladaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundEstado?: EnumRefundEstadoFilter<"Reserva"> | $Enums.RefundEstado
    refundMonto?: DecimalNullableFilter<"Reserva"> | Decimal | DecimalJsLike | number | string | null
    refundEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundMotivo?: StringNullableFilter<"Reserva"> | string | null
    verificadaPorMeseroId?: IntNullableFilter<"Reserva"> | number | null
    verificadaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    aplicadoEnOrdenId?: IntNullableFilter<"Reserva"> | number | null
    aplicadoEnPagoId?: IntNullableFilter<"Reserva"> | number | null
    creadoEn?: DateTimeFilter<"Reserva"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reserva"> | Date | string
    mesa?: XOR<MesaScalarRelationFilter, MesaWhereInput>
  }, "id">

  export type ReservaOrderByWithAggregationInput = {
    id?: SortOrder
    mesaId?: SortOrder
    fechaHora?: SortOrder
    hastaHora?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    nota?: SortOrderInput | SortOrder
    monto?: SortOrder
    estado?: SortOrder
    pagoEstado?: SortOrder
    pagoMetodo?: SortOrder
    pagoReferencia?: SortOrderInput | SortOrder
    pagadoEn?: SortOrderInput | SortOrder
    canceladaEn?: SortOrderInput | SortOrder
    refundEstado?: SortOrder
    refundMonto?: SortOrderInput | SortOrder
    refundEn?: SortOrderInput | SortOrder
    refundMotivo?: SortOrderInput | SortOrder
    verificadaPorMeseroId?: SortOrderInput | SortOrder
    verificadaEn?: SortOrderInput | SortOrder
    aplicadoEnOrdenId?: SortOrderInput | SortOrder
    aplicadoEnPagoId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: ReservaCountOrderByAggregateInput
    _avg?: ReservaAvgOrderByAggregateInput
    _max?: ReservaMaxOrderByAggregateInput
    _min?: ReservaMinOrderByAggregateInput
    _sum?: ReservaSumOrderByAggregateInput
  }

  export type ReservaScalarWhereWithAggregatesInput = {
    AND?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    OR?: ReservaScalarWhereWithAggregatesInput[]
    NOT?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reserva"> | number
    mesaId?: IntWithAggregatesFilter<"Reserva"> | number
    fechaHora?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    hastaHora?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    nombre?: StringWithAggregatesFilter<"Reserva"> | string
    telefono?: StringWithAggregatesFilter<"Reserva"> | string
    email?: StringWithAggregatesFilter<"Reserva"> | string
    nota?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    monto?: DecimalWithAggregatesFilter<"Reserva"> | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoWithAggregatesFilter<"Reserva"> | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoWithAggregatesFilter<"Reserva"> | $Enums.PagoEstado
    pagoMetodo?: StringWithAggregatesFilter<"Reserva"> | string
    pagoReferencia?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    pagadoEn?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    canceladaEn?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    refundEstado?: EnumRefundEstadoWithAggregatesFilter<"Reserva"> | $Enums.RefundEstado
    refundMonto?: DecimalNullableWithAggregatesFilter<"Reserva"> | Decimal | DecimalJsLike | number | string | null
    refundEn?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    refundMotivo?: StringNullableWithAggregatesFilter<"Reserva"> | string | null
    verificadaPorMeseroId?: IntNullableWithAggregatesFilter<"Reserva"> | number | null
    verificadaEn?: DateTimeNullableWithAggregatesFilter<"Reserva"> | Date | string | null
    aplicadoEnOrdenId?: IntNullableWithAggregatesFilter<"Reserva"> | number | null
    aplicadoEnPagoId?: IntNullableWithAggregatesFilter<"Reserva"> | number | null
    creadoEn?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
  }

  export type OrdenWhereInput = {
    AND?: OrdenWhereInput | OrdenWhereInput[]
    OR?: OrdenWhereInput[]
    NOT?: OrdenWhereInput | OrdenWhereInput[]
    id?: IntFilter<"Orden"> | number
    codigo?: StringFilter<"Orden"> | string
    mesa?: IntFilter<"Orden"> | number
    fecha?: DateTimeFilter<"Orden"> | Date | string
    finishedAt?: DateTimeNullableFilter<"Orden"> | Date | string | null
    durationSec?: IntNullableFilter<"Orden"> | number | null
    meseroId?: IntNullableFilter<"Orden"> | number | null
    estado?: EnumOrdenEstadoFilter<"Orden"> | $Enums.OrdenEstado
    totalPagado?: FloatNullableFilter<"Orden"> | number | null
    anticipo?: FloatFilter<"Orden"> | number
    mesero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    items?: OrdenItemListRelationFilter
    tickets?: TicketVentaListRelationFilter
    pedidoCliente?: XOR<PedidoClienteNullableScalarRelationFilter, PedidoClienteWhereInput> | null
    notifs?: MeseroNotifListRelationFilter
  }

  export type OrdenOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    mesa?: SortOrder
    fecha?: SortOrder
    finishedAt?: SortOrderInput | SortOrder
    durationSec?: SortOrderInput | SortOrder
    meseroId?: SortOrderInput | SortOrder
    estado?: SortOrder
    totalPagado?: SortOrderInput | SortOrder
    anticipo?: SortOrder
    mesero?: UsuarioOrderByWithRelationInput
    items?: OrdenItemOrderByRelationAggregateInput
    tickets?: TicketVentaOrderByRelationAggregateInput
    pedidoCliente?: PedidoClienteOrderByWithRelationInput
    notifs?: MeseroNotifOrderByRelationAggregateInput
  }

  export type OrdenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: string
    AND?: OrdenWhereInput | OrdenWhereInput[]
    OR?: OrdenWhereInput[]
    NOT?: OrdenWhereInput | OrdenWhereInput[]
    mesa?: IntFilter<"Orden"> | number
    fecha?: DateTimeFilter<"Orden"> | Date | string
    finishedAt?: DateTimeNullableFilter<"Orden"> | Date | string | null
    durationSec?: IntNullableFilter<"Orden"> | number | null
    meseroId?: IntNullableFilter<"Orden"> | number | null
    estado?: EnumOrdenEstadoFilter<"Orden"> | $Enums.OrdenEstado
    totalPagado?: FloatNullableFilter<"Orden"> | number | null
    anticipo?: FloatFilter<"Orden"> | number
    mesero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    items?: OrdenItemListRelationFilter
    tickets?: TicketVentaListRelationFilter
    pedidoCliente?: XOR<PedidoClienteNullableScalarRelationFilter, PedidoClienteWhereInput> | null
    notifs?: MeseroNotifListRelationFilter
  }, "id" | "codigo">

  export type OrdenOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    mesa?: SortOrder
    fecha?: SortOrder
    finishedAt?: SortOrderInput | SortOrder
    durationSec?: SortOrderInput | SortOrder
    meseroId?: SortOrderInput | SortOrder
    estado?: SortOrder
    totalPagado?: SortOrderInput | SortOrder
    anticipo?: SortOrder
    _count?: OrdenCountOrderByAggregateInput
    _avg?: OrdenAvgOrderByAggregateInput
    _max?: OrdenMaxOrderByAggregateInput
    _min?: OrdenMinOrderByAggregateInput
    _sum?: OrdenSumOrderByAggregateInput
  }

  export type OrdenScalarWhereWithAggregatesInput = {
    AND?: OrdenScalarWhereWithAggregatesInput | OrdenScalarWhereWithAggregatesInput[]
    OR?: OrdenScalarWhereWithAggregatesInput[]
    NOT?: OrdenScalarWhereWithAggregatesInput | OrdenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Orden"> | number
    codigo?: StringWithAggregatesFilter<"Orden"> | string
    mesa?: IntWithAggregatesFilter<"Orden"> | number
    fecha?: DateTimeWithAggregatesFilter<"Orden"> | Date | string
    finishedAt?: DateTimeNullableWithAggregatesFilter<"Orden"> | Date | string | null
    durationSec?: IntNullableWithAggregatesFilter<"Orden"> | number | null
    meseroId?: IntNullableWithAggregatesFilter<"Orden"> | number | null
    estado?: EnumOrdenEstadoWithAggregatesFilter<"Orden"> | $Enums.OrdenEstado
    totalPagado?: FloatNullableWithAggregatesFilter<"Orden"> | number | null
    anticipo?: FloatWithAggregatesFilter<"Orden"> | number
  }

  export type OrdenItemWhereInput = {
    AND?: OrdenItemWhereInput | OrdenItemWhereInput[]
    OR?: OrdenItemWhereInput[]
    NOT?: OrdenItemWhereInput | OrdenItemWhereInput[]
    id?: IntFilter<"OrdenItem"> | number
    nombre?: StringFilter<"OrdenItem"> | string
    precio?: FloatFilter<"OrdenItem"> | number
    nota?: StringNullableFilter<"OrdenItem"> | string | null
    tipo?: StringFilter<"OrdenItem"> | string
    estado?: StringFilter<"OrdenItem"> | string
    qty?: IntFilter<"OrdenItem"> | number
    subtotal?: FloatNullableFilter<"OrdenItem"> | number | null
    creadoEn?: DateTimeFilter<"OrdenItem"> | Date | string
    asignadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    preparandoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    finalizadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    prioridad?: IntNullableFilter<"OrdenItem"> | number | null
    pagado?: BoolFilter<"OrdenItem"> | boolean
    ordenId?: IntFilter<"OrdenItem"> | number
    chefId?: IntNullableFilter<"OrdenItem"> | number | null
    bartenderId?: IntNullableFilter<"OrdenItem"> | number | null
    ticketVentaId?: IntNullableFilter<"OrdenItem"> | number | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    chef?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    bartender?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    ticket?: XOR<TicketVentaNullableScalarRelationFilter, TicketVentaWhereInput> | null
  }

  export type OrdenItemOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    nota?: SortOrderInput | SortOrder
    tipo?: SortOrder
    estado?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    asignadoEn?: SortOrderInput | SortOrder
    preparandoEn?: SortOrderInput | SortOrder
    finalizadoEn?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    pagado?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrderInput | SortOrder
    bartenderId?: SortOrderInput | SortOrder
    ticketVentaId?: SortOrderInput | SortOrder
    orden?: OrdenOrderByWithRelationInput
    chef?: UsuarioOrderByWithRelationInput
    bartender?: UsuarioOrderByWithRelationInput
    ticket?: TicketVentaOrderByWithRelationInput
  }

  export type OrdenItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrdenItemWhereInput | OrdenItemWhereInput[]
    OR?: OrdenItemWhereInput[]
    NOT?: OrdenItemWhereInput | OrdenItemWhereInput[]
    nombre?: StringFilter<"OrdenItem"> | string
    precio?: FloatFilter<"OrdenItem"> | number
    nota?: StringNullableFilter<"OrdenItem"> | string | null
    tipo?: StringFilter<"OrdenItem"> | string
    estado?: StringFilter<"OrdenItem"> | string
    qty?: IntFilter<"OrdenItem"> | number
    subtotal?: FloatNullableFilter<"OrdenItem"> | number | null
    creadoEn?: DateTimeFilter<"OrdenItem"> | Date | string
    asignadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    preparandoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    finalizadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    prioridad?: IntNullableFilter<"OrdenItem"> | number | null
    pagado?: BoolFilter<"OrdenItem"> | boolean
    ordenId?: IntFilter<"OrdenItem"> | number
    chefId?: IntNullableFilter<"OrdenItem"> | number | null
    bartenderId?: IntNullableFilter<"OrdenItem"> | number | null
    ticketVentaId?: IntNullableFilter<"OrdenItem"> | number | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    chef?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    bartender?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    ticket?: XOR<TicketVentaNullableScalarRelationFilter, TicketVentaWhereInput> | null
  }, "id">

  export type OrdenItemOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    nota?: SortOrderInput | SortOrder
    tipo?: SortOrder
    estado?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    asignadoEn?: SortOrderInput | SortOrder
    preparandoEn?: SortOrderInput | SortOrder
    finalizadoEn?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    pagado?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrderInput | SortOrder
    bartenderId?: SortOrderInput | SortOrder
    ticketVentaId?: SortOrderInput | SortOrder
    _count?: OrdenItemCountOrderByAggregateInput
    _avg?: OrdenItemAvgOrderByAggregateInput
    _max?: OrdenItemMaxOrderByAggregateInput
    _min?: OrdenItemMinOrderByAggregateInput
    _sum?: OrdenItemSumOrderByAggregateInput
  }

  export type OrdenItemScalarWhereWithAggregatesInput = {
    AND?: OrdenItemScalarWhereWithAggregatesInput | OrdenItemScalarWhereWithAggregatesInput[]
    OR?: OrdenItemScalarWhereWithAggregatesInput[]
    NOT?: OrdenItemScalarWhereWithAggregatesInput | OrdenItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrdenItem"> | number
    nombre?: StringWithAggregatesFilter<"OrdenItem"> | string
    precio?: FloatWithAggregatesFilter<"OrdenItem"> | number
    nota?: StringNullableWithAggregatesFilter<"OrdenItem"> | string | null
    tipo?: StringWithAggregatesFilter<"OrdenItem"> | string
    estado?: StringWithAggregatesFilter<"OrdenItem"> | string
    qty?: IntWithAggregatesFilter<"OrdenItem"> | number
    subtotal?: FloatNullableWithAggregatesFilter<"OrdenItem"> | number | null
    creadoEn?: DateTimeWithAggregatesFilter<"OrdenItem"> | Date | string
    asignadoEn?: DateTimeNullableWithAggregatesFilter<"OrdenItem"> | Date | string | null
    preparandoEn?: DateTimeNullableWithAggregatesFilter<"OrdenItem"> | Date | string | null
    finalizadoEn?: DateTimeNullableWithAggregatesFilter<"OrdenItem"> | Date | string | null
    prioridad?: IntNullableWithAggregatesFilter<"OrdenItem"> | number | null
    pagado?: BoolWithAggregatesFilter<"OrdenItem"> | boolean
    ordenId?: IntWithAggregatesFilter<"OrdenItem"> | number
    chefId?: IntNullableWithAggregatesFilter<"OrdenItem"> | number | null
    bartenderId?: IntNullableWithAggregatesFilter<"OrdenItem"> | number | null
    ticketVentaId?: IntNullableWithAggregatesFilter<"OrdenItem"> | number | null
  }

  export type CocinaChefWhereInput = {
    AND?: CocinaChefWhereInput | CocinaChefWhereInput[]
    OR?: CocinaChefWhereInput[]
    NOT?: CocinaChefWhereInput | CocinaChefWhereInput[]
    id?: IntFilter<"CocinaChef"> | number
    chefId?: IntFilter<"CocinaChef"> | number
    activo?: BoolFilter<"CocinaChef"> | boolean
    lastSeen?: DateTimeFilter<"CocinaChef"> | Date | string
    chef?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type CocinaChefOrderByWithRelationInput = {
    id?: SortOrder
    chefId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
    chef?: UsuarioOrderByWithRelationInput
  }

  export type CocinaChefWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    chefId?: number
    AND?: CocinaChefWhereInput | CocinaChefWhereInput[]
    OR?: CocinaChefWhereInput[]
    NOT?: CocinaChefWhereInput | CocinaChefWhereInput[]
    activo?: BoolFilter<"CocinaChef"> | boolean
    lastSeen?: DateTimeFilter<"CocinaChef"> | Date | string
    chef?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id" | "chefId">

  export type CocinaChefOrderByWithAggregationInput = {
    id?: SortOrder
    chefId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
    _count?: CocinaChefCountOrderByAggregateInput
    _avg?: CocinaChefAvgOrderByAggregateInput
    _max?: CocinaChefMaxOrderByAggregateInput
    _min?: CocinaChefMinOrderByAggregateInput
    _sum?: CocinaChefSumOrderByAggregateInput
  }

  export type CocinaChefScalarWhereWithAggregatesInput = {
    AND?: CocinaChefScalarWhereWithAggregatesInput | CocinaChefScalarWhereWithAggregatesInput[]
    OR?: CocinaChefScalarWhereWithAggregatesInput[]
    NOT?: CocinaChefScalarWhereWithAggregatesInput | CocinaChefScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CocinaChef"> | number
    chefId?: IntWithAggregatesFilter<"CocinaChef"> | number
    activo?: BoolWithAggregatesFilter<"CocinaChef"> | boolean
    lastSeen?: DateTimeWithAggregatesFilter<"CocinaChef"> | Date | string
  }

  export type BarraBartenderWhereInput = {
    AND?: BarraBartenderWhereInput | BarraBartenderWhereInput[]
    OR?: BarraBartenderWhereInput[]
    NOT?: BarraBartenderWhereInput | BarraBartenderWhereInput[]
    id?: IntFilter<"BarraBartender"> | number
    bartenderId?: IntFilter<"BarraBartender"> | number
    activo?: BoolFilter<"BarraBartender"> | boolean
    lastSeen?: DateTimeFilter<"BarraBartender"> | Date | string
    bartender?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type BarraBartenderOrderByWithRelationInput = {
    id?: SortOrder
    bartenderId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
    bartender?: UsuarioOrderByWithRelationInput
  }

  export type BarraBartenderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bartenderId?: number
    AND?: BarraBartenderWhereInput | BarraBartenderWhereInput[]
    OR?: BarraBartenderWhereInput[]
    NOT?: BarraBartenderWhereInput | BarraBartenderWhereInput[]
    activo?: BoolFilter<"BarraBartender"> | boolean
    lastSeen?: DateTimeFilter<"BarraBartender"> | Date | string
    bartender?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id" | "bartenderId">

  export type BarraBartenderOrderByWithAggregationInput = {
    id?: SortOrder
    bartenderId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
    _count?: BarraBartenderCountOrderByAggregateInput
    _avg?: BarraBartenderAvgOrderByAggregateInput
    _max?: BarraBartenderMaxOrderByAggregateInput
    _min?: BarraBartenderMinOrderByAggregateInput
    _sum?: BarraBartenderSumOrderByAggregateInput
  }

  export type BarraBartenderScalarWhereWithAggregatesInput = {
    AND?: BarraBartenderScalarWhereWithAggregatesInput | BarraBartenderScalarWhereWithAggregatesInput[]
    OR?: BarraBartenderScalarWhereWithAggregatesInput[]
    NOT?: BarraBartenderScalarWhereWithAggregatesInput | BarraBartenderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"BarraBartender"> | number
    bartenderId?: IntWithAggregatesFilter<"BarraBartender"> | number
    activo?: BoolWithAggregatesFilter<"BarraBartender"> | boolean
    lastSeen?: DateTimeWithAggregatesFilter<"BarraBartender"> | Date | string
  }

  export type TicketVentaWhereInput = {
    AND?: TicketVentaWhereInput | TicketVentaWhereInput[]
    OR?: TicketVentaWhereInput[]
    NOT?: TicketVentaWhereInput | TicketVentaWhereInput[]
    id?: IntFilter<"TicketVenta"> | number
    ordenId?: IntFilter<"TicketVenta"> | number
    cajeroId?: IntNullableFilter<"TicketVenta"> | number | null
    fechaPago?: DateTimeFilter<"TicketVenta"> | Date | string
    metodoPago?: EnumMetodoPagoFilter<"TicketVenta"> | $Enums.MetodoPago
    subtotal?: FloatFilter<"TicketVenta"> | number
    impuestos?: FloatFilter<"TicketVenta"> | number
    descuentos?: FloatFilter<"TicketVenta"> | number
    totalAPagar?: FloatFilter<"TicketVenta"> | number
    montoRecibido?: FloatFilter<"TicketVenta"> | number
    cambio?: FloatFilter<"TicketVenta"> | number
    anticipoAplicado?: FloatFilter<"TicketVenta"> | number
    propina?: FloatFilter<"TicketVenta"> | number
    serie?: StringNullableFilter<"TicketVenta"> | string | null
    numero?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNombre?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNit?: StringNullableFilter<"TicketVenta"> | string | null
    snapshot?: JsonNullableFilter<"TicketVenta">
    estado?: EnumComprobanteEstadoFilter<"TicketVenta"> | $Enums.ComprobanteEstado
    anuladoEn?: DateTimeNullableFilter<"TicketVenta"> | Date | string | null
    anuladoPorId?: IntNullableFilter<"TicketVenta"> | number | null
    anuladoMotivo?: StringNullableFilter<"TicketVenta"> | string | null
    posCorrelativo?: StringNullableFilter<"TicketVenta"> | string | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    cajero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    anuladoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    items?: OrdenItemListRelationFilter
  }

  export type TicketVentaOrderByWithRelationInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrderInput | SortOrder
    fechaPago?: SortOrder
    metodoPago?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    serie?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    clienteNombre?: SortOrderInput | SortOrder
    clienteNit?: SortOrderInput | SortOrder
    snapshot?: SortOrderInput | SortOrder
    estado?: SortOrder
    anuladoEn?: SortOrderInput | SortOrder
    anuladoPorId?: SortOrderInput | SortOrder
    anuladoMotivo?: SortOrderInput | SortOrder
    posCorrelativo?: SortOrderInput | SortOrder
    orden?: OrdenOrderByWithRelationInput
    cajero?: UsuarioOrderByWithRelationInput
    anuladoPor?: UsuarioOrderByWithRelationInput
    items?: OrdenItemOrderByRelationAggregateInput
  }

  export type TicketVentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketVentaWhereInput | TicketVentaWhereInput[]
    OR?: TicketVentaWhereInput[]
    NOT?: TicketVentaWhereInput | TicketVentaWhereInput[]
    ordenId?: IntFilter<"TicketVenta"> | number
    cajeroId?: IntNullableFilter<"TicketVenta"> | number | null
    fechaPago?: DateTimeFilter<"TicketVenta"> | Date | string
    metodoPago?: EnumMetodoPagoFilter<"TicketVenta"> | $Enums.MetodoPago
    subtotal?: FloatFilter<"TicketVenta"> | number
    impuestos?: FloatFilter<"TicketVenta"> | number
    descuentos?: FloatFilter<"TicketVenta"> | number
    totalAPagar?: FloatFilter<"TicketVenta"> | number
    montoRecibido?: FloatFilter<"TicketVenta"> | number
    cambio?: FloatFilter<"TicketVenta"> | number
    anticipoAplicado?: FloatFilter<"TicketVenta"> | number
    propina?: FloatFilter<"TicketVenta"> | number
    serie?: StringNullableFilter<"TicketVenta"> | string | null
    numero?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNombre?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNit?: StringNullableFilter<"TicketVenta"> | string | null
    snapshot?: JsonNullableFilter<"TicketVenta">
    estado?: EnumComprobanteEstadoFilter<"TicketVenta"> | $Enums.ComprobanteEstado
    anuladoEn?: DateTimeNullableFilter<"TicketVenta"> | Date | string | null
    anuladoPorId?: IntNullableFilter<"TicketVenta"> | number | null
    anuladoMotivo?: StringNullableFilter<"TicketVenta"> | string | null
    posCorrelativo?: StringNullableFilter<"TicketVenta"> | string | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    cajero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    anuladoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    items?: OrdenItemListRelationFilter
  }, "id">

  export type TicketVentaOrderByWithAggregationInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrderInput | SortOrder
    fechaPago?: SortOrder
    metodoPago?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    serie?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    clienteNombre?: SortOrderInput | SortOrder
    clienteNit?: SortOrderInput | SortOrder
    snapshot?: SortOrderInput | SortOrder
    estado?: SortOrder
    anuladoEn?: SortOrderInput | SortOrder
    anuladoPorId?: SortOrderInput | SortOrder
    anuladoMotivo?: SortOrderInput | SortOrder
    posCorrelativo?: SortOrderInput | SortOrder
    _count?: TicketVentaCountOrderByAggregateInput
    _avg?: TicketVentaAvgOrderByAggregateInput
    _max?: TicketVentaMaxOrderByAggregateInput
    _min?: TicketVentaMinOrderByAggregateInput
    _sum?: TicketVentaSumOrderByAggregateInput
  }

  export type TicketVentaScalarWhereWithAggregatesInput = {
    AND?: TicketVentaScalarWhereWithAggregatesInput | TicketVentaScalarWhereWithAggregatesInput[]
    OR?: TicketVentaScalarWhereWithAggregatesInput[]
    NOT?: TicketVentaScalarWhereWithAggregatesInput | TicketVentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketVenta"> | number
    ordenId?: IntWithAggregatesFilter<"TicketVenta"> | number
    cajeroId?: IntNullableWithAggregatesFilter<"TicketVenta"> | number | null
    fechaPago?: DateTimeWithAggregatesFilter<"TicketVenta"> | Date | string
    metodoPago?: EnumMetodoPagoWithAggregatesFilter<"TicketVenta"> | $Enums.MetodoPago
    subtotal?: FloatWithAggregatesFilter<"TicketVenta"> | number
    impuestos?: FloatWithAggregatesFilter<"TicketVenta"> | number
    descuentos?: FloatWithAggregatesFilter<"TicketVenta"> | number
    totalAPagar?: FloatWithAggregatesFilter<"TicketVenta"> | number
    montoRecibido?: FloatWithAggregatesFilter<"TicketVenta"> | number
    cambio?: FloatWithAggregatesFilter<"TicketVenta"> | number
    anticipoAplicado?: FloatWithAggregatesFilter<"TicketVenta"> | number
    propina?: FloatWithAggregatesFilter<"TicketVenta"> | number
    serie?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
    numero?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
    clienteNombre?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
    clienteNit?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
    snapshot?: JsonNullableWithAggregatesFilter<"TicketVenta">
    estado?: EnumComprobanteEstadoWithAggregatesFilter<"TicketVenta"> | $Enums.ComprobanteEstado
    anuladoEn?: DateTimeNullableWithAggregatesFilter<"TicketVenta"> | Date | string | null
    anuladoPorId?: IntNullableWithAggregatesFilter<"TicketVenta"> | number | null
    anuladoMotivo?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
    posCorrelativo?: StringNullableWithAggregatesFilter<"TicketVenta"> | string | null
  }

  export type EgresoCajaWhereInput = {
    AND?: EgresoCajaWhereInput | EgresoCajaWhereInput[]
    OR?: EgresoCajaWhereInput[]
    NOT?: EgresoCajaWhereInput | EgresoCajaWhereInput[]
    id?: IntFilter<"EgresoCaja"> | number
    creadoEn?: DateTimeFilter<"EgresoCaja"> | Date | string
    estado?: EnumEgresoEstadoFilter<"EgresoCaja"> | $Enums.EgresoEstado
    cajeroId?: IntFilter<"EgresoCaja"> | number
    monto?: FloatFilter<"EgresoCaja"> | number
    motivo?: StringFilter<"EgresoCaja"> | string
    autorizadoPorId?: IntNullableFilter<"EgresoCaja"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"EgresoCaja"> | Date | string | null
    observacion?: StringNullableFilter<"EgresoCaja"> | string | null
    cajero?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    autorizadoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type EgresoCajaOrderByWithRelationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    motivo?: SortOrder
    autorizadoPorId?: SortOrderInput | SortOrder
    autorizadoEn?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    cajero?: UsuarioOrderByWithRelationInput
    autorizadoPor?: UsuarioOrderByWithRelationInput
  }

  export type EgresoCajaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EgresoCajaWhereInput | EgresoCajaWhereInput[]
    OR?: EgresoCajaWhereInput[]
    NOT?: EgresoCajaWhereInput | EgresoCajaWhereInput[]
    creadoEn?: DateTimeFilter<"EgresoCaja"> | Date | string
    estado?: EnumEgresoEstadoFilter<"EgresoCaja"> | $Enums.EgresoEstado
    cajeroId?: IntFilter<"EgresoCaja"> | number
    monto?: FloatFilter<"EgresoCaja"> | number
    motivo?: StringFilter<"EgresoCaja"> | string
    autorizadoPorId?: IntNullableFilter<"EgresoCaja"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"EgresoCaja"> | Date | string | null
    observacion?: StringNullableFilter<"EgresoCaja"> | string | null
    cajero?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    autorizadoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type EgresoCajaOrderByWithAggregationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    motivo?: SortOrder
    autorizadoPorId?: SortOrderInput | SortOrder
    autorizadoEn?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    _count?: EgresoCajaCountOrderByAggregateInput
    _avg?: EgresoCajaAvgOrderByAggregateInput
    _max?: EgresoCajaMaxOrderByAggregateInput
    _min?: EgresoCajaMinOrderByAggregateInput
    _sum?: EgresoCajaSumOrderByAggregateInput
  }

  export type EgresoCajaScalarWhereWithAggregatesInput = {
    AND?: EgresoCajaScalarWhereWithAggregatesInput | EgresoCajaScalarWhereWithAggregatesInput[]
    OR?: EgresoCajaScalarWhereWithAggregatesInput[]
    NOT?: EgresoCajaScalarWhereWithAggregatesInput | EgresoCajaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EgresoCaja"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"EgresoCaja"> | Date | string
    estado?: EnumEgresoEstadoWithAggregatesFilter<"EgresoCaja"> | $Enums.EgresoEstado
    cajeroId?: IntWithAggregatesFilter<"EgresoCaja"> | number
    monto?: FloatWithAggregatesFilter<"EgresoCaja"> | number
    motivo?: StringWithAggregatesFilter<"EgresoCaja"> | string
    autorizadoPorId?: IntNullableWithAggregatesFilter<"EgresoCaja"> | number | null
    autorizadoEn?: DateTimeNullableWithAggregatesFilter<"EgresoCaja"> | Date | string | null
    observacion?: StringNullableWithAggregatesFilter<"EgresoCaja"> | string | null
  }

  export type PedidoClienteWhereInput = {
    AND?: PedidoClienteWhereInput | PedidoClienteWhereInput[]
    OR?: PedidoClienteWhereInput[]
    NOT?: PedidoClienteWhereInput | PedidoClienteWhereInput[]
    id?: IntFilter<"PedidoCliente"> | number
    codigo?: StringFilter<"PedidoCliente"> | string
    clienteEmail?: StringFilter<"PedidoCliente"> | string
    creadoEn?: DateTimeFilter<"PedidoCliente"> | Date | string
    estado?: StringFilter<"PedidoCliente"> | string
    repartidorId?: IntNullableFilter<"PedidoCliente"> | number | null
    tipoEntrega?: EnumTipoEntregaFilter<"PedidoCliente"> | $Enums.TipoEntrega
    metodoPago?: StringFilter<"PedidoCliente"> | string
    direccion?: StringNullableFilter<"PedidoCliente"> | string | null
    telefono?: StringNullableFilter<"PedidoCliente"> | string | null
    receptorNombre?: StringNullableFilter<"PedidoCliente"> | string | null
    deliveryStatus?: EnumDeliveryStatusFilter<"PedidoCliente"> | $Enums.DeliveryStatus
    readyAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    assignedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    total?: FloatFilter<"PedidoCliente"> | number
    ordenId?: IntNullableFilter<"PedidoCliente"> | number | null
    repartidor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    calificacion?: XOR<CalificacionPedidoNullableScalarRelationFilter, CalificacionPedidoWhereInput> | null
    orden?: XOR<OrdenNullableScalarRelationFilter, OrdenWhereInput> | null
    items?: PedidoClienteItemListRelationFilter
    observaciones?: ObservacionEntregaListRelationFilter
    repartidorNotifs?: RepartidorNotifListRelationFilter
  }

  export type PedidoClienteOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    clienteEmail?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    repartidorId?: SortOrderInput | SortOrder
    tipoEntrega?: SortOrder
    metodoPago?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    receptorNombre?: SortOrderInput | SortOrder
    deliveryStatus?: SortOrder
    readyAt?: SortOrderInput | SortOrder
    assignedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    total?: SortOrder
    ordenId?: SortOrderInput | SortOrder
    repartidor?: UsuarioOrderByWithRelationInput
    calificacion?: CalificacionPedidoOrderByWithRelationInput
    orden?: OrdenOrderByWithRelationInput
    items?: PedidoClienteItemOrderByRelationAggregateInput
    observaciones?: ObservacionEntregaOrderByRelationAggregateInput
    repartidorNotifs?: RepartidorNotifOrderByRelationAggregateInput
  }

  export type PedidoClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: string
    ordenId?: number
    AND?: PedidoClienteWhereInput | PedidoClienteWhereInput[]
    OR?: PedidoClienteWhereInput[]
    NOT?: PedidoClienteWhereInput | PedidoClienteWhereInput[]
    clienteEmail?: StringFilter<"PedidoCliente"> | string
    creadoEn?: DateTimeFilter<"PedidoCliente"> | Date | string
    estado?: StringFilter<"PedidoCliente"> | string
    repartidorId?: IntNullableFilter<"PedidoCliente"> | number | null
    tipoEntrega?: EnumTipoEntregaFilter<"PedidoCliente"> | $Enums.TipoEntrega
    metodoPago?: StringFilter<"PedidoCliente"> | string
    direccion?: StringNullableFilter<"PedidoCliente"> | string | null
    telefono?: StringNullableFilter<"PedidoCliente"> | string | null
    receptorNombre?: StringNullableFilter<"PedidoCliente"> | string | null
    deliveryStatus?: EnumDeliveryStatusFilter<"PedidoCliente"> | $Enums.DeliveryStatus
    readyAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    assignedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    total?: FloatFilter<"PedidoCliente"> | number
    repartidor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    calificacion?: XOR<CalificacionPedidoNullableScalarRelationFilter, CalificacionPedidoWhereInput> | null
    orden?: XOR<OrdenNullableScalarRelationFilter, OrdenWhereInput> | null
    items?: PedidoClienteItemListRelationFilter
    observaciones?: ObservacionEntregaListRelationFilter
    repartidorNotifs?: RepartidorNotifListRelationFilter
  }, "id" | "codigo" | "ordenId">

  export type PedidoClienteOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    clienteEmail?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    repartidorId?: SortOrderInput | SortOrder
    tipoEntrega?: SortOrder
    metodoPago?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    receptorNombre?: SortOrderInput | SortOrder
    deliveryStatus?: SortOrder
    readyAt?: SortOrderInput | SortOrder
    assignedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    total?: SortOrder
    ordenId?: SortOrderInput | SortOrder
    _count?: PedidoClienteCountOrderByAggregateInput
    _avg?: PedidoClienteAvgOrderByAggregateInput
    _max?: PedidoClienteMaxOrderByAggregateInput
    _min?: PedidoClienteMinOrderByAggregateInput
    _sum?: PedidoClienteSumOrderByAggregateInput
  }

  export type PedidoClienteScalarWhereWithAggregatesInput = {
    AND?: PedidoClienteScalarWhereWithAggregatesInput | PedidoClienteScalarWhereWithAggregatesInput[]
    OR?: PedidoClienteScalarWhereWithAggregatesInput[]
    NOT?: PedidoClienteScalarWhereWithAggregatesInput | PedidoClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PedidoCliente"> | number
    codigo?: StringWithAggregatesFilter<"PedidoCliente"> | string
    clienteEmail?: StringWithAggregatesFilter<"PedidoCliente"> | string
    creadoEn?: DateTimeWithAggregatesFilter<"PedidoCliente"> | Date | string
    estado?: StringWithAggregatesFilter<"PedidoCliente"> | string
    repartidorId?: IntNullableWithAggregatesFilter<"PedidoCliente"> | number | null
    tipoEntrega?: EnumTipoEntregaWithAggregatesFilter<"PedidoCliente"> | $Enums.TipoEntrega
    metodoPago?: StringWithAggregatesFilter<"PedidoCliente"> | string
    direccion?: StringNullableWithAggregatesFilter<"PedidoCliente"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"PedidoCliente"> | string | null
    receptorNombre?: StringNullableWithAggregatesFilter<"PedidoCliente"> | string | null
    deliveryStatus?: EnumDeliveryStatusWithAggregatesFilter<"PedidoCliente"> | $Enums.DeliveryStatus
    readyAt?: DateTimeNullableWithAggregatesFilter<"PedidoCliente"> | Date | string | null
    assignedAt?: DateTimeNullableWithAggregatesFilter<"PedidoCliente"> | Date | string | null
    startedAt?: DateTimeNullableWithAggregatesFilter<"PedidoCliente"> | Date | string | null
    deliveredAt?: DateTimeNullableWithAggregatesFilter<"PedidoCliente"> | Date | string | null
    total?: FloatWithAggregatesFilter<"PedidoCliente"> | number
    ordenId?: IntNullableWithAggregatesFilter<"PedidoCliente"> | number | null
  }

  export type ObservacionEntregaWhereInput = {
    AND?: ObservacionEntregaWhereInput | ObservacionEntregaWhereInput[]
    OR?: ObservacionEntregaWhereInput[]
    NOT?: ObservacionEntregaWhereInput | ObservacionEntregaWhereInput[]
    id?: IntFilter<"ObservacionEntrega"> | number
    pedidoId?: IntFilter<"ObservacionEntrega"> | number
    repartidorId?: IntFilter<"ObservacionEntrega"> | number
    texto?: StringFilter<"ObservacionEntrega"> | string
    createdAt?: DateTimeFilter<"ObservacionEntrega"> | Date | string
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
    repartidor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type ObservacionEntregaOrderByWithRelationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
    texto?: SortOrder
    createdAt?: SortOrder
    pedido?: PedidoClienteOrderByWithRelationInput
    repartidor?: UsuarioOrderByWithRelationInput
  }

  export type ObservacionEntregaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ObservacionEntregaWhereInput | ObservacionEntregaWhereInput[]
    OR?: ObservacionEntregaWhereInput[]
    NOT?: ObservacionEntregaWhereInput | ObservacionEntregaWhereInput[]
    pedidoId?: IntFilter<"ObservacionEntrega"> | number
    repartidorId?: IntFilter<"ObservacionEntrega"> | number
    texto?: StringFilter<"ObservacionEntrega"> | string
    createdAt?: DateTimeFilter<"ObservacionEntrega"> | Date | string
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
    repartidor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type ObservacionEntregaOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
    texto?: SortOrder
    createdAt?: SortOrder
    _count?: ObservacionEntregaCountOrderByAggregateInput
    _avg?: ObservacionEntregaAvgOrderByAggregateInput
    _max?: ObservacionEntregaMaxOrderByAggregateInput
    _min?: ObservacionEntregaMinOrderByAggregateInput
    _sum?: ObservacionEntregaSumOrderByAggregateInput
  }

  export type ObservacionEntregaScalarWhereWithAggregatesInput = {
    AND?: ObservacionEntregaScalarWhereWithAggregatesInput | ObservacionEntregaScalarWhereWithAggregatesInput[]
    OR?: ObservacionEntregaScalarWhereWithAggregatesInput[]
    NOT?: ObservacionEntregaScalarWhereWithAggregatesInput | ObservacionEntregaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ObservacionEntrega"> | number
    pedidoId?: IntWithAggregatesFilter<"ObservacionEntrega"> | number
    repartidorId?: IntWithAggregatesFilter<"ObservacionEntrega"> | number
    texto?: StringWithAggregatesFilter<"ObservacionEntrega"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ObservacionEntrega"> | Date | string
  }

  export type PedidoClienteItemWhereInput = {
    AND?: PedidoClienteItemWhereInput | PedidoClienteItemWhereInput[]
    OR?: PedidoClienteItemWhereInput[]
    NOT?: PedidoClienteItemWhereInput | PedidoClienteItemWhereInput[]
    id?: IntFilter<"PedidoClienteItem"> | number
    pedidoId?: IntFilter<"PedidoClienteItem"> | number
    platilloId?: IntFilter<"PedidoClienteItem"> | number
    nombre?: StringFilter<"PedidoClienteItem"> | string
    precio?: FloatFilter<"PedidoClienteItem"> | number
    qty?: IntFilter<"PedidoClienteItem"> | number
    nota?: StringNullableFilter<"PedidoClienteItem"> | string | null
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
  }

  export type PedidoClienteItemOrderByWithRelationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    nota?: SortOrderInput | SortOrder
    pedido?: PedidoClienteOrderByWithRelationInput
  }

  export type PedidoClienteItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PedidoClienteItemWhereInput | PedidoClienteItemWhereInput[]
    OR?: PedidoClienteItemWhereInput[]
    NOT?: PedidoClienteItemWhereInput | PedidoClienteItemWhereInput[]
    pedidoId?: IntFilter<"PedidoClienteItem"> | number
    platilloId?: IntFilter<"PedidoClienteItem"> | number
    nombre?: StringFilter<"PedidoClienteItem"> | string
    precio?: FloatFilter<"PedidoClienteItem"> | number
    qty?: IntFilter<"PedidoClienteItem"> | number
    nota?: StringNullableFilter<"PedidoClienteItem"> | string | null
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
  }, "id">

  export type PedidoClienteItemOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    nota?: SortOrderInput | SortOrder
    _count?: PedidoClienteItemCountOrderByAggregateInput
    _avg?: PedidoClienteItemAvgOrderByAggregateInput
    _max?: PedidoClienteItemMaxOrderByAggregateInput
    _min?: PedidoClienteItemMinOrderByAggregateInput
    _sum?: PedidoClienteItemSumOrderByAggregateInput
  }

  export type PedidoClienteItemScalarWhereWithAggregatesInput = {
    AND?: PedidoClienteItemScalarWhereWithAggregatesInput | PedidoClienteItemScalarWhereWithAggregatesInput[]
    OR?: PedidoClienteItemScalarWhereWithAggregatesInput[]
    NOT?: PedidoClienteItemScalarWhereWithAggregatesInput | PedidoClienteItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PedidoClienteItem"> | number
    pedidoId?: IntWithAggregatesFilter<"PedidoClienteItem"> | number
    platilloId?: IntWithAggregatesFilter<"PedidoClienteItem"> | number
    nombre?: StringWithAggregatesFilter<"PedidoClienteItem"> | string
    precio?: FloatWithAggregatesFilter<"PedidoClienteItem"> | number
    qty?: IntWithAggregatesFilter<"PedidoClienteItem"> | number
    nota?: StringNullableWithAggregatesFilter<"PedidoClienteItem"> | string | null
  }

  export type MeseroNotifWhereInput = {
    AND?: MeseroNotifWhereInput | MeseroNotifWhereInput[]
    OR?: MeseroNotifWhereInput[]
    NOT?: MeseroNotifWhereInput | MeseroNotifWhereInput[]
    id?: IntFilter<"MeseroNotif"> | number
    creadoEn?: DateTimeFilter<"MeseroNotif"> | Date | string
    visto?: BoolFilter<"MeseroNotif"> | boolean
    ordenId?: IntFilter<"MeseroNotif"> | number
    itemNombre?: StringFilter<"MeseroNotif"> | string
    tipo?: StringFilter<"MeseroNotif"> | string
    meseroId?: IntNullableFilter<"MeseroNotif"> | number | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    mesero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type MeseroNotifOrderByWithRelationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    ordenId?: SortOrder
    itemNombre?: SortOrder
    tipo?: SortOrder
    meseroId?: SortOrderInput | SortOrder
    orden?: OrdenOrderByWithRelationInput
    mesero?: UsuarioOrderByWithRelationInput
  }

  export type MeseroNotifWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MeseroNotifWhereInput | MeseroNotifWhereInput[]
    OR?: MeseroNotifWhereInput[]
    NOT?: MeseroNotifWhereInput | MeseroNotifWhereInput[]
    creadoEn?: DateTimeFilter<"MeseroNotif"> | Date | string
    visto?: BoolFilter<"MeseroNotif"> | boolean
    ordenId?: IntFilter<"MeseroNotif"> | number
    itemNombre?: StringFilter<"MeseroNotif"> | string
    tipo?: StringFilter<"MeseroNotif"> | string
    meseroId?: IntNullableFilter<"MeseroNotif"> | number | null
    orden?: XOR<OrdenScalarRelationFilter, OrdenWhereInput>
    mesero?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type MeseroNotifOrderByWithAggregationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    ordenId?: SortOrder
    itemNombre?: SortOrder
    tipo?: SortOrder
    meseroId?: SortOrderInput | SortOrder
    _count?: MeseroNotifCountOrderByAggregateInput
    _avg?: MeseroNotifAvgOrderByAggregateInput
    _max?: MeseroNotifMaxOrderByAggregateInput
    _min?: MeseroNotifMinOrderByAggregateInput
    _sum?: MeseroNotifSumOrderByAggregateInput
  }

  export type MeseroNotifScalarWhereWithAggregatesInput = {
    AND?: MeseroNotifScalarWhereWithAggregatesInput | MeseroNotifScalarWhereWithAggregatesInput[]
    OR?: MeseroNotifScalarWhereWithAggregatesInput[]
    NOT?: MeseroNotifScalarWhereWithAggregatesInput | MeseroNotifScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MeseroNotif"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"MeseroNotif"> | Date | string
    visto?: BoolWithAggregatesFilter<"MeseroNotif"> | boolean
    ordenId?: IntWithAggregatesFilter<"MeseroNotif"> | number
    itemNombre?: StringWithAggregatesFilter<"MeseroNotif"> | string
    tipo?: StringWithAggregatesFilter<"MeseroNotif"> | string
    meseroId?: IntNullableWithAggregatesFilter<"MeseroNotif"> | number | null
  }

  export type RepartidorNotifWhereInput = {
    AND?: RepartidorNotifWhereInput | RepartidorNotifWhereInput[]
    OR?: RepartidorNotifWhereInput[]
    NOT?: RepartidorNotifWhereInput | RepartidorNotifWhereInput[]
    id?: IntFilter<"RepartidorNotif"> | number
    creadoEn?: DateTimeFilter<"RepartidorNotif"> | Date | string
    visto?: BoolFilter<"RepartidorNotif"> | boolean
    tipo?: StringFilter<"RepartidorNotif"> | string
    titulo?: StringFilter<"RepartidorNotif"> | string
    cuerpo?: StringNullableFilter<"RepartidorNotif"> | string | null
    repartidorId?: IntNullableFilter<"RepartidorNotif"> | number | null
    pedidoId?: IntNullableFilter<"RepartidorNotif"> | number | null
    repartidor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    pedido?: XOR<PedidoClienteNullableScalarRelationFilter, PedidoClienteWhereInput> | null
  }

  export type RepartidorNotifOrderByWithRelationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrderInput | SortOrder
    repartidorId?: SortOrderInput | SortOrder
    pedidoId?: SortOrderInput | SortOrder
    repartidor?: UsuarioOrderByWithRelationInput
    pedido?: PedidoClienteOrderByWithRelationInput
  }

  export type RepartidorNotifWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    pedidoId_repartidorId_tipo?: RepartidorNotifPedidoIdRepartidorIdTipoCompoundUniqueInput
    pedidoId_tipo?: RepartidorNotifPedidoIdTipoCompoundUniqueInput
    AND?: RepartidorNotifWhereInput | RepartidorNotifWhereInput[]
    OR?: RepartidorNotifWhereInput[]
    NOT?: RepartidorNotifWhereInput | RepartidorNotifWhereInput[]
    creadoEn?: DateTimeFilter<"RepartidorNotif"> | Date | string
    visto?: BoolFilter<"RepartidorNotif"> | boolean
    tipo?: StringFilter<"RepartidorNotif"> | string
    titulo?: StringFilter<"RepartidorNotif"> | string
    cuerpo?: StringNullableFilter<"RepartidorNotif"> | string | null
    repartidorId?: IntNullableFilter<"RepartidorNotif"> | number | null
    pedidoId?: IntNullableFilter<"RepartidorNotif"> | number | null
    repartidor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    pedido?: XOR<PedidoClienteNullableScalarRelationFilter, PedidoClienteWhereInput> | null
  }, "id" | "pedidoId_repartidorId_tipo" | "pedidoId_tipo">

  export type RepartidorNotifOrderByWithAggregationInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrderInput | SortOrder
    repartidorId?: SortOrderInput | SortOrder
    pedidoId?: SortOrderInput | SortOrder
    _count?: RepartidorNotifCountOrderByAggregateInput
    _avg?: RepartidorNotifAvgOrderByAggregateInput
    _max?: RepartidorNotifMaxOrderByAggregateInput
    _min?: RepartidorNotifMinOrderByAggregateInput
    _sum?: RepartidorNotifSumOrderByAggregateInput
  }

  export type RepartidorNotifScalarWhereWithAggregatesInput = {
    AND?: RepartidorNotifScalarWhereWithAggregatesInput | RepartidorNotifScalarWhereWithAggregatesInput[]
    OR?: RepartidorNotifScalarWhereWithAggregatesInput[]
    NOT?: RepartidorNotifScalarWhereWithAggregatesInput | RepartidorNotifScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RepartidorNotif"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"RepartidorNotif"> | Date | string
    visto?: BoolWithAggregatesFilter<"RepartidorNotif"> | boolean
    tipo?: StringWithAggregatesFilter<"RepartidorNotif"> | string
    titulo?: StringWithAggregatesFilter<"RepartidorNotif"> | string
    cuerpo?: StringNullableWithAggregatesFilter<"RepartidorNotif"> | string | null
    repartidorId?: IntNullableWithAggregatesFilter<"RepartidorNotif"> | number | null
    pedidoId?: IntNullableWithAggregatesFilter<"RepartidorNotif"> | number | null
  }

  export type CajaTurnoWhereInput = {
    AND?: CajaTurnoWhereInput | CajaTurnoWhereInput[]
    OR?: CajaTurnoWhereInput[]
    NOT?: CajaTurnoWhereInput | CajaTurnoWhereInput[]
    id?: IntFilter<"CajaTurno"> | number
    cajeroId?: IntFilter<"CajaTurno"> | number
    estado?: EnumCajaTurnoEstadoFilter<"CajaTurno"> | $Enums.CajaTurnoEstado
    montoApertura?: FloatFilter<"CajaTurno"> | number
    conteoInicial?: JsonNullableFilter<"CajaTurno">
    solicitadoEn?: DateTimeFilter<"CajaTurno"> | Date | string
    autorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    montoCierre?: FloatNullableFilter<"CajaTurno"> | number | null
    conteoFinal?: JsonNullableFilter<"CajaTurno">
    cierreSolicitadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cierreAutorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    cierreAutorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cerradoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cajero?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    autorizadoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type CajaTurnoOrderByWithRelationInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    estado?: SortOrder
    montoApertura?: SortOrder
    conteoInicial?: SortOrderInput | SortOrder
    solicitadoEn?: SortOrder
    autorizadoPorId?: SortOrderInput | SortOrder
    autorizadoEn?: SortOrderInput | SortOrder
    montoCierre?: SortOrderInput | SortOrder
    conteoFinal?: SortOrderInput | SortOrder
    cierreSolicitadoEn?: SortOrderInput | SortOrder
    cierreAutorizadoPorId?: SortOrderInput | SortOrder
    cierreAutorizadoEn?: SortOrderInput | SortOrder
    cerradoEn?: SortOrderInput | SortOrder
    cajero?: UsuarioOrderByWithRelationInput
    autorizadoPor?: UsuarioOrderByWithRelationInput
  }

  export type CajaTurnoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CajaTurnoWhereInput | CajaTurnoWhereInput[]
    OR?: CajaTurnoWhereInput[]
    NOT?: CajaTurnoWhereInput | CajaTurnoWhereInput[]
    cajeroId?: IntFilter<"CajaTurno"> | number
    estado?: EnumCajaTurnoEstadoFilter<"CajaTurno"> | $Enums.CajaTurnoEstado
    montoApertura?: FloatFilter<"CajaTurno"> | number
    conteoInicial?: JsonNullableFilter<"CajaTurno">
    solicitadoEn?: DateTimeFilter<"CajaTurno"> | Date | string
    autorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    montoCierre?: FloatNullableFilter<"CajaTurno"> | number | null
    conteoFinal?: JsonNullableFilter<"CajaTurno">
    cierreSolicitadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cierreAutorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    cierreAutorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cerradoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cajero?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    autorizadoPor?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type CajaTurnoOrderByWithAggregationInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    estado?: SortOrder
    montoApertura?: SortOrder
    conteoInicial?: SortOrderInput | SortOrder
    solicitadoEn?: SortOrder
    autorizadoPorId?: SortOrderInput | SortOrder
    autorizadoEn?: SortOrderInput | SortOrder
    montoCierre?: SortOrderInput | SortOrder
    conteoFinal?: SortOrderInput | SortOrder
    cierreSolicitadoEn?: SortOrderInput | SortOrder
    cierreAutorizadoPorId?: SortOrderInput | SortOrder
    cierreAutorizadoEn?: SortOrderInput | SortOrder
    cerradoEn?: SortOrderInput | SortOrder
    _count?: CajaTurnoCountOrderByAggregateInput
    _avg?: CajaTurnoAvgOrderByAggregateInput
    _max?: CajaTurnoMaxOrderByAggregateInput
    _min?: CajaTurnoMinOrderByAggregateInput
    _sum?: CajaTurnoSumOrderByAggregateInput
  }

  export type CajaTurnoScalarWhereWithAggregatesInput = {
    AND?: CajaTurnoScalarWhereWithAggregatesInput | CajaTurnoScalarWhereWithAggregatesInput[]
    OR?: CajaTurnoScalarWhereWithAggregatesInput[]
    NOT?: CajaTurnoScalarWhereWithAggregatesInput | CajaTurnoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CajaTurno"> | number
    cajeroId?: IntWithAggregatesFilter<"CajaTurno"> | number
    estado?: EnumCajaTurnoEstadoWithAggregatesFilter<"CajaTurno"> | $Enums.CajaTurnoEstado
    montoApertura?: FloatWithAggregatesFilter<"CajaTurno"> | number
    conteoInicial?: JsonNullableWithAggregatesFilter<"CajaTurno">
    solicitadoEn?: DateTimeWithAggregatesFilter<"CajaTurno"> | Date | string
    autorizadoPorId?: IntNullableWithAggregatesFilter<"CajaTurno"> | number | null
    autorizadoEn?: DateTimeNullableWithAggregatesFilter<"CajaTurno"> | Date | string | null
    montoCierre?: FloatNullableWithAggregatesFilter<"CajaTurno"> | number | null
    conteoFinal?: JsonNullableWithAggregatesFilter<"CajaTurno">
    cierreSolicitadoEn?: DateTimeNullableWithAggregatesFilter<"CajaTurno"> | Date | string | null
    cierreAutorizadoPorId?: IntNullableWithAggregatesFilter<"CajaTurno"> | number | null
    cierreAutorizadoEn?: DateTimeNullableWithAggregatesFilter<"CajaTurno"> | Date | string | null
    cerradoEn?: DateTimeNullableWithAggregatesFilter<"CajaTurno"> | Date | string | null
  }

  export type CalificacionPedidoWhereInput = {
    AND?: CalificacionPedidoWhereInput | CalificacionPedidoWhereInput[]
    OR?: CalificacionPedidoWhereInput[]
    NOT?: CalificacionPedidoWhereInput | CalificacionPedidoWhereInput[]
    id?: IntFilter<"CalificacionPedido"> | number
    pedidoId?: IntFilter<"CalificacionPedido"> | number
    comida?: IntFilter<"CalificacionPedido"> | number
    repartidor?: IntNullableFilter<"CalificacionPedido"> | number | null
    atencionCliente?: IntNullableFilter<"CalificacionPedido"> | number | null
    comentario?: StringNullableFilter<"CalificacionPedido"> | string | null
    comidaOpciones?: JsonNullableFilter<"CalificacionPedido">
    repartidorOpciones?: JsonNullableFilter<"CalificacionPedido">
    atencionOpciones?: JsonNullableFilter<"CalificacionPedido">
    creadoEn?: DateTimeFilter<"CalificacionPedido"> | Date | string
    actualizadoEn?: DateTimeFilter<"CalificacionPedido"> | Date | string
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
  }

  export type CalificacionPedidoOrderByWithRelationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrderInput | SortOrder
    atencionCliente?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    comidaOpciones?: SortOrderInput | SortOrder
    repartidorOpciones?: SortOrderInput | SortOrder
    atencionOpciones?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    pedido?: PedidoClienteOrderByWithRelationInput
  }

  export type CalificacionPedidoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    pedidoId?: number
    AND?: CalificacionPedidoWhereInput | CalificacionPedidoWhereInput[]
    OR?: CalificacionPedidoWhereInput[]
    NOT?: CalificacionPedidoWhereInput | CalificacionPedidoWhereInput[]
    comida?: IntFilter<"CalificacionPedido"> | number
    repartidor?: IntNullableFilter<"CalificacionPedido"> | number | null
    atencionCliente?: IntNullableFilter<"CalificacionPedido"> | number | null
    comentario?: StringNullableFilter<"CalificacionPedido"> | string | null
    comidaOpciones?: JsonNullableFilter<"CalificacionPedido">
    repartidorOpciones?: JsonNullableFilter<"CalificacionPedido">
    atencionOpciones?: JsonNullableFilter<"CalificacionPedido">
    creadoEn?: DateTimeFilter<"CalificacionPedido"> | Date | string
    actualizadoEn?: DateTimeFilter<"CalificacionPedido"> | Date | string
    pedido?: XOR<PedidoClienteScalarRelationFilter, PedidoClienteWhereInput>
  }, "id" | "pedidoId">

  export type CalificacionPedidoOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrderInput | SortOrder
    atencionCliente?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    comidaOpciones?: SortOrderInput | SortOrder
    repartidorOpciones?: SortOrderInput | SortOrder
    atencionOpciones?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: CalificacionPedidoCountOrderByAggregateInput
    _avg?: CalificacionPedidoAvgOrderByAggregateInput
    _max?: CalificacionPedidoMaxOrderByAggregateInput
    _min?: CalificacionPedidoMinOrderByAggregateInput
    _sum?: CalificacionPedidoSumOrderByAggregateInput
  }

  export type CalificacionPedidoScalarWhereWithAggregatesInput = {
    AND?: CalificacionPedidoScalarWhereWithAggregatesInput | CalificacionPedidoScalarWhereWithAggregatesInput[]
    OR?: CalificacionPedidoScalarWhereWithAggregatesInput[]
    NOT?: CalificacionPedidoScalarWhereWithAggregatesInput | CalificacionPedidoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CalificacionPedido"> | number
    pedidoId?: IntWithAggregatesFilter<"CalificacionPedido"> | number
    comida?: IntWithAggregatesFilter<"CalificacionPedido"> | number
    repartidor?: IntNullableWithAggregatesFilter<"CalificacionPedido"> | number | null
    atencionCliente?: IntNullableWithAggregatesFilter<"CalificacionPedido"> | number | null
    comentario?: StringNullableWithAggregatesFilter<"CalificacionPedido"> | string | null
    comidaOpciones?: JsonNullableWithAggregatesFilter<"CalificacionPedido">
    repartidorOpciones?: JsonNullableWithAggregatesFilter<"CalificacionPedido">
    atencionOpciones?: JsonNullableWithAggregatesFilter<"CalificacionPedido">
    creadoEn?: DateTimeWithAggregatesFilter<"CalificacionPedido"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"CalificacionPedido"> | Date | string
  }

  export type SettingWhereInput = {
    AND?: SettingWhereInput | SettingWhereInput[]
    OR?: SettingWhereInput[]
    NOT?: SettingWhereInput | SettingWhereInput[]
    id?: IntFilter<"Setting"> | number
    key?: StringFilter<"Setting"> | string
    value?: StringFilter<"Setting"> | string
    createdAt?: DateTimeFilter<"Setting"> | Date | string
    updatedAt?: DateTimeFilter<"Setting"> | Date | string
  }

  export type SettingOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SettingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    key?: string
    AND?: SettingWhereInput | SettingWhereInput[]
    OR?: SettingWhereInput[]
    NOT?: SettingWhereInput | SettingWhereInput[]
    value?: StringFilter<"Setting"> | string
    createdAt?: DateTimeFilter<"Setting"> | Date | string
    updatedAt?: DateTimeFilter<"Setting"> | Date | string
  }, "id" | "key">

  export type SettingOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SettingCountOrderByAggregateInput
    _avg?: SettingAvgOrderByAggregateInput
    _max?: SettingMaxOrderByAggregateInput
    _min?: SettingMinOrderByAggregateInput
    _sum?: SettingSumOrderByAggregateInput
  }

  export type SettingScalarWhereWithAggregatesInput = {
    AND?: SettingScalarWhereWithAggregatesInput | SettingScalarWhereWithAggregatesInput[]
    OR?: SettingScalarWhereWithAggregatesInput[]
    NOT?: SettingScalarWhereWithAggregatesInput | SettingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Setting"> | number
    key?: StringWithAggregatesFilter<"Setting"> | string
    value?: StringWithAggregatesFilter<"Setting"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Setting"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Setting"> | Date | string
  }

  export type UsuarioCreateInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type RolCreateInput = {
    nombre: string
    usuarios?: UsuarioCreateNestedManyWithoutRolInput
    permisos?: PermisoPorRolCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateInput = {
    id?: number
    nombre: string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutRolInput
    permisos?: PermisoPorRolUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUpdateManyWithoutRolNestedInput
    permisos?: PermisoPorRolUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutRolNestedInput
    permisos?: PermisoPorRolUncheckedUpdateManyWithoutRolNestedInput
  }

  export type RolCreateManyInput = {
    id?: number
    nombre: string
  }

  export type RolUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type RolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PermisoCreateInput = {
    nombre: string
    descripcion?: string | null
    roles?: PermisoPorRolCreateNestedManyWithoutPermisoInput
    usuarios?: PermisoUsuarioCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    roles?: PermisoPorRolUncheckedCreateNestedManyWithoutPermisoInput
    usuarios?: PermisoUsuarioUncheckedCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PermisoPorRolUpdateManyWithoutPermisoNestedInput
    usuarios?: PermisoUsuarioUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PermisoPorRolUncheckedUpdateManyWithoutPermisoNestedInput
    usuarios?: PermisoUsuarioUncheckedUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
  }

  export type PermisoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermisoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermisoPorRolCreateInput = {
    permiso: PermisoCreateNestedOneWithoutRolesInput
    rol: RolCreateNestedOneWithoutPermisosInput
  }

  export type PermisoPorRolUncheckedCreateInput = {
    id?: number
    permisoId: number
    rolId: number
  }

  export type PermisoPorRolUpdateInput = {
    permiso?: PermisoUpdateOneRequiredWithoutRolesNestedInput
    rol?: RolUpdateOneRequiredWithoutPermisosNestedInput
  }

  export type PermisoPorRolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoPorRolCreateManyInput = {
    id?: number
    permisoId: number
    rolId: number
  }

  export type PermisoPorRolUpdateManyMutationInput = {

  }

  export type PermisoPorRolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoUsuarioCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutPermisosInput
    permiso: PermisoCreateNestedOneWithoutUsuariosInput
  }

  export type PermisoUsuarioUncheckedCreateInput = {
    id?: number
    usuarioId: number
    permisoId: number
  }

  export type PermisoUsuarioUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutPermisosNestedInput
    permiso?: PermisoUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type PermisoUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoUsuarioCreateManyInput = {
    id?: number
    usuarioId: number
    permisoId: number
  }

  export type PermisoUsuarioUpdateManyMutationInput = {

  }

  export type PermisoUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type PasswordHistoryCreateInput = {
    hash: string
    createdAt?: Date | string
    user: UsuarioCreateNestedOneWithoutPasswordHistoryInput
  }

  export type PasswordHistoryUncheckedCreateInput = {
    id?: number
    userId: number
    hash: string
    createdAt?: Date | string
  }

  export type PasswordHistoryUpdateInput = {
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsuarioUpdateOneRequiredWithoutPasswordHistoryNestedInput
  }

  export type PasswordHistoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordHistoryCreateManyInput = {
    id?: number
    userId: number
    hash: string
    createdAt?: Date | string
  }

  export type PasswordHistoryUpdateManyMutationInput = {
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordHistoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaCreateInput = {
    nombre: string
    activo?: boolean
    creadoEn?: Date | string
    tipo?: $Enums.CategoriaTipo
    platillos?: PlatilloCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateInput = {
    id?: number
    nombre: string
    activo?: boolean
    creadoEn?: Date | string
    tipo?: $Enums.CategoriaTipo
    platillos?: PlatilloUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
    platillos?: PlatilloUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
    platillos?: PlatilloUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaCreateManyInput = {
    id?: number
    nombre: string
    activo?: boolean
    creadoEn?: Date | string
    tipo?: $Enums.CategoriaTipo
  }

  export type CategoriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
  }

  export type CategoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
  }

  export type PlatilloCreateInput = {
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    categoria: CategoriaCreateNestedOneWithoutPlatillosInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutPlatilloInput
  }

  export type PlatilloUncheckedCreateInput = {
    id?: number
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    categoriaId: number
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutPlatilloInput
  }

  export type PlatilloUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutPlatillosNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutPlatilloNestedInput
  }

  export type PlatilloUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaId?: IntFieldUpdateOperationsInput | number
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutPlatilloNestedInput
  }

  export type PlatilloCreateManyInput = {
    id?: number
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    categoriaId: number
  }

  export type PlatilloUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PlatilloUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaId?: IntFieldUpdateOperationsInput | number
  }

  export type HistorialModificacionCreateInput = {
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsable: UsuarioCreateNestedOneWithoutHistorialResponsableInput
    usuario?: UsuarioCreateNestedOneWithoutHistorialModificacionesInput
    platillo?: PlatilloCreateNestedOneWithoutHistorialModificacionesInput
  }

  export type HistorialModificacionUncheckedCreateInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    usuarioId?: number | null
    platilloId?: number | null
  }

  export type HistorialModificacionUpdateInput = {
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsable?: UsuarioUpdateOneRequiredWithoutHistorialResponsableNestedInput
    usuario?: UsuarioUpdateOneWithoutHistorialModificacionesNestedInput
    platillo?: PlatilloUpdateOneWithoutHistorialModificacionesNestedInput
  }

  export type HistorialModificacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialModificacionCreateManyInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    usuarioId?: number | null
    platilloId?: number | null
  }

  export type HistorialModificacionUpdateManyMutationInput = {
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
  }

  export type HistorialModificacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MesaCreateInput = {
    numero: number
    capacidad: number
    estado?: $Enums.MesaEstado
    reservadaPor?: string | null
    activa?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    reservas?: ReservaCreateNestedManyWithoutMesaInput
  }

  export type MesaUncheckedCreateInput = {
    id?: number
    numero: number
    capacidad: number
    estado?: $Enums.MesaEstado
    reservadaPor?: string | null
    activa?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    reservas?: ReservaUncheckedCreateNestedManyWithoutMesaInput
  }

  export type MesaUpdateInput = {
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUpdateManyWithoutMesaNestedInput
  }

  export type MesaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUncheckedUpdateManyWithoutMesaNestedInput
  }

  export type MesaCreateManyInput = {
    id?: number
    numero: number
    capacidad: number
    estado?: $Enums.MesaEstado
    reservadaPor?: string | null
    activa?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type MesaUpdateManyMutationInput = {
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MesaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaCreateInput = {
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    mesa: MesaCreateNestedOneWithoutReservasInput
  }

  export type ReservaUncheckedCreateInput = {
    id?: number
    mesaId: number
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReservaUpdateInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    mesa?: MesaUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mesaId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaCreateManyInput = {
    id?: number
    mesaId: number
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReservaUpdateManyMutationInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    mesaId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrdenCreateInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    mesero?: UsuarioCreateNestedOneWithoutOrdenesMeseroInput
    items?: OrdenItemCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUncheckedCreateInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemUncheckedCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaUncheckedCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    mesero?: UsuarioUpdateOneWithoutOrdenesMeseroNestedInput
    items?: OrdenItemUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenCreateManyInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
  }

  export type OrdenUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
  }

  export type OrdenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
  }

  export type OrdenItemCreateInput = {
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    orden: OrdenCreateNestedOneWithoutItemsInput
    chef?: UsuarioCreateNestedOneWithoutItemsAsignadosInput
    bartender?: UsuarioCreateNestedOneWithoutItemsBarraAsignadosInput
    ticket?: TicketVentaCreateNestedOneWithoutItemsInput
  }

  export type OrdenItemUncheckedCreateInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    orden?: OrdenUpdateOneRequiredWithoutItemsNestedInput
    chef?: UsuarioUpdateOneWithoutItemsAsignadosNestedInput
    bartender?: UsuarioUpdateOneWithoutItemsBarraAsignadosNestedInput
    ticket?: TicketVentaUpdateOneWithoutItemsNestedInput
  }

  export type OrdenItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemCreateManyInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrdenItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CocinaChefCreateInput = {
    activo?: boolean
    lastSeen?: Date | string
    chef: UsuarioCreateNestedOneWithoutCocinaEstadoInput
  }

  export type CocinaChefUncheckedCreateInput = {
    id?: number
    chefId: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type CocinaChefUpdateInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
    chef?: UsuarioUpdateOneRequiredWithoutCocinaEstadoNestedInput
  }

  export type CocinaChefUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    chefId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CocinaChefCreateManyInput = {
    id?: number
    chefId: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type CocinaChefUpdateManyMutationInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CocinaChefUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    chefId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BarraBartenderCreateInput = {
    activo?: boolean
    lastSeen?: Date | string
    bartender: UsuarioCreateNestedOneWithoutBarraEstadoInput
  }

  export type BarraBartenderUncheckedCreateInput = {
    id?: number
    bartenderId: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type BarraBartenderUpdateInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
    bartender?: UsuarioUpdateOneRequiredWithoutBarraEstadoNestedInput
  }

  export type BarraBartenderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bartenderId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BarraBartenderCreateManyInput = {
    id?: number
    bartenderId: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type BarraBartenderUpdateManyMutationInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BarraBartenderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bartenderId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketVentaCreateInput = {
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    orden: OrdenCreateNestedOneWithoutTicketsInput
    cajero?: UsuarioCreateNestedOneWithoutTicketsCobradosInput
    anuladoPor?: UsuarioCreateNestedOneWithoutTicketsAnuladosInput
    items?: OrdenItemCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaUncheckedCreateInput = {
    id?: number
    ordenId: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    items?: OrdenItemUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaUpdateInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: OrdenUpdateOneRequiredWithoutTicketsNestedInput
    cajero?: UsuarioUpdateOneWithoutTicketsCobradosNestedInput
    anuladoPor?: UsuarioUpdateOneWithoutTicketsAnuladosNestedInput
    items?: OrdenItemUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrdenItemUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaCreateManyInput = {
    id?: number
    ordenId: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
  }

  export type TicketVentaUpdateManyMutationInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TicketVentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaCreateInput = {
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    monto: number
    motivo: string
    autorizadoEn?: Date | string | null
    observacion?: string | null
    cajero: UsuarioCreateNestedOneWithoutEgresosSolicitadosInput
    autorizadoPor?: UsuarioCreateNestedOneWithoutEgresosAutorizadosInput
  }

  export type EgresoCajaUncheckedCreateInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    cajeroId: number
    monto: number
    motivo: string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type EgresoCajaUpdateInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    cajero?: UsuarioUpdateOneRequiredWithoutEgresosSolicitadosNestedInput
    autorizadoPor?: UsuarioUpdateOneWithoutEgresosAutorizadosNestedInput
  }

  export type EgresoCajaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    cajeroId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaCreateManyInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    cajeroId: number
    monto: number
    motivo: string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type EgresoCajaUpdateManyMutationInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    cajeroId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoClienteCreateInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteCreateManyInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
  }

  export type PedidoClienteUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type PedidoClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ObservacionEntregaCreateInput = {
    texto: string
    createdAt?: Date | string
    pedido: PedidoClienteCreateNestedOneWithoutObservacionesInput
    repartidor: UsuarioCreateNestedOneWithoutObservacionesEntregaInput
  }

  export type ObservacionEntregaUncheckedCreateInput = {
    id?: number
    pedidoId: number
    repartidorId: number
    texto: string
    createdAt?: Date | string
  }

  export type ObservacionEntregaUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoClienteUpdateOneRequiredWithoutObservacionesNestedInput
    repartidor?: UsuarioUpdateOneRequiredWithoutObservacionesEntregaNestedInput
  }

  export type ObservacionEntregaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    repartidorId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ObservacionEntregaCreateManyInput = {
    id?: number
    pedidoId: number
    repartidorId: number
    texto: string
    createdAt?: Date | string
  }

  export type ObservacionEntregaUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ObservacionEntregaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    repartidorId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PedidoClienteItemCreateInput = {
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
    pedido: PedidoClienteCreateNestedOneWithoutItemsInput
  }

  export type PedidoClienteItemUncheckedCreateInput = {
    id?: number
    pedidoId: number
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
  }

  export type PedidoClienteItemUpdateInput = {
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    pedido?: PedidoClienteUpdateOneRequiredWithoutItemsNestedInput
  }

  export type PedidoClienteItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoClienteItemCreateManyInput = {
    id?: number
    pedidoId: number
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
  }

  export type PedidoClienteItemUpdateManyMutationInput = {
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoClienteItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MeseroNotifCreateInput = {
    creadoEn?: Date | string
    visto?: boolean
    itemNombre: string
    tipo: string
    orden: OrdenCreateNestedOneWithoutNotifsInput
    mesero?: UsuarioCreateNestedOneWithoutMeseroNotifsInput
  }

  export type MeseroNotifUncheckedCreateInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    ordenId: number
    itemNombre: string
    tipo: string
    meseroId?: number | null
  }

  export type MeseroNotifUpdateInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    orden?: OrdenUpdateOneRequiredWithoutNotifsNestedInput
    mesero?: UsuarioUpdateOneWithoutMeseroNotifsNestedInput
  }

  export type MeseroNotifUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MeseroNotifCreateManyInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    ordenId: number
    itemNombre: string
    tipo: string
    meseroId?: number | null
  }

  export type MeseroNotifUpdateManyMutationInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type MeseroNotifUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RepartidorNotifCreateInput = {
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidor?: UsuarioCreateNestedOneWithoutRepartidorNotifsInput
    pedido?: PedidoClienteCreateNestedOneWithoutRepartidorNotifsInput
  }

  export type RepartidorNotifUncheckedCreateInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidorId?: number | null
    pedidoId?: number | null
  }

  export type RepartidorNotifUpdateInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidor?: UsuarioUpdateOneWithoutRepartidorNotifsNestedInput
    pedido?: PedidoClienteUpdateOneWithoutRepartidorNotifsNestedInput
  }

  export type RepartidorNotifUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    pedidoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RepartidorNotifCreateManyInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidorId?: number | null
    pedidoId?: number | null
  }

  export type RepartidorNotifUpdateManyMutationInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RepartidorNotifUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    pedidoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CajaTurnoCreateInput = {
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
    cajero: UsuarioCreateNestedOneWithoutCajaTurnosSolicitadosInput
    autorizadoPor?: UsuarioCreateNestedOneWithoutCajaTurnosAutorizadosInput
  }

  export type CajaTurnoUncheckedCreateInput = {
    id?: number
    cajeroId: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type CajaTurnoUpdateInput = {
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cajero?: UsuarioUpdateOneRequiredWithoutCajaTurnosSolicitadosNestedInput
    autorizadoPor?: UsuarioUpdateOneWithoutCajaTurnosAutorizadosNestedInput
  }

  export type CajaTurnoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CajaTurnoCreateManyInput = {
    id?: number
    cajeroId: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type CajaTurnoUpdateManyMutationInput = {
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CajaTurnoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CalificacionPedidoCreateInput = {
    comida: number
    repartidor?: number | null
    atencionCliente?: number | null
    comentario?: string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    pedido: PedidoClienteCreateNestedOneWithoutCalificacionInput
  }

  export type CalificacionPedidoUncheckedCreateInput = {
    id?: number
    pedidoId: number
    comida: number
    repartidor?: number | null
    atencionCliente?: number | null
    comentario?: string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type CalificacionPedidoUpdateInput = {
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoClienteUpdateOneRequiredWithoutCalificacionNestedInput
  }

  export type CalificacionPedidoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionPedidoCreateManyInput = {
    id?: number
    pedidoId: number
    comida: number
    repartidor?: number | null
    atencionCliente?: number | null
    comentario?: string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type CalificacionPedidoUpdateManyMutationInput = {
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionPedidoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingCreateInput = {
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SettingUncheckedCreateInput = {
    id?: number
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SettingUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingCreateManyInput = {
    id?: number
    key: string
    value: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SettingUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SettingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type RolScalarRelationFilter = {
    is?: RolWhereInput
    isNot?: RolWhereInput
  }

  export type PermisoUsuarioListRelationFilter = {
    every?: PermisoUsuarioWhereInput
    some?: PermisoUsuarioWhereInput
    none?: PermisoUsuarioWhereInput
  }

  export type HistorialModificacionListRelationFilter = {
    every?: HistorialModificacionWhereInput
    some?: HistorialModificacionWhereInput
    none?: HistorialModificacionWhereInput
  }

  export type PasswordHistoryListRelationFilter = {
    every?: PasswordHistoryWhereInput
    some?: PasswordHistoryWhereInput
    none?: PasswordHistoryWhereInput
  }

  export type OrdenListRelationFilter = {
    every?: OrdenWhereInput
    some?: OrdenWhereInput
    none?: OrdenWhereInput
  }

  export type OrdenItemListRelationFilter = {
    every?: OrdenItemWhereInput
    some?: OrdenItemWhereInput
    none?: OrdenItemWhereInput
  }

  export type CocinaChefNullableScalarRelationFilter = {
    is?: CocinaChefWhereInput | null
    isNot?: CocinaChefWhereInput | null
  }

  export type BarraBartenderNullableScalarRelationFilter = {
    is?: BarraBartenderWhereInput | null
    isNot?: BarraBartenderWhereInput | null
  }

  export type EgresoCajaListRelationFilter = {
    every?: EgresoCajaWhereInput
    some?: EgresoCajaWhereInput
    none?: EgresoCajaWhereInput
  }

  export type MeseroNotifListRelationFilter = {
    every?: MeseroNotifWhereInput
    some?: MeseroNotifWhereInput
    none?: MeseroNotifWhereInput
  }

  export type PedidoClienteListRelationFilter = {
    every?: PedidoClienteWhereInput
    some?: PedidoClienteWhereInput
    none?: PedidoClienteWhereInput
  }

  export type ObservacionEntregaListRelationFilter = {
    every?: ObservacionEntregaWhereInput
    some?: ObservacionEntregaWhereInput
    none?: ObservacionEntregaWhereInput
  }

  export type RepartidorNotifListRelationFilter = {
    every?: RepartidorNotifWhereInput
    some?: RepartidorNotifWhereInput
    none?: RepartidorNotifWhereInput
  }

  export type TicketVentaListRelationFilter = {
    every?: TicketVentaWhereInput
    some?: TicketVentaWhereInput
    none?: TicketVentaWhereInput
  }

  export type CajaTurnoListRelationFilter = {
    every?: CajaTurnoWhereInput
    some?: CajaTurnoWhereInput
    none?: CajaTurnoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PermisoUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialModificacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PasswordHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrdenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrdenItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EgresoCajaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MeseroNotifOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ObservacionEntregaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RepartidorNotifOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketVentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CajaTurnoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuario?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    debeCambiarPassword?: SortOrder
    rolId?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuario?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    debeCambiarPassword?: SortOrder
    rolId?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    usuario?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    debeCambiarPassword?: SortOrder
    rolId?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type PermisoPorRolListRelationFilter = {
    every?: PermisoPorRolWhereInput
    some?: PermisoPorRolWhereInput
    none?: PermisoPorRolWhereInput
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermisoPorRolOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type PermisoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type PermisoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type PermisoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoScalarRelationFilter = {
    is?: PermisoWhereInput
    isNot?: PermisoWhereInput
  }

  export type PermisoPorRolPermisoIdRolIdCompoundUniqueInput = {
    permisoId: number
    rolId: number
  }

  export type PermisoPorRolCountOrderByAggregateInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
  }

  export type PermisoPorRolAvgOrderByAggregateInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
  }

  export type PermisoPorRolMaxOrderByAggregateInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
  }

  export type PermisoPorRolMinOrderByAggregateInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
  }

  export type PermisoPorRolSumOrderByAggregateInput = {
    id?: SortOrder
    permisoId?: SortOrder
    rolId?: SortOrder
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type PermisoUsuarioUsuarioIdPermisoIdCompoundUniqueInput = {
    usuarioId: number
    permisoId: number
  }

  export type PermisoUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
  }

  export type PermisoUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
  }

  export type PermisoUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
  }

  export type PermisoUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
  }

  export type PermisoUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    permisoId?: SortOrder
  }

  export type PasswordHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hash?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordHistoryAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type PasswordHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hash?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hash?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordHistorySumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type EnumCategoriaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaTipo | EnumCategoriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaTipoFilter<$PrismaModel> | $Enums.CategoriaTipo
  }

  export type PlatilloListRelationFilter = {
    every?: PlatilloWhereInput
    some?: PlatilloWhereInput
    none?: PlatilloWhereInput
  }

  export type PlatilloOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    creadoEn?: SortOrder
    tipo?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    creadoEn?: SortOrder
    tipo?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    activo?: SortOrder
    creadoEn?: SortOrder
    tipo?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumCategoriaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaTipo | EnumCategoriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaTipoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaTipoFilter<$PrismaModel>
    _max?: NestedEnumCategoriaTipoFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CategoriaScalarRelationFilter = {
    is?: CategoriaWhereInput
    isNot?: CategoriaWhereInput
  }

  export type PlatilloCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    creadoEn?: SortOrder
    disponible?: SortOrder
    imagenUrl?: SortOrder
    categoriaId?: SortOrder
  }

  export type PlatilloAvgOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    categoriaId?: SortOrder
  }

  export type PlatilloMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    creadoEn?: SortOrder
    disponible?: SortOrder
    imagenUrl?: SortOrder
    categoriaId?: SortOrder
  }

  export type PlatilloMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    creadoEn?: SortOrder
    disponible?: SortOrder
    imagenUrl?: SortOrder
    categoriaId?: SortOrder
  }

  export type PlatilloSumOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    categoriaId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type PlatilloNullableScalarRelationFilter = {
    is?: PlatilloWhereInput | null
    isNot?: PlatilloWhereInput | null
  }

  export type HistorialModificacionCountOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    fecha?: SortOrder
    accion?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrder
    platilloId?: SortOrder
  }

  export type HistorialModificacionAvgOrderByAggregateInput = {
    id?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrder
    platilloId?: SortOrder
  }

  export type HistorialModificacionMaxOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    fecha?: SortOrder
    accion?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrder
    platilloId?: SortOrder
  }

  export type HistorialModificacionMinOrderByAggregateInput = {
    id?: SortOrder
    campo?: SortOrder
    valorAnterior?: SortOrder
    valorNuevo?: SortOrder
    fecha?: SortOrder
    accion?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrder
    platilloId?: SortOrder
  }

  export type HistorialModificacionSumOrderByAggregateInput = {
    id?: SortOrder
    responsableId?: SortOrder
    usuarioId?: SortOrder
    platilloId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumMesaEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.MesaEstado | EnumMesaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumMesaEstadoFilter<$PrismaModel> | $Enums.MesaEstado
  }

  export type ReservaListRelationFilter = {
    every?: ReservaWhereInput
    some?: ReservaWhereInput
    none?: ReservaWhereInput
  }

  export type ReservaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MesaCountOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
    estado?: SortOrder
    reservadaPor?: SortOrder
    activa?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type MesaAvgOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
  }

  export type MesaMaxOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
    estado?: SortOrder
    reservadaPor?: SortOrder
    activa?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type MesaMinOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
    estado?: SortOrder
    reservadaPor?: SortOrder
    activa?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type MesaSumOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    capacidad?: SortOrder
  }

  export type EnumMesaEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MesaEstado | EnumMesaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumMesaEstadoWithAggregatesFilter<$PrismaModel> | $Enums.MesaEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMesaEstadoFilter<$PrismaModel>
    _max?: NestedEnumMesaEstadoFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumReservaEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstado | EnumReservaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstadoFilter<$PrismaModel> | $Enums.ReservaEstado
  }

  export type EnumPagoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.PagoEstado | EnumPagoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumPagoEstadoFilter<$PrismaModel> | $Enums.PagoEstado
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumRefundEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.RefundEstado | EnumRefundEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumRefundEstadoFilter<$PrismaModel> | $Enums.RefundEstado
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type MesaScalarRelationFilter = {
    is?: MesaWhereInput
    isNot?: MesaWhereInput
  }

  export type ReservaCountOrderByAggregateInput = {
    id?: SortOrder
    mesaId?: SortOrder
    fechaHora?: SortOrder
    hastaHora?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    nota?: SortOrder
    monto?: SortOrder
    estado?: SortOrder
    pagoEstado?: SortOrder
    pagoMetodo?: SortOrder
    pagoReferencia?: SortOrder
    pagadoEn?: SortOrder
    canceladaEn?: SortOrder
    refundEstado?: SortOrder
    refundMonto?: SortOrder
    refundEn?: SortOrder
    refundMotivo?: SortOrder
    verificadaPorMeseroId?: SortOrder
    verificadaEn?: SortOrder
    aplicadoEnOrdenId?: SortOrder
    aplicadoEnPagoId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReservaAvgOrderByAggregateInput = {
    id?: SortOrder
    mesaId?: SortOrder
    monto?: SortOrder
    refundMonto?: SortOrder
    verificadaPorMeseroId?: SortOrder
    aplicadoEnOrdenId?: SortOrder
    aplicadoEnPagoId?: SortOrder
  }

  export type ReservaMaxOrderByAggregateInput = {
    id?: SortOrder
    mesaId?: SortOrder
    fechaHora?: SortOrder
    hastaHora?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    nota?: SortOrder
    monto?: SortOrder
    estado?: SortOrder
    pagoEstado?: SortOrder
    pagoMetodo?: SortOrder
    pagoReferencia?: SortOrder
    pagadoEn?: SortOrder
    canceladaEn?: SortOrder
    refundEstado?: SortOrder
    refundMonto?: SortOrder
    refundEn?: SortOrder
    refundMotivo?: SortOrder
    verificadaPorMeseroId?: SortOrder
    verificadaEn?: SortOrder
    aplicadoEnOrdenId?: SortOrder
    aplicadoEnPagoId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReservaMinOrderByAggregateInput = {
    id?: SortOrder
    mesaId?: SortOrder
    fechaHora?: SortOrder
    hastaHora?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    nota?: SortOrder
    monto?: SortOrder
    estado?: SortOrder
    pagoEstado?: SortOrder
    pagoMetodo?: SortOrder
    pagoReferencia?: SortOrder
    pagadoEn?: SortOrder
    canceladaEn?: SortOrder
    refundEstado?: SortOrder
    refundMonto?: SortOrder
    refundEn?: SortOrder
    refundMotivo?: SortOrder
    verificadaPorMeseroId?: SortOrder
    verificadaEn?: SortOrder
    aplicadoEnOrdenId?: SortOrder
    aplicadoEnPagoId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReservaSumOrderByAggregateInput = {
    id?: SortOrder
    mesaId?: SortOrder
    monto?: SortOrder
    refundMonto?: SortOrder
    verificadaPorMeseroId?: SortOrder
    aplicadoEnOrdenId?: SortOrder
    aplicadoEnPagoId?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumReservaEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstado | EnumReservaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstadoWithAggregatesFilter<$PrismaModel> | $Enums.ReservaEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaEstadoFilter<$PrismaModel>
    _max?: NestedEnumReservaEstadoFilter<$PrismaModel>
  }

  export type EnumPagoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PagoEstado | EnumPagoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumPagoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.PagoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPagoEstadoFilter<$PrismaModel>
    _max?: NestedEnumPagoEstadoFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumRefundEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RefundEstado | EnumRefundEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumRefundEstadoWithAggregatesFilter<$PrismaModel> | $Enums.RefundEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRefundEstadoFilter<$PrismaModel>
    _max?: NestedEnumRefundEstadoFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumOrdenEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.OrdenEstado | EnumOrdenEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumOrdenEstadoFilter<$PrismaModel> | $Enums.OrdenEstado
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type PedidoClienteNullableScalarRelationFilter = {
    is?: PedidoClienteWhereInput | null
    isNot?: PedidoClienteWhereInput | null
  }

  export type OrdenCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    mesa?: SortOrder
    fecha?: SortOrder
    finishedAt?: SortOrder
    durationSec?: SortOrder
    meseroId?: SortOrder
    estado?: SortOrder
    totalPagado?: SortOrder
    anticipo?: SortOrder
  }

  export type OrdenAvgOrderByAggregateInput = {
    id?: SortOrder
    mesa?: SortOrder
    durationSec?: SortOrder
    meseroId?: SortOrder
    totalPagado?: SortOrder
    anticipo?: SortOrder
  }

  export type OrdenMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    mesa?: SortOrder
    fecha?: SortOrder
    finishedAt?: SortOrder
    durationSec?: SortOrder
    meseroId?: SortOrder
    estado?: SortOrder
    totalPagado?: SortOrder
    anticipo?: SortOrder
  }

  export type OrdenMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    mesa?: SortOrder
    fecha?: SortOrder
    finishedAt?: SortOrder
    durationSec?: SortOrder
    meseroId?: SortOrder
    estado?: SortOrder
    totalPagado?: SortOrder
    anticipo?: SortOrder
  }

  export type OrdenSumOrderByAggregateInput = {
    id?: SortOrder
    mesa?: SortOrder
    durationSec?: SortOrder
    meseroId?: SortOrder
    totalPagado?: SortOrder
    anticipo?: SortOrder
  }

  export type EnumOrdenEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrdenEstado | EnumOrdenEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumOrdenEstadoWithAggregatesFilter<$PrismaModel> | $Enums.OrdenEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrdenEstadoFilter<$PrismaModel>
    _max?: NestedEnumOrdenEstadoFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type OrdenScalarRelationFilter = {
    is?: OrdenWhereInput
    isNot?: OrdenWhereInput
  }

  export type TicketVentaNullableScalarRelationFilter = {
    is?: TicketVentaWhereInput | null
    isNot?: TicketVentaWhereInput | null
  }

  export type OrdenItemCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    nota?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrder
    creadoEn?: SortOrder
    asignadoEn?: SortOrder
    preparandoEn?: SortOrder
    finalizadoEn?: SortOrder
    prioridad?: SortOrder
    pagado?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrder
    bartenderId?: SortOrder
    ticketVentaId?: SortOrder
  }

  export type OrdenItemAvgOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrder
    prioridad?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrder
    bartenderId?: SortOrder
    ticketVentaId?: SortOrder
  }

  export type OrdenItemMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    nota?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrder
    creadoEn?: SortOrder
    asignadoEn?: SortOrder
    preparandoEn?: SortOrder
    finalizadoEn?: SortOrder
    prioridad?: SortOrder
    pagado?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrder
    bartenderId?: SortOrder
    ticketVentaId?: SortOrder
  }

  export type OrdenItemMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    nota?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrder
    creadoEn?: SortOrder
    asignadoEn?: SortOrder
    preparandoEn?: SortOrder
    finalizadoEn?: SortOrder
    prioridad?: SortOrder
    pagado?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrder
    bartenderId?: SortOrder
    ticketVentaId?: SortOrder
  }

  export type OrdenItemSumOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    subtotal?: SortOrder
    prioridad?: SortOrder
    ordenId?: SortOrder
    chefId?: SortOrder
    bartenderId?: SortOrder
    ticketVentaId?: SortOrder
  }

  export type CocinaChefCountOrderByAggregateInput = {
    id?: SortOrder
    chefId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type CocinaChefAvgOrderByAggregateInput = {
    id?: SortOrder
    chefId?: SortOrder
  }

  export type CocinaChefMaxOrderByAggregateInput = {
    id?: SortOrder
    chefId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type CocinaChefMinOrderByAggregateInput = {
    id?: SortOrder
    chefId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type CocinaChefSumOrderByAggregateInput = {
    id?: SortOrder
    chefId?: SortOrder
  }

  export type BarraBartenderCountOrderByAggregateInput = {
    id?: SortOrder
    bartenderId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type BarraBartenderAvgOrderByAggregateInput = {
    id?: SortOrder
    bartenderId?: SortOrder
  }

  export type BarraBartenderMaxOrderByAggregateInput = {
    id?: SortOrder
    bartenderId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type BarraBartenderMinOrderByAggregateInput = {
    id?: SortOrder
    bartenderId?: SortOrder
    activo?: SortOrder
    lastSeen?: SortOrder
  }

  export type BarraBartenderSumOrderByAggregateInput = {
    id?: SortOrder
    bartenderId?: SortOrder
  }

  export type EnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumComprobanteEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.ComprobanteEstado | EnumComprobanteEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumComprobanteEstadoFilter<$PrismaModel> | $Enums.ComprobanteEstado
  }

  export type TicketVentaCountOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrder
    fechaPago?: SortOrder
    metodoPago?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    serie?: SortOrder
    numero?: SortOrder
    clienteNombre?: SortOrder
    clienteNit?: SortOrder
    snapshot?: SortOrder
    estado?: SortOrder
    anuladoEn?: SortOrder
    anuladoPorId?: SortOrder
    anuladoMotivo?: SortOrder
    posCorrelativo?: SortOrder
  }

  export type TicketVentaAvgOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    anuladoPorId?: SortOrder
  }

  export type TicketVentaMaxOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrder
    fechaPago?: SortOrder
    metodoPago?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    serie?: SortOrder
    numero?: SortOrder
    clienteNombre?: SortOrder
    clienteNit?: SortOrder
    estado?: SortOrder
    anuladoEn?: SortOrder
    anuladoPorId?: SortOrder
    anuladoMotivo?: SortOrder
    posCorrelativo?: SortOrder
  }

  export type TicketVentaMinOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrder
    fechaPago?: SortOrder
    metodoPago?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    serie?: SortOrder
    numero?: SortOrder
    clienteNombre?: SortOrder
    clienteNit?: SortOrder
    estado?: SortOrder
    anuladoEn?: SortOrder
    anuladoPorId?: SortOrder
    anuladoMotivo?: SortOrder
    posCorrelativo?: SortOrder
  }

  export type TicketVentaSumOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    cajeroId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    descuentos?: SortOrder
    totalAPagar?: SortOrder
    montoRecibido?: SortOrder
    cambio?: SortOrder
    anticipoAplicado?: SortOrder
    propina?: SortOrder
    anuladoPorId?: SortOrder
  }

  export type EnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumComprobanteEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComprobanteEstado | EnumComprobanteEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumComprobanteEstadoWithAggregatesFilter<$PrismaModel> | $Enums.ComprobanteEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComprobanteEstadoFilter<$PrismaModel>
    _max?: NestedEnumComprobanteEstadoFilter<$PrismaModel>
  }

  export type EnumEgresoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EgresoEstado | EnumEgresoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEgresoEstadoFilter<$PrismaModel> | $Enums.EgresoEstado
  }

  export type EgresoCajaCountOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    motivo?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    observacion?: SortOrder
  }

  export type EgresoCajaAvgOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    autorizadoPorId?: SortOrder
  }

  export type EgresoCajaMaxOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    motivo?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    observacion?: SortOrder
  }

  export type EgresoCajaMinOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    motivo?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    observacion?: SortOrder
  }

  export type EgresoCajaSumOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    monto?: SortOrder
    autorizadoPorId?: SortOrder
  }

  export type EnumEgresoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EgresoEstado | EnumEgresoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEgresoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.EgresoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEgresoEstadoFilter<$PrismaModel>
    _max?: NestedEnumEgresoEstadoFilter<$PrismaModel>
  }

  export type EnumTipoEntregaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoEntrega | EnumTipoEntregaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoEntregaFilter<$PrismaModel> | $Enums.TipoEntrega
  }

  export type EnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type CalificacionPedidoNullableScalarRelationFilter = {
    is?: CalificacionPedidoWhereInput | null
    isNot?: CalificacionPedidoWhereInput | null
  }

  export type OrdenNullableScalarRelationFilter = {
    is?: OrdenWhereInput | null
    isNot?: OrdenWhereInput | null
  }

  export type PedidoClienteItemListRelationFilter = {
    every?: PedidoClienteItemWhereInput
    some?: PedidoClienteItemWhereInput
    none?: PedidoClienteItemWhereInput
  }

  export type PedidoClienteItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoClienteCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    clienteEmail?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    repartidorId?: SortOrder
    tipoEntrega?: SortOrder
    metodoPago?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    receptorNombre?: SortOrder
    deliveryStatus?: SortOrder
    readyAt?: SortOrder
    assignedAt?: SortOrder
    startedAt?: SortOrder
    deliveredAt?: SortOrder
    total?: SortOrder
    ordenId?: SortOrder
  }

  export type PedidoClienteAvgOrderByAggregateInput = {
    id?: SortOrder
    repartidorId?: SortOrder
    total?: SortOrder
    ordenId?: SortOrder
  }

  export type PedidoClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    clienteEmail?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    repartidorId?: SortOrder
    tipoEntrega?: SortOrder
    metodoPago?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    receptorNombre?: SortOrder
    deliveryStatus?: SortOrder
    readyAt?: SortOrder
    assignedAt?: SortOrder
    startedAt?: SortOrder
    deliveredAt?: SortOrder
    total?: SortOrder
    ordenId?: SortOrder
  }

  export type PedidoClienteMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    clienteEmail?: SortOrder
    creadoEn?: SortOrder
    estado?: SortOrder
    repartidorId?: SortOrder
    tipoEntrega?: SortOrder
    metodoPago?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    receptorNombre?: SortOrder
    deliveryStatus?: SortOrder
    readyAt?: SortOrder
    assignedAt?: SortOrder
    startedAt?: SortOrder
    deliveredAt?: SortOrder
    total?: SortOrder
    ordenId?: SortOrder
  }

  export type PedidoClienteSumOrderByAggregateInput = {
    id?: SortOrder
    repartidorId?: SortOrder
    total?: SortOrder
    ordenId?: SortOrder
  }

  export type EnumTipoEntregaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoEntrega | EnumTipoEntregaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoEntregaWithAggregatesFilter<$PrismaModel> | $Enums.TipoEntrega
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoEntregaFilter<$PrismaModel>
    _max?: NestedEnumTipoEntregaFilter<$PrismaModel>
  }

  export type EnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type PedidoClienteScalarRelationFilter = {
    is?: PedidoClienteWhereInput
    isNot?: PedidoClienteWhereInput
  }

  export type ObservacionEntregaCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
    texto?: SortOrder
    createdAt?: SortOrder
  }

  export type ObservacionEntregaAvgOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
  }

  export type ObservacionEntregaMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
    texto?: SortOrder
    createdAt?: SortOrder
  }

  export type ObservacionEntregaMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
    texto?: SortOrder
    createdAt?: SortOrder
  }

  export type ObservacionEntregaSumOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    repartidorId?: SortOrder
  }

  export type PedidoClienteItemCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    nota?: SortOrder
  }

  export type PedidoClienteItemAvgOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
  }

  export type PedidoClienteItemMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    nota?: SortOrder
  }

  export type PedidoClienteItemMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
    nota?: SortOrder
  }

  export type PedidoClienteItemSumOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    platilloId?: SortOrder
    precio?: SortOrder
    qty?: SortOrder
  }

  export type MeseroNotifCountOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    ordenId?: SortOrder
    itemNombre?: SortOrder
    tipo?: SortOrder
    meseroId?: SortOrder
  }

  export type MeseroNotifAvgOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    meseroId?: SortOrder
  }

  export type MeseroNotifMaxOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    ordenId?: SortOrder
    itemNombre?: SortOrder
    tipo?: SortOrder
    meseroId?: SortOrder
  }

  export type MeseroNotifMinOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    ordenId?: SortOrder
    itemNombre?: SortOrder
    tipo?: SortOrder
    meseroId?: SortOrder
  }

  export type MeseroNotifSumOrderByAggregateInput = {
    id?: SortOrder
    ordenId?: SortOrder
    meseroId?: SortOrder
  }

  export type RepartidorNotifPedidoIdRepartidorIdTipoCompoundUniqueInput = {
    pedidoId: number
    repartidorId: number
    tipo: string
  }

  export type RepartidorNotifPedidoIdTipoCompoundUniqueInput = {
    pedidoId: number
    tipo: string
  }

  export type RepartidorNotifCountOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    repartidorId?: SortOrder
    pedidoId?: SortOrder
  }

  export type RepartidorNotifAvgOrderByAggregateInput = {
    id?: SortOrder
    repartidorId?: SortOrder
    pedidoId?: SortOrder
  }

  export type RepartidorNotifMaxOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    repartidorId?: SortOrder
    pedidoId?: SortOrder
  }

  export type RepartidorNotifMinOrderByAggregateInput = {
    id?: SortOrder
    creadoEn?: SortOrder
    visto?: SortOrder
    tipo?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    repartidorId?: SortOrder
    pedidoId?: SortOrder
  }

  export type RepartidorNotifSumOrderByAggregateInput = {
    id?: SortOrder
    repartidorId?: SortOrder
    pedidoId?: SortOrder
  }

  export type EnumCajaTurnoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.CajaTurnoEstado | EnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel> | $Enums.CajaTurnoEstado
  }

  export type CajaTurnoCountOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    estado?: SortOrder
    montoApertura?: SortOrder
    conteoInicial?: SortOrder
    solicitadoEn?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    montoCierre?: SortOrder
    conteoFinal?: SortOrder
    cierreSolicitadoEn?: SortOrder
    cierreAutorizadoPorId?: SortOrder
    cierreAutorizadoEn?: SortOrder
    cerradoEn?: SortOrder
  }

  export type CajaTurnoAvgOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    montoApertura?: SortOrder
    autorizadoPorId?: SortOrder
    montoCierre?: SortOrder
    cierreAutorizadoPorId?: SortOrder
  }

  export type CajaTurnoMaxOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    estado?: SortOrder
    montoApertura?: SortOrder
    solicitadoEn?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    montoCierre?: SortOrder
    cierreSolicitadoEn?: SortOrder
    cierreAutorizadoPorId?: SortOrder
    cierreAutorizadoEn?: SortOrder
    cerradoEn?: SortOrder
  }

  export type CajaTurnoMinOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    estado?: SortOrder
    montoApertura?: SortOrder
    solicitadoEn?: SortOrder
    autorizadoPorId?: SortOrder
    autorizadoEn?: SortOrder
    montoCierre?: SortOrder
    cierreSolicitadoEn?: SortOrder
    cierreAutorizadoPorId?: SortOrder
    cierreAutorizadoEn?: SortOrder
    cerradoEn?: SortOrder
  }

  export type CajaTurnoSumOrderByAggregateInput = {
    id?: SortOrder
    cajeroId?: SortOrder
    montoApertura?: SortOrder
    autorizadoPorId?: SortOrder
    montoCierre?: SortOrder
    cierreAutorizadoPorId?: SortOrder
  }

  export type EnumCajaTurnoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CajaTurnoEstado | EnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumCajaTurnoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.CajaTurnoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel>
    _max?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel>
  }

  export type CalificacionPedidoCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrder
    atencionCliente?: SortOrder
    comentario?: SortOrder
    comidaOpciones?: SortOrder
    repartidorOpciones?: SortOrder
    atencionOpciones?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type CalificacionPedidoAvgOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrder
    atencionCliente?: SortOrder
  }

  export type CalificacionPedidoMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrder
    atencionCliente?: SortOrder
    comentario?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type CalificacionPedidoMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrder
    atencionCliente?: SortOrder
    comentario?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type CalificacionPedidoSumOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    comida?: SortOrder
    repartidor?: SortOrder
    atencionCliente?: SortOrder
  }

  export type SettingCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SettingAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SettingMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SettingMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SettingSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    connect?: RolWhereUniqueInput
  }

  export type PermisoUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput> | PermisoUsuarioCreateWithoutUsuarioInput[] | PermisoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutUsuarioInput | PermisoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: PermisoUsuarioCreateManyUsuarioInputEnvelope
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
  }

  export type HistorialModificacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput> | HistorialModificacionCreateWithoutUsuarioInput[] | HistorialModificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutUsuarioInput | HistorialModificacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialModificacionCreateManyUsuarioInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type HistorialModificacionCreateNestedManyWithoutResponsableInput = {
    create?: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput> | HistorialModificacionCreateWithoutResponsableInput[] | HistorialModificacionUncheckedCreateWithoutResponsableInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutResponsableInput | HistorialModificacionCreateOrConnectWithoutResponsableInput[]
    createMany?: HistorialModificacionCreateManyResponsableInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type PasswordHistoryCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput> | PasswordHistoryCreateWithoutUserInput[] | PasswordHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordHistoryCreateOrConnectWithoutUserInput | PasswordHistoryCreateOrConnectWithoutUserInput[]
    createMany?: PasswordHistoryCreateManyUserInputEnvelope
    connect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
  }

  export type OrdenCreateNestedManyWithoutMeseroInput = {
    create?: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput> | OrdenCreateWithoutMeseroInput[] | OrdenUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: OrdenCreateOrConnectWithoutMeseroInput | OrdenCreateOrConnectWithoutMeseroInput[]
    createMany?: OrdenCreateManyMeseroInputEnvelope
    connect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
  }

  export type OrdenItemCreateNestedManyWithoutChefInput = {
    create?: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput> | OrdenItemCreateWithoutChefInput[] | OrdenItemUncheckedCreateWithoutChefInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutChefInput | OrdenItemCreateOrConnectWithoutChefInput[]
    createMany?: OrdenItemCreateManyChefInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type CocinaChefCreateNestedOneWithoutChefInput = {
    create?: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
    connectOrCreate?: CocinaChefCreateOrConnectWithoutChefInput
    connect?: CocinaChefWhereUniqueInput
  }

  export type OrdenItemCreateNestedManyWithoutBartenderInput = {
    create?: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput> | OrdenItemCreateWithoutBartenderInput[] | OrdenItemUncheckedCreateWithoutBartenderInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutBartenderInput | OrdenItemCreateOrConnectWithoutBartenderInput[]
    createMany?: OrdenItemCreateManyBartenderInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type BarraBartenderCreateNestedOneWithoutBartenderInput = {
    create?: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
    connectOrCreate?: BarraBartenderCreateOrConnectWithoutBartenderInput
    connect?: BarraBartenderWhereUniqueInput
  }

  export type EgresoCajaCreateNestedManyWithoutCajeroInput = {
    create?: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput> | EgresoCajaCreateWithoutCajeroInput[] | EgresoCajaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutCajeroInput | EgresoCajaCreateOrConnectWithoutCajeroInput[]
    createMany?: EgresoCajaCreateManyCajeroInputEnvelope
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
  }

  export type EgresoCajaCreateNestedManyWithoutAutorizadoPorInput = {
    create?: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput> | EgresoCajaCreateWithoutAutorizadoPorInput[] | EgresoCajaUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutAutorizadoPorInput | EgresoCajaCreateOrConnectWithoutAutorizadoPorInput[]
    createMany?: EgresoCajaCreateManyAutorizadoPorInputEnvelope
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
  }

  export type MeseroNotifCreateNestedManyWithoutMeseroInput = {
    create?: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput> | MeseroNotifCreateWithoutMeseroInput[] | MeseroNotifUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutMeseroInput | MeseroNotifCreateOrConnectWithoutMeseroInput[]
    createMany?: MeseroNotifCreateManyMeseroInputEnvelope
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
  }

  export type PedidoClienteCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput> | PedidoClienteCreateWithoutRepartidorInput[] | PedidoClienteUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorInput | PedidoClienteCreateOrConnectWithoutRepartidorInput[]
    createMany?: PedidoClienteCreateManyRepartidorInputEnvelope
    connect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
  }

  export type ObservacionEntregaCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput> | ObservacionEntregaCreateWithoutRepartidorInput[] | ObservacionEntregaUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutRepartidorInput | ObservacionEntregaCreateOrConnectWithoutRepartidorInput[]
    createMany?: ObservacionEntregaCreateManyRepartidorInputEnvelope
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
  }

  export type RepartidorNotifCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput> | RepartidorNotifCreateWithoutRepartidorInput[] | RepartidorNotifUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutRepartidorInput | RepartidorNotifCreateOrConnectWithoutRepartidorInput[]
    createMany?: RepartidorNotifCreateManyRepartidorInputEnvelope
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
  }

  export type TicketVentaCreateNestedManyWithoutCajeroInput = {
    create?: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput> | TicketVentaCreateWithoutCajeroInput[] | TicketVentaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutCajeroInput | TicketVentaCreateOrConnectWithoutCajeroInput[]
    createMany?: TicketVentaCreateManyCajeroInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type TicketVentaCreateNestedManyWithoutAnuladoPorInput = {
    create?: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput> | TicketVentaCreateWithoutAnuladoPorInput[] | TicketVentaUncheckedCreateWithoutAnuladoPorInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutAnuladoPorInput | TicketVentaCreateOrConnectWithoutAnuladoPorInput[]
    createMany?: TicketVentaCreateManyAnuladoPorInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type CajaTurnoCreateNestedManyWithoutCajeroInput = {
    create?: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput> | CajaTurnoCreateWithoutCajeroInput[] | CajaTurnoUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutCajeroInput | CajaTurnoCreateOrConnectWithoutCajeroInput[]
    createMany?: CajaTurnoCreateManyCajeroInputEnvelope
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
  }

  export type CajaTurnoCreateNestedManyWithoutAutorizadoPorInput = {
    create?: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput> | CajaTurnoCreateWithoutAutorizadoPorInput[] | CajaTurnoUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutAutorizadoPorInput | CajaTurnoCreateOrConnectWithoutAutorizadoPorInput[]
    createMany?: CajaTurnoCreateManyAutorizadoPorInputEnvelope
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
  }

  export type PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput> | PermisoUsuarioCreateWithoutUsuarioInput[] | PermisoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutUsuarioInput | PermisoUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: PermisoUsuarioCreateManyUsuarioInputEnvelope
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
  }

  export type HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput> | HistorialModificacionCreateWithoutUsuarioInput[] | HistorialModificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutUsuarioInput | HistorialModificacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialModificacionCreateManyUsuarioInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput = {
    create?: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput> | HistorialModificacionCreateWithoutResponsableInput[] | HistorialModificacionUncheckedCreateWithoutResponsableInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutResponsableInput | HistorialModificacionCreateOrConnectWithoutResponsableInput[]
    createMany?: HistorialModificacionCreateManyResponsableInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type PasswordHistoryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput> | PasswordHistoryCreateWithoutUserInput[] | PasswordHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordHistoryCreateOrConnectWithoutUserInput | PasswordHistoryCreateOrConnectWithoutUserInput[]
    createMany?: PasswordHistoryCreateManyUserInputEnvelope
    connect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
  }

  export type OrdenUncheckedCreateNestedManyWithoutMeseroInput = {
    create?: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput> | OrdenCreateWithoutMeseroInput[] | OrdenUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: OrdenCreateOrConnectWithoutMeseroInput | OrdenCreateOrConnectWithoutMeseroInput[]
    createMany?: OrdenCreateManyMeseroInputEnvelope
    connect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
  }

  export type OrdenItemUncheckedCreateNestedManyWithoutChefInput = {
    create?: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput> | OrdenItemCreateWithoutChefInput[] | OrdenItemUncheckedCreateWithoutChefInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutChefInput | OrdenItemCreateOrConnectWithoutChefInput[]
    createMany?: OrdenItemCreateManyChefInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type CocinaChefUncheckedCreateNestedOneWithoutChefInput = {
    create?: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
    connectOrCreate?: CocinaChefCreateOrConnectWithoutChefInput
    connect?: CocinaChefWhereUniqueInput
  }

  export type OrdenItemUncheckedCreateNestedManyWithoutBartenderInput = {
    create?: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput> | OrdenItemCreateWithoutBartenderInput[] | OrdenItemUncheckedCreateWithoutBartenderInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutBartenderInput | OrdenItemCreateOrConnectWithoutBartenderInput[]
    createMany?: OrdenItemCreateManyBartenderInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput = {
    create?: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
    connectOrCreate?: BarraBartenderCreateOrConnectWithoutBartenderInput
    connect?: BarraBartenderWhereUniqueInput
  }

  export type EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput = {
    create?: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput> | EgresoCajaCreateWithoutCajeroInput[] | EgresoCajaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutCajeroInput | EgresoCajaCreateOrConnectWithoutCajeroInput[]
    createMany?: EgresoCajaCreateManyCajeroInputEnvelope
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
  }

  export type EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput = {
    create?: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput> | EgresoCajaCreateWithoutAutorizadoPorInput[] | EgresoCajaUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutAutorizadoPorInput | EgresoCajaCreateOrConnectWithoutAutorizadoPorInput[]
    createMany?: EgresoCajaCreateManyAutorizadoPorInputEnvelope
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
  }

  export type MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput = {
    create?: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput> | MeseroNotifCreateWithoutMeseroInput[] | MeseroNotifUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutMeseroInput | MeseroNotifCreateOrConnectWithoutMeseroInput[]
    createMany?: MeseroNotifCreateManyMeseroInputEnvelope
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
  }

  export type PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput> | PedidoClienteCreateWithoutRepartidorInput[] | PedidoClienteUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorInput | PedidoClienteCreateOrConnectWithoutRepartidorInput[]
    createMany?: PedidoClienteCreateManyRepartidorInputEnvelope
    connect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
  }

  export type ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput> | ObservacionEntregaCreateWithoutRepartidorInput[] | ObservacionEntregaUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutRepartidorInput | ObservacionEntregaCreateOrConnectWithoutRepartidorInput[]
    createMany?: ObservacionEntregaCreateManyRepartidorInputEnvelope
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
  }

  export type RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput> | RepartidorNotifCreateWithoutRepartidorInput[] | RepartidorNotifUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutRepartidorInput | RepartidorNotifCreateOrConnectWithoutRepartidorInput[]
    createMany?: RepartidorNotifCreateManyRepartidorInputEnvelope
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
  }

  export type TicketVentaUncheckedCreateNestedManyWithoutCajeroInput = {
    create?: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput> | TicketVentaCreateWithoutCajeroInput[] | TicketVentaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutCajeroInput | TicketVentaCreateOrConnectWithoutCajeroInput[]
    createMany?: TicketVentaCreateManyCajeroInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput = {
    create?: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput> | TicketVentaCreateWithoutAnuladoPorInput[] | TicketVentaUncheckedCreateWithoutAnuladoPorInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutAnuladoPorInput | TicketVentaCreateOrConnectWithoutAnuladoPorInput[]
    createMany?: TicketVentaCreateManyAnuladoPorInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput = {
    create?: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput> | CajaTurnoCreateWithoutCajeroInput[] | CajaTurnoUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutCajeroInput | CajaTurnoCreateOrConnectWithoutCajeroInput[]
    createMany?: CajaTurnoCreateManyCajeroInputEnvelope
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
  }

  export type CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput = {
    create?: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput> | CajaTurnoCreateWithoutAutorizadoPorInput[] | CajaTurnoUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutAutorizadoPorInput | CajaTurnoCreateOrConnectWithoutAutorizadoPorInput[]
    createMany?: CajaTurnoCreateManyAutorizadoPorInputEnvelope
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type RolUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuariosInput
    upsert?: RolUpsertWithoutUsuariosInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutUsuariosInput, RolUpdateWithoutUsuariosInput>, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type PermisoUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput> | PermisoUsuarioCreateWithoutUsuarioInput[] | PermisoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutUsuarioInput | PermisoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: PermisoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | PermisoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PermisoUsuarioCreateManyUsuarioInputEnvelope
    set?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    disconnect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    delete?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    update?: PermisoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | PermisoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PermisoUsuarioUpdateManyWithWhereWithoutUsuarioInput | PermisoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
  }

  export type HistorialModificacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput> | HistorialModificacionCreateWithoutUsuarioInput[] | HistorialModificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutUsuarioInput | HistorialModificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutUsuarioInput | HistorialModificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialModificacionCreateManyUsuarioInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutUsuarioInput | HistorialModificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutUsuarioInput | HistorialModificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type HistorialModificacionUpdateManyWithoutResponsableNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput> | HistorialModificacionCreateWithoutResponsableInput[] | HistorialModificacionUncheckedCreateWithoutResponsableInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutResponsableInput | HistorialModificacionCreateOrConnectWithoutResponsableInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutResponsableInput | HistorialModificacionUpsertWithWhereUniqueWithoutResponsableInput[]
    createMany?: HistorialModificacionCreateManyResponsableInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutResponsableInput | HistorialModificacionUpdateWithWhereUniqueWithoutResponsableInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutResponsableInput | HistorialModificacionUpdateManyWithWhereWithoutResponsableInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type PasswordHistoryUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput> | PasswordHistoryCreateWithoutUserInput[] | PasswordHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordHistoryCreateOrConnectWithoutUserInput | PasswordHistoryCreateOrConnectWithoutUserInput[]
    upsert?: PasswordHistoryUpsertWithWhereUniqueWithoutUserInput | PasswordHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordHistoryCreateManyUserInputEnvelope
    set?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    disconnect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    delete?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    connect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    update?: PasswordHistoryUpdateWithWhereUniqueWithoutUserInput | PasswordHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordHistoryUpdateManyWithWhereWithoutUserInput | PasswordHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordHistoryScalarWhereInput | PasswordHistoryScalarWhereInput[]
  }

  export type OrdenUpdateManyWithoutMeseroNestedInput = {
    create?: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput> | OrdenCreateWithoutMeseroInput[] | OrdenUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: OrdenCreateOrConnectWithoutMeseroInput | OrdenCreateOrConnectWithoutMeseroInput[]
    upsert?: OrdenUpsertWithWhereUniqueWithoutMeseroInput | OrdenUpsertWithWhereUniqueWithoutMeseroInput[]
    createMany?: OrdenCreateManyMeseroInputEnvelope
    set?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    disconnect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    delete?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    connect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    update?: OrdenUpdateWithWhereUniqueWithoutMeseroInput | OrdenUpdateWithWhereUniqueWithoutMeseroInput[]
    updateMany?: OrdenUpdateManyWithWhereWithoutMeseroInput | OrdenUpdateManyWithWhereWithoutMeseroInput[]
    deleteMany?: OrdenScalarWhereInput | OrdenScalarWhereInput[]
  }

  export type OrdenItemUpdateManyWithoutChefNestedInput = {
    create?: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput> | OrdenItemCreateWithoutChefInput[] | OrdenItemUncheckedCreateWithoutChefInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutChefInput | OrdenItemCreateOrConnectWithoutChefInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutChefInput | OrdenItemUpsertWithWhereUniqueWithoutChefInput[]
    createMany?: OrdenItemCreateManyChefInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutChefInput | OrdenItemUpdateWithWhereUniqueWithoutChefInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutChefInput | OrdenItemUpdateManyWithWhereWithoutChefInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type CocinaChefUpdateOneWithoutChefNestedInput = {
    create?: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
    connectOrCreate?: CocinaChefCreateOrConnectWithoutChefInput
    upsert?: CocinaChefUpsertWithoutChefInput
    disconnect?: CocinaChefWhereInput | boolean
    delete?: CocinaChefWhereInput | boolean
    connect?: CocinaChefWhereUniqueInput
    update?: XOR<XOR<CocinaChefUpdateToOneWithWhereWithoutChefInput, CocinaChefUpdateWithoutChefInput>, CocinaChefUncheckedUpdateWithoutChefInput>
  }

  export type OrdenItemUpdateManyWithoutBartenderNestedInput = {
    create?: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput> | OrdenItemCreateWithoutBartenderInput[] | OrdenItemUncheckedCreateWithoutBartenderInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutBartenderInput | OrdenItemCreateOrConnectWithoutBartenderInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutBartenderInput | OrdenItemUpsertWithWhereUniqueWithoutBartenderInput[]
    createMany?: OrdenItemCreateManyBartenderInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutBartenderInput | OrdenItemUpdateWithWhereUniqueWithoutBartenderInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutBartenderInput | OrdenItemUpdateManyWithWhereWithoutBartenderInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type BarraBartenderUpdateOneWithoutBartenderNestedInput = {
    create?: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
    connectOrCreate?: BarraBartenderCreateOrConnectWithoutBartenderInput
    upsert?: BarraBartenderUpsertWithoutBartenderInput
    disconnect?: BarraBartenderWhereInput | boolean
    delete?: BarraBartenderWhereInput | boolean
    connect?: BarraBartenderWhereUniqueInput
    update?: XOR<XOR<BarraBartenderUpdateToOneWithWhereWithoutBartenderInput, BarraBartenderUpdateWithoutBartenderInput>, BarraBartenderUncheckedUpdateWithoutBartenderInput>
  }

  export type EgresoCajaUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput> | EgresoCajaCreateWithoutCajeroInput[] | EgresoCajaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutCajeroInput | EgresoCajaCreateOrConnectWithoutCajeroInput[]
    upsert?: EgresoCajaUpsertWithWhereUniqueWithoutCajeroInput | EgresoCajaUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: EgresoCajaCreateManyCajeroInputEnvelope
    set?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    disconnect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    delete?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    update?: EgresoCajaUpdateWithWhereUniqueWithoutCajeroInput | EgresoCajaUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: EgresoCajaUpdateManyWithWhereWithoutCajeroInput | EgresoCajaUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
  }

  export type EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput = {
    create?: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput> | EgresoCajaCreateWithoutAutorizadoPorInput[] | EgresoCajaUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutAutorizadoPorInput | EgresoCajaCreateOrConnectWithoutAutorizadoPorInput[]
    upsert?: EgresoCajaUpsertWithWhereUniqueWithoutAutorizadoPorInput | EgresoCajaUpsertWithWhereUniqueWithoutAutorizadoPorInput[]
    createMany?: EgresoCajaCreateManyAutorizadoPorInputEnvelope
    set?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    disconnect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    delete?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    update?: EgresoCajaUpdateWithWhereUniqueWithoutAutorizadoPorInput | EgresoCajaUpdateWithWhereUniqueWithoutAutorizadoPorInput[]
    updateMany?: EgresoCajaUpdateManyWithWhereWithoutAutorizadoPorInput | EgresoCajaUpdateManyWithWhereWithoutAutorizadoPorInput[]
    deleteMany?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
  }

  export type MeseroNotifUpdateManyWithoutMeseroNestedInput = {
    create?: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput> | MeseroNotifCreateWithoutMeseroInput[] | MeseroNotifUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutMeseroInput | MeseroNotifCreateOrConnectWithoutMeseroInput[]
    upsert?: MeseroNotifUpsertWithWhereUniqueWithoutMeseroInput | MeseroNotifUpsertWithWhereUniqueWithoutMeseroInput[]
    createMany?: MeseroNotifCreateManyMeseroInputEnvelope
    set?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    disconnect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    delete?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    update?: MeseroNotifUpdateWithWhereUniqueWithoutMeseroInput | MeseroNotifUpdateWithWhereUniqueWithoutMeseroInput[]
    updateMany?: MeseroNotifUpdateManyWithWhereWithoutMeseroInput | MeseroNotifUpdateManyWithWhereWithoutMeseroInput[]
    deleteMany?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
  }

  export type PedidoClienteUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput> | PedidoClienteCreateWithoutRepartidorInput[] | PedidoClienteUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorInput | PedidoClienteCreateOrConnectWithoutRepartidorInput[]
    upsert?: PedidoClienteUpsertWithWhereUniqueWithoutRepartidorInput | PedidoClienteUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: PedidoClienteCreateManyRepartidorInputEnvelope
    set?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    disconnect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    delete?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    connect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    update?: PedidoClienteUpdateWithWhereUniqueWithoutRepartidorInput | PedidoClienteUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: PedidoClienteUpdateManyWithWhereWithoutRepartidorInput | PedidoClienteUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: PedidoClienteScalarWhereInput | PedidoClienteScalarWhereInput[]
  }

  export type ObservacionEntregaUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput> | ObservacionEntregaCreateWithoutRepartidorInput[] | ObservacionEntregaUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutRepartidorInput | ObservacionEntregaCreateOrConnectWithoutRepartidorInput[]
    upsert?: ObservacionEntregaUpsertWithWhereUniqueWithoutRepartidorInput | ObservacionEntregaUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: ObservacionEntregaCreateManyRepartidorInputEnvelope
    set?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    disconnect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    delete?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    update?: ObservacionEntregaUpdateWithWhereUniqueWithoutRepartidorInput | ObservacionEntregaUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: ObservacionEntregaUpdateManyWithWhereWithoutRepartidorInput | ObservacionEntregaUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
  }

  export type RepartidorNotifUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput> | RepartidorNotifCreateWithoutRepartidorInput[] | RepartidorNotifUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutRepartidorInput | RepartidorNotifCreateOrConnectWithoutRepartidorInput[]
    upsert?: RepartidorNotifUpsertWithWhereUniqueWithoutRepartidorInput | RepartidorNotifUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: RepartidorNotifCreateManyRepartidorInputEnvelope
    set?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    disconnect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    delete?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    update?: RepartidorNotifUpdateWithWhereUniqueWithoutRepartidorInput | RepartidorNotifUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: RepartidorNotifUpdateManyWithWhereWithoutRepartidorInput | RepartidorNotifUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
  }

  export type TicketVentaUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput> | TicketVentaCreateWithoutCajeroInput[] | TicketVentaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutCajeroInput | TicketVentaCreateOrConnectWithoutCajeroInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutCajeroInput | TicketVentaUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: TicketVentaCreateManyCajeroInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutCajeroInput | TicketVentaUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutCajeroInput | TicketVentaUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type TicketVentaUpdateManyWithoutAnuladoPorNestedInput = {
    create?: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput> | TicketVentaCreateWithoutAnuladoPorInput[] | TicketVentaUncheckedCreateWithoutAnuladoPorInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutAnuladoPorInput | TicketVentaCreateOrConnectWithoutAnuladoPorInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutAnuladoPorInput | TicketVentaUpsertWithWhereUniqueWithoutAnuladoPorInput[]
    createMany?: TicketVentaCreateManyAnuladoPorInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutAnuladoPorInput | TicketVentaUpdateWithWhereUniqueWithoutAnuladoPorInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutAnuladoPorInput | TicketVentaUpdateManyWithWhereWithoutAnuladoPorInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type CajaTurnoUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput> | CajaTurnoCreateWithoutCajeroInput[] | CajaTurnoUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutCajeroInput | CajaTurnoCreateOrConnectWithoutCajeroInput[]
    upsert?: CajaTurnoUpsertWithWhereUniqueWithoutCajeroInput | CajaTurnoUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: CajaTurnoCreateManyCajeroInputEnvelope
    set?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    disconnect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    delete?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    update?: CajaTurnoUpdateWithWhereUniqueWithoutCajeroInput | CajaTurnoUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: CajaTurnoUpdateManyWithWhereWithoutCajeroInput | CajaTurnoUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
  }

  export type CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput = {
    create?: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput> | CajaTurnoCreateWithoutAutorizadoPorInput[] | CajaTurnoUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutAutorizadoPorInput | CajaTurnoCreateOrConnectWithoutAutorizadoPorInput[]
    upsert?: CajaTurnoUpsertWithWhereUniqueWithoutAutorizadoPorInput | CajaTurnoUpsertWithWhereUniqueWithoutAutorizadoPorInput[]
    createMany?: CajaTurnoCreateManyAutorizadoPorInputEnvelope
    set?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    disconnect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    delete?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    update?: CajaTurnoUpdateWithWhereUniqueWithoutAutorizadoPorInput | CajaTurnoUpdateWithWhereUniqueWithoutAutorizadoPorInput[]
    updateMany?: CajaTurnoUpdateManyWithWhereWithoutAutorizadoPorInput | CajaTurnoUpdateManyWithWhereWithoutAutorizadoPorInput[]
    deleteMany?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput> | PermisoUsuarioCreateWithoutUsuarioInput[] | PermisoUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutUsuarioInput | PermisoUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: PermisoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | PermisoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PermisoUsuarioCreateManyUsuarioInputEnvelope
    set?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    disconnect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    delete?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    update?: PermisoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | PermisoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PermisoUsuarioUpdateManyWithWhereWithoutUsuarioInput | PermisoUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput> | HistorialModificacionCreateWithoutUsuarioInput[] | HistorialModificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutUsuarioInput | HistorialModificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutUsuarioInput | HistorialModificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialModificacionCreateManyUsuarioInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutUsuarioInput | HistorialModificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutUsuarioInput | HistorialModificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput> | HistorialModificacionCreateWithoutResponsableInput[] | HistorialModificacionUncheckedCreateWithoutResponsableInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutResponsableInput | HistorialModificacionCreateOrConnectWithoutResponsableInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutResponsableInput | HistorialModificacionUpsertWithWhereUniqueWithoutResponsableInput[]
    createMany?: HistorialModificacionCreateManyResponsableInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutResponsableInput | HistorialModificacionUpdateWithWhereUniqueWithoutResponsableInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutResponsableInput | HistorialModificacionUpdateManyWithWhereWithoutResponsableInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput> | PasswordHistoryCreateWithoutUserInput[] | PasswordHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordHistoryCreateOrConnectWithoutUserInput | PasswordHistoryCreateOrConnectWithoutUserInput[]
    upsert?: PasswordHistoryUpsertWithWhereUniqueWithoutUserInput | PasswordHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordHistoryCreateManyUserInputEnvelope
    set?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    disconnect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    delete?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    connect?: PasswordHistoryWhereUniqueInput | PasswordHistoryWhereUniqueInput[]
    update?: PasswordHistoryUpdateWithWhereUniqueWithoutUserInput | PasswordHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordHistoryUpdateManyWithWhereWithoutUserInput | PasswordHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordHistoryScalarWhereInput | PasswordHistoryScalarWhereInput[]
  }

  export type OrdenUncheckedUpdateManyWithoutMeseroNestedInput = {
    create?: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput> | OrdenCreateWithoutMeseroInput[] | OrdenUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: OrdenCreateOrConnectWithoutMeseroInput | OrdenCreateOrConnectWithoutMeseroInput[]
    upsert?: OrdenUpsertWithWhereUniqueWithoutMeseroInput | OrdenUpsertWithWhereUniqueWithoutMeseroInput[]
    createMany?: OrdenCreateManyMeseroInputEnvelope
    set?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    disconnect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    delete?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    connect?: OrdenWhereUniqueInput | OrdenWhereUniqueInput[]
    update?: OrdenUpdateWithWhereUniqueWithoutMeseroInput | OrdenUpdateWithWhereUniqueWithoutMeseroInput[]
    updateMany?: OrdenUpdateManyWithWhereWithoutMeseroInput | OrdenUpdateManyWithWhereWithoutMeseroInput[]
    deleteMany?: OrdenScalarWhereInput | OrdenScalarWhereInput[]
  }

  export type OrdenItemUncheckedUpdateManyWithoutChefNestedInput = {
    create?: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput> | OrdenItemCreateWithoutChefInput[] | OrdenItemUncheckedCreateWithoutChefInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutChefInput | OrdenItemCreateOrConnectWithoutChefInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutChefInput | OrdenItemUpsertWithWhereUniqueWithoutChefInput[]
    createMany?: OrdenItemCreateManyChefInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutChefInput | OrdenItemUpdateWithWhereUniqueWithoutChefInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutChefInput | OrdenItemUpdateManyWithWhereWithoutChefInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type CocinaChefUncheckedUpdateOneWithoutChefNestedInput = {
    create?: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
    connectOrCreate?: CocinaChefCreateOrConnectWithoutChefInput
    upsert?: CocinaChefUpsertWithoutChefInput
    disconnect?: CocinaChefWhereInput | boolean
    delete?: CocinaChefWhereInput | boolean
    connect?: CocinaChefWhereUniqueInput
    update?: XOR<XOR<CocinaChefUpdateToOneWithWhereWithoutChefInput, CocinaChefUpdateWithoutChefInput>, CocinaChefUncheckedUpdateWithoutChefInput>
  }

  export type OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput = {
    create?: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput> | OrdenItemCreateWithoutBartenderInput[] | OrdenItemUncheckedCreateWithoutBartenderInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutBartenderInput | OrdenItemCreateOrConnectWithoutBartenderInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutBartenderInput | OrdenItemUpsertWithWhereUniqueWithoutBartenderInput[]
    createMany?: OrdenItemCreateManyBartenderInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutBartenderInput | OrdenItemUpdateWithWhereUniqueWithoutBartenderInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutBartenderInput | OrdenItemUpdateManyWithWhereWithoutBartenderInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput = {
    create?: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
    connectOrCreate?: BarraBartenderCreateOrConnectWithoutBartenderInput
    upsert?: BarraBartenderUpsertWithoutBartenderInput
    disconnect?: BarraBartenderWhereInput | boolean
    delete?: BarraBartenderWhereInput | boolean
    connect?: BarraBartenderWhereUniqueInput
    update?: XOR<XOR<BarraBartenderUpdateToOneWithWhereWithoutBartenderInput, BarraBartenderUpdateWithoutBartenderInput>, BarraBartenderUncheckedUpdateWithoutBartenderInput>
  }

  export type EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput> | EgresoCajaCreateWithoutCajeroInput[] | EgresoCajaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutCajeroInput | EgresoCajaCreateOrConnectWithoutCajeroInput[]
    upsert?: EgresoCajaUpsertWithWhereUniqueWithoutCajeroInput | EgresoCajaUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: EgresoCajaCreateManyCajeroInputEnvelope
    set?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    disconnect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    delete?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    update?: EgresoCajaUpdateWithWhereUniqueWithoutCajeroInput | EgresoCajaUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: EgresoCajaUpdateManyWithWhereWithoutCajeroInput | EgresoCajaUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
  }

  export type EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput = {
    create?: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput> | EgresoCajaCreateWithoutAutorizadoPorInput[] | EgresoCajaUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: EgresoCajaCreateOrConnectWithoutAutorizadoPorInput | EgresoCajaCreateOrConnectWithoutAutorizadoPorInput[]
    upsert?: EgresoCajaUpsertWithWhereUniqueWithoutAutorizadoPorInput | EgresoCajaUpsertWithWhereUniqueWithoutAutorizadoPorInput[]
    createMany?: EgresoCajaCreateManyAutorizadoPorInputEnvelope
    set?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    disconnect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    delete?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    connect?: EgresoCajaWhereUniqueInput | EgresoCajaWhereUniqueInput[]
    update?: EgresoCajaUpdateWithWhereUniqueWithoutAutorizadoPorInput | EgresoCajaUpdateWithWhereUniqueWithoutAutorizadoPorInput[]
    updateMany?: EgresoCajaUpdateManyWithWhereWithoutAutorizadoPorInput | EgresoCajaUpdateManyWithWhereWithoutAutorizadoPorInput[]
    deleteMany?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
  }

  export type MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput = {
    create?: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput> | MeseroNotifCreateWithoutMeseroInput[] | MeseroNotifUncheckedCreateWithoutMeseroInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutMeseroInput | MeseroNotifCreateOrConnectWithoutMeseroInput[]
    upsert?: MeseroNotifUpsertWithWhereUniqueWithoutMeseroInput | MeseroNotifUpsertWithWhereUniqueWithoutMeseroInput[]
    createMany?: MeseroNotifCreateManyMeseroInputEnvelope
    set?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    disconnect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    delete?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    update?: MeseroNotifUpdateWithWhereUniqueWithoutMeseroInput | MeseroNotifUpdateWithWhereUniqueWithoutMeseroInput[]
    updateMany?: MeseroNotifUpdateManyWithWhereWithoutMeseroInput | MeseroNotifUpdateManyWithWhereWithoutMeseroInput[]
    deleteMany?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
  }

  export type PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput> | PedidoClienteCreateWithoutRepartidorInput[] | PedidoClienteUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorInput | PedidoClienteCreateOrConnectWithoutRepartidorInput[]
    upsert?: PedidoClienteUpsertWithWhereUniqueWithoutRepartidorInput | PedidoClienteUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: PedidoClienteCreateManyRepartidorInputEnvelope
    set?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    disconnect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    delete?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    connect?: PedidoClienteWhereUniqueInput | PedidoClienteWhereUniqueInput[]
    update?: PedidoClienteUpdateWithWhereUniqueWithoutRepartidorInput | PedidoClienteUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: PedidoClienteUpdateManyWithWhereWithoutRepartidorInput | PedidoClienteUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: PedidoClienteScalarWhereInput | PedidoClienteScalarWhereInput[]
  }

  export type ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput> | ObservacionEntregaCreateWithoutRepartidorInput[] | ObservacionEntregaUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutRepartidorInput | ObservacionEntregaCreateOrConnectWithoutRepartidorInput[]
    upsert?: ObservacionEntregaUpsertWithWhereUniqueWithoutRepartidorInput | ObservacionEntregaUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: ObservacionEntregaCreateManyRepartidorInputEnvelope
    set?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    disconnect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    delete?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    update?: ObservacionEntregaUpdateWithWhereUniqueWithoutRepartidorInput | ObservacionEntregaUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: ObservacionEntregaUpdateManyWithWhereWithoutRepartidorInput | ObservacionEntregaUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
  }

  export type RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput> | RepartidorNotifCreateWithoutRepartidorInput[] | RepartidorNotifUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutRepartidorInput | RepartidorNotifCreateOrConnectWithoutRepartidorInput[]
    upsert?: RepartidorNotifUpsertWithWhereUniqueWithoutRepartidorInput | RepartidorNotifUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: RepartidorNotifCreateManyRepartidorInputEnvelope
    set?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    disconnect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    delete?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    update?: RepartidorNotifUpdateWithWhereUniqueWithoutRepartidorInput | RepartidorNotifUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: RepartidorNotifUpdateManyWithWhereWithoutRepartidorInput | RepartidorNotifUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
  }

  export type TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput> | TicketVentaCreateWithoutCajeroInput[] | TicketVentaUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutCajeroInput | TicketVentaCreateOrConnectWithoutCajeroInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutCajeroInput | TicketVentaUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: TicketVentaCreateManyCajeroInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutCajeroInput | TicketVentaUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutCajeroInput | TicketVentaUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput = {
    create?: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput> | TicketVentaCreateWithoutAnuladoPorInput[] | TicketVentaUncheckedCreateWithoutAnuladoPorInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutAnuladoPorInput | TicketVentaCreateOrConnectWithoutAnuladoPorInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutAnuladoPorInput | TicketVentaUpsertWithWhereUniqueWithoutAnuladoPorInput[]
    createMany?: TicketVentaCreateManyAnuladoPorInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutAnuladoPorInput | TicketVentaUpdateWithWhereUniqueWithoutAnuladoPorInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutAnuladoPorInput | TicketVentaUpdateManyWithWhereWithoutAnuladoPorInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput = {
    create?: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput> | CajaTurnoCreateWithoutCajeroInput[] | CajaTurnoUncheckedCreateWithoutCajeroInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutCajeroInput | CajaTurnoCreateOrConnectWithoutCajeroInput[]
    upsert?: CajaTurnoUpsertWithWhereUniqueWithoutCajeroInput | CajaTurnoUpsertWithWhereUniqueWithoutCajeroInput[]
    createMany?: CajaTurnoCreateManyCajeroInputEnvelope
    set?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    disconnect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    delete?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    update?: CajaTurnoUpdateWithWhereUniqueWithoutCajeroInput | CajaTurnoUpdateWithWhereUniqueWithoutCajeroInput[]
    updateMany?: CajaTurnoUpdateManyWithWhereWithoutCajeroInput | CajaTurnoUpdateManyWithWhereWithoutCajeroInput[]
    deleteMany?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
  }

  export type CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput = {
    create?: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput> | CajaTurnoCreateWithoutAutorizadoPorInput[] | CajaTurnoUncheckedCreateWithoutAutorizadoPorInput[]
    connectOrCreate?: CajaTurnoCreateOrConnectWithoutAutorizadoPorInput | CajaTurnoCreateOrConnectWithoutAutorizadoPorInput[]
    upsert?: CajaTurnoUpsertWithWhereUniqueWithoutAutorizadoPorInput | CajaTurnoUpsertWithWhereUniqueWithoutAutorizadoPorInput[]
    createMany?: CajaTurnoCreateManyAutorizadoPorInputEnvelope
    set?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    disconnect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    delete?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    connect?: CajaTurnoWhereUniqueInput | CajaTurnoWhereUniqueInput[]
    update?: CajaTurnoUpdateWithWhereUniqueWithoutAutorizadoPorInput | CajaTurnoUpdateWithWhereUniqueWithoutAutorizadoPorInput[]
    updateMany?: CajaTurnoUpdateManyWithWhereWithoutAutorizadoPorInput | CajaTurnoUpdateManyWithWhereWithoutAutorizadoPorInput[]
    deleteMany?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
  }

  export type UsuarioCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type PermisoPorRolCreateNestedManyWithoutRolInput = {
    create?: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput> | PermisoPorRolCreateWithoutRolInput[] | PermisoPorRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutRolInput | PermisoPorRolCreateOrConnectWithoutRolInput[]
    createMany?: PermisoPorRolCreateManyRolInputEnvelope
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type PermisoPorRolUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput> | PermisoPorRolCreateWithoutRolInput[] | PermisoPorRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutRolInput | PermisoPorRolCreateOrConnectWithoutRolInput[]
    createMany?: PermisoPorRolCreateManyRolInputEnvelope
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type PermisoPorRolUpdateManyWithoutRolNestedInput = {
    create?: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput> | PermisoPorRolCreateWithoutRolInput[] | PermisoPorRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutRolInput | PermisoPorRolCreateOrConnectWithoutRolInput[]
    upsert?: PermisoPorRolUpsertWithWhereUniqueWithoutRolInput | PermisoPorRolUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: PermisoPorRolCreateManyRolInputEnvelope
    set?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    disconnect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    delete?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    update?: PermisoPorRolUpdateWithWhereUniqueWithoutRolInput | PermisoPorRolUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: PermisoPorRolUpdateManyWithWhereWithoutRolInput | PermisoPorRolUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type PermisoPorRolUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput> | PermisoPorRolCreateWithoutRolInput[] | PermisoPorRolUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutRolInput | PermisoPorRolCreateOrConnectWithoutRolInput[]
    upsert?: PermisoPorRolUpsertWithWhereUniqueWithoutRolInput | PermisoPorRolUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: PermisoPorRolCreateManyRolInputEnvelope
    set?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    disconnect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    delete?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    update?: PermisoPorRolUpdateWithWhereUniqueWithoutRolInput | PermisoPorRolUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: PermisoPorRolUpdateManyWithWhereWithoutRolInput | PermisoPorRolUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
  }

  export type PermisoPorRolCreateNestedManyWithoutPermisoInput = {
    create?: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput> | PermisoPorRolCreateWithoutPermisoInput[] | PermisoPorRolUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutPermisoInput | PermisoPorRolCreateOrConnectWithoutPermisoInput[]
    createMany?: PermisoPorRolCreateManyPermisoInputEnvelope
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
  }

  export type PermisoUsuarioCreateNestedManyWithoutPermisoInput = {
    create?: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput> | PermisoUsuarioCreateWithoutPermisoInput[] | PermisoUsuarioUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutPermisoInput | PermisoUsuarioCreateOrConnectWithoutPermisoInput[]
    createMany?: PermisoUsuarioCreateManyPermisoInputEnvelope
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
  }

  export type PermisoPorRolUncheckedCreateNestedManyWithoutPermisoInput = {
    create?: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput> | PermisoPorRolCreateWithoutPermisoInput[] | PermisoPorRolUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutPermisoInput | PermisoPorRolCreateOrConnectWithoutPermisoInput[]
    createMany?: PermisoPorRolCreateManyPermisoInputEnvelope
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
  }

  export type PermisoUsuarioUncheckedCreateNestedManyWithoutPermisoInput = {
    create?: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput> | PermisoUsuarioCreateWithoutPermisoInput[] | PermisoUsuarioUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutPermisoInput | PermisoUsuarioCreateOrConnectWithoutPermisoInput[]
    createMany?: PermisoUsuarioCreateManyPermisoInputEnvelope
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
  }

  export type PermisoPorRolUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput> | PermisoPorRolCreateWithoutPermisoInput[] | PermisoPorRolUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutPermisoInput | PermisoPorRolCreateOrConnectWithoutPermisoInput[]
    upsert?: PermisoPorRolUpsertWithWhereUniqueWithoutPermisoInput | PermisoPorRolUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: PermisoPorRolCreateManyPermisoInputEnvelope
    set?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    disconnect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    delete?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    update?: PermisoPorRolUpdateWithWhereUniqueWithoutPermisoInput | PermisoPorRolUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: PermisoPorRolUpdateManyWithWhereWithoutPermisoInput | PermisoPorRolUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
  }

  export type PermisoUsuarioUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput> | PermisoUsuarioCreateWithoutPermisoInput[] | PermisoUsuarioUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutPermisoInput | PermisoUsuarioCreateOrConnectWithoutPermisoInput[]
    upsert?: PermisoUsuarioUpsertWithWhereUniqueWithoutPermisoInput | PermisoUsuarioUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: PermisoUsuarioCreateManyPermisoInputEnvelope
    set?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    disconnect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    delete?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    update?: PermisoUsuarioUpdateWithWhereUniqueWithoutPermisoInput | PermisoUsuarioUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: PermisoUsuarioUpdateManyWithWhereWithoutPermisoInput | PermisoUsuarioUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
  }

  export type PermisoPorRolUncheckedUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput> | PermisoPorRolCreateWithoutPermisoInput[] | PermisoPorRolUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoPorRolCreateOrConnectWithoutPermisoInput | PermisoPorRolCreateOrConnectWithoutPermisoInput[]
    upsert?: PermisoPorRolUpsertWithWhereUniqueWithoutPermisoInput | PermisoPorRolUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: PermisoPorRolCreateManyPermisoInputEnvelope
    set?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    disconnect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    delete?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    connect?: PermisoPorRolWhereUniqueInput | PermisoPorRolWhereUniqueInput[]
    update?: PermisoPorRolUpdateWithWhereUniqueWithoutPermisoInput | PermisoPorRolUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: PermisoPorRolUpdateManyWithWhereWithoutPermisoInput | PermisoPorRolUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
  }

  export type PermisoUsuarioUncheckedUpdateManyWithoutPermisoNestedInput = {
    create?: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput> | PermisoUsuarioCreateWithoutPermisoInput[] | PermisoUsuarioUncheckedCreateWithoutPermisoInput[]
    connectOrCreate?: PermisoUsuarioCreateOrConnectWithoutPermisoInput | PermisoUsuarioCreateOrConnectWithoutPermisoInput[]
    upsert?: PermisoUsuarioUpsertWithWhereUniqueWithoutPermisoInput | PermisoUsuarioUpsertWithWhereUniqueWithoutPermisoInput[]
    createMany?: PermisoUsuarioCreateManyPermisoInputEnvelope
    set?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    disconnect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    delete?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    connect?: PermisoUsuarioWhereUniqueInput | PermisoUsuarioWhereUniqueInput[]
    update?: PermisoUsuarioUpdateWithWhereUniqueWithoutPermisoInput | PermisoUsuarioUpdateWithWhereUniqueWithoutPermisoInput[]
    updateMany?: PermisoUsuarioUpdateManyWithWhereWithoutPermisoInput | PermisoUsuarioUpdateManyWithWhereWithoutPermisoInput[]
    deleteMany?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
  }

  export type PermisoCreateNestedOneWithoutRolesInput = {
    create?: XOR<PermisoCreateWithoutRolesInput, PermisoUncheckedCreateWithoutRolesInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutRolesInput
    connect?: PermisoWhereUniqueInput
  }

  export type RolCreateNestedOneWithoutPermisosInput = {
    create?: XOR<RolCreateWithoutPermisosInput, RolUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: RolCreateOrConnectWithoutPermisosInput
    connect?: RolWhereUniqueInput
  }

  export type PermisoUpdateOneRequiredWithoutRolesNestedInput = {
    create?: XOR<PermisoCreateWithoutRolesInput, PermisoUncheckedCreateWithoutRolesInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutRolesInput
    upsert?: PermisoUpsertWithoutRolesInput
    connect?: PermisoWhereUniqueInput
    update?: XOR<XOR<PermisoUpdateToOneWithWhereWithoutRolesInput, PermisoUpdateWithoutRolesInput>, PermisoUncheckedUpdateWithoutRolesInput>
  }

  export type RolUpdateOneRequiredWithoutPermisosNestedInput = {
    create?: XOR<RolCreateWithoutPermisosInput, RolUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: RolCreateOrConnectWithoutPermisosInput
    upsert?: RolUpsertWithoutPermisosInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutPermisosInput, RolUpdateWithoutPermisosInput>, RolUncheckedUpdateWithoutPermisosInput>
  }

  export type UsuarioCreateNestedOneWithoutPermisosInput = {
    create?: XOR<UsuarioCreateWithoutPermisosInput, UsuarioUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPermisosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PermisoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<PermisoCreateWithoutUsuariosInput, PermisoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutUsuariosInput
    connect?: PermisoWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutPermisosNestedInput = {
    create?: XOR<UsuarioCreateWithoutPermisosInput, UsuarioUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPermisosInput
    upsert?: UsuarioUpsertWithoutPermisosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPermisosInput, UsuarioUpdateWithoutPermisosInput>, UsuarioUncheckedUpdateWithoutPermisosInput>
  }

  export type PermisoUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<PermisoCreateWithoutUsuariosInput, PermisoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PermisoCreateOrConnectWithoutUsuariosInput
    upsert?: PermisoUpsertWithoutUsuariosInput
    connect?: PermisoWhereUniqueInput
    update?: XOR<XOR<PermisoUpdateToOneWithWhereWithoutUsuariosInput, PermisoUpdateWithoutUsuariosInput>, PermisoUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioCreateNestedOneWithoutPasswordHistoryInput = {
    create?: XOR<UsuarioCreateWithoutPasswordHistoryInput, UsuarioUncheckedCreateWithoutPasswordHistoryInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPasswordHistoryInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutPasswordHistoryNestedInput = {
    create?: XOR<UsuarioCreateWithoutPasswordHistoryInput, UsuarioUncheckedCreateWithoutPasswordHistoryInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPasswordHistoryInput
    upsert?: UsuarioUpsertWithoutPasswordHistoryInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPasswordHistoryInput, UsuarioUpdateWithoutPasswordHistoryInput>, UsuarioUncheckedUpdateWithoutPasswordHistoryInput>
  }

  export type PlatilloCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput> | PlatilloCreateWithoutCategoriaInput[] | PlatilloUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: PlatilloCreateOrConnectWithoutCategoriaInput | PlatilloCreateOrConnectWithoutCategoriaInput[]
    createMany?: PlatilloCreateManyCategoriaInputEnvelope
    connect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
  }

  export type PlatilloUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput> | PlatilloCreateWithoutCategoriaInput[] | PlatilloUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: PlatilloCreateOrConnectWithoutCategoriaInput | PlatilloCreateOrConnectWithoutCategoriaInput[]
    createMany?: PlatilloCreateManyCategoriaInputEnvelope
    connect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
  }

  export type EnumCategoriaTipoFieldUpdateOperationsInput = {
    set?: $Enums.CategoriaTipo
  }

  export type PlatilloUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput> | PlatilloCreateWithoutCategoriaInput[] | PlatilloUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: PlatilloCreateOrConnectWithoutCategoriaInput | PlatilloCreateOrConnectWithoutCategoriaInput[]
    upsert?: PlatilloUpsertWithWhereUniqueWithoutCategoriaInput | PlatilloUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: PlatilloCreateManyCategoriaInputEnvelope
    set?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    disconnect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    delete?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    connect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    update?: PlatilloUpdateWithWhereUniqueWithoutCategoriaInput | PlatilloUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: PlatilloUpdateManyWithWhereWithoutCategoriaInput | PlatilloUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: PlatilloScalarWhereInput | PlatilloScalarWhereInput[]
  }

  export type PlatilloUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput> | PlatilloCreateWithoutCategoriaInput[] | PlatilloUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: PlatilloCreateOrConnectWithoutCategoriaInput | PlatilloCreateOrConnectWithoutCategoriaInput[]
    upsert?: PlatilloUpsertWithWhereUniqueWithoutCategoriaInput | PlatilloUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: PlatilloCreateManyCategoriaInputEnvelope
    set?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    disconnect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    delete?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    connect?: PlatilloWhereUniqueInput | PlatilloWhereUniqueInput[]
    update?: PlatilloUpdateWithWhereUniqueWithoutCategoriaInput | PlatilloUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: PlatilloUpdateManyWithWhereWithoutCategoriaInput | PlatilloUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: PlatilloScalarWhereInput | PlatilloScalarWhereInput[]
  }

  export type CategoriaCreateNestedOneWithoutPlatillosInput = {
    create?: XOR<CategoriaCreateWithoutPlatillosInput, CategoriaUncheckedCreateWithoutPlatillosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutPlatillosInput
    connect?: CategoriaWhereUniqueInput
  }

  export type HistorialModificacionCreateNestedManyWithoutPlatilloInput = {
    create?: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput> | HistorialModificacionCreateWithoutPlatilloInput[] | HistorialModificacionUncheckedCreateWithoutPlatilloInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutPlatilloInput | HistorialModificacionCreateOrConnectWithoutPlatilloInput[]
    createMany?: HistorialModificacionCreateManyPlatilloInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type HistorialModificacionUncheckedCreateNestedManyWithoutPlatilloInput = {
    create?: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput> | HistorialModificacionCreateWithoutPlatilloInput[] | HistorialModificacionUncheckedCreateWithoutPlatilloInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutPlatilloInput | HistorialModificacionCreateOrConnectWithoutPlatilloInput[]
    createMany?: HistorialModificacionCreateManyPlatilloInputEnvelope
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriaUpdateOneRequiredWithoutPlatillosNestedInput = {
    create?: XOR<CategoriaCreateWithoutPlatillosInput, CategoriaUncheckedCreateWithoutPlatillosInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutPlatillosInput
    upsert?: CategoriaUpsertWithoutPlatillosInput
    connect?: CategoriaWhereUniqueInput
    update?: XOR<XOR<CategoriaUpdateToOneWithWhereWithoutPlatillosInput, CategoriaUpdateWithoutPlatillosInput>, CategoriaUncheckedUpdateWithoutPlatillosInput>
  }

  export type HistorialModificacionUpdateManyWithoutPlatilloNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput> | HistorialModificacionCreateWithoutPlatilloInput[] | HistorialModificacionUncheckedCreateWithoutPlatilloInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutPlatilloInput | HistorialModificacionCreateOrConnectWithoutPlatilloInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutPlatilloInput | HistorialModificacionUpsertWithWhereUniqueWithoutPlatilloInput[]
    createMany?: HistorialModificacionCreateManyPlatilloInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutPlatilloInput | HistorialModificacionUpdateWithWhereUniqueWithoutPlatilloInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutPlatilloInput | HistorialModificacionUpdateManyWithWhereWithoutPlatilloInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutPlatilloNestedInput = {
    create?: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput> | HistorialModificacionCreateWithoutPlatilloInput[] | HistorialModificacionUncheckedCreateWithoutPlatilloInput[]
    connectOrCreate?: HistorialModificacionCreateOrConnectWithoutPlatilloInput | HistorialModificacionCreateOrConnectWithoutPlatilloInput[]
    upsert?: HistorialModificacionUpsertWithWhereUniqueWithoutPlatilloInput | HistorialModificacionUpsertWithWhereUniqueWithoutPlatilloInput[]
    createMany?: HistorialModificacionCreateManyPlatilloInputEnvelope
    set?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    disconnect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    delete?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    connect?: HistorialModificacionWhereUniqueInput | HistorialModificacionWhereUniqueInput[]
    update?: HistorialModificacionUpdateWithWhereUniqueWithoutPlatilloInput | HistorialModificacionUpdateWithWhereUniqueWithoutPlatilloInput[]
    updateMany?: HistorialModificacionUpdateManyWithWhereWithoutPlatilloInput | HistorialModificacionUpdateManyWithWhereWithoutPlatilloInput[]
    deleteMany?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutHistorialResponsableInput = {
    create?: XOR<UsuarioCreateWithoutHistorialResponsableInput, UsuarioUncheckedCreateWithoutHistorialResponsableInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialResponsableInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutHistorialModificacionesInput = {
    create?: XOR<UsuarioCreateWithoutHistorialModificacionesInput, UsuarioUncheckedCreateWithoutHistorialModificacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialModificacionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PlatilloCreateNestedOneWithoutHistorialModificacionesInput = {
    create?: XOR<PlatilloCreateWithoutHistorialModificacionesInput, PlatilloUncheckedCreateWithoutHistorialModificacionesInput>
    connectOrCreate?: PlatilloCreateOrConnectWithoutHistorialModificacionesInput
    connect?: PlatilloWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutHistorialResponsableNestedInput = {
    create?: XOR<UsuarioCreateWithoutHistorialResponsableInput, UsuarioUncheckedCreateWithoutHistorialResponsableInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialResponsableInput
    upsert?: UsuarioUpsertWithoutHistorialResponsableInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutHistorialResponsableInput, UsuarioUpdateWithoutHistorialResponsableInput>, UsuarioUncheckedUpdateWithoutHistorialResponsableInput>
  }

  export type UsuarioUpdateOneWithoutHistorialModificacionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutHistorialModificacionesInput, UsuarioUncheckedCreateWithoutHistorialModificacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialModificacionesInput
    upsert?: UsuarioUpsertWithoutHistorialModificacionesInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutHistorialModificacionesInput, UsuarioUpdateWithoutHistorialModificacionesInput>, UsuarioUncheckedUpdateWithoutHistorialModificacionesInput>
  }

  export type PlatilloUpdateOneWithoutHistorialModificacionesNestedInput = {
    create?: XOR<PlatilloCreateWithoutHistorialModificacionesInput, PlatilloUncheckedCreateWithoutHistorialModificacionesInput>
    connectOrCreate?: PlatilloCreateOrConnectWithoutHistorialModificacionesInput
    upsert?: PlatilloUpsertWithoutHistorialModificacionesInput
    disconnect?: PlatilloWhereInput | boolean
    delete?: PlatilloWhereInput | boolean
    connect?: PlatilloWhereUniqueInput
    update?: XOR<XOR<PlatilloUpdateToOneWithWhereWithoutHistorialModificacionesInput, PlatilloUpdateWithoutHistorialModificacionesInput>, PlatilloUncheckedUpdateWithoutHistorialModificacionesInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ReservaCreateNestedManyWithoutMesaInput = {
    create?: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput> | ReservaCreateWithoutMesaInput[] | ReservaUncheckedCreateWithoutMesaInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutMesaInput | ReservaCreateOrConnectWithoutMesaInput[]
    createMany?: ReservaCreateManyMesaInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutMesaInput = {
    create?: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput> | ReservaCreateWithoutMesaInput[] | ReservaUncheckedCreateWithoutMesaInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutMesaInput | ReservaCreateOrConnectWithoutMesaInput[]
    createMany?: ReservaCreateManyMesaInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type EnumMesaEstadoFieldUpdateOperationsInput = {
    set?: $Enums.MesaEstado
  }

  export type ReservaUpdateManyWithoutMesaNestedInput = {
    create?: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput> | ReservaCreateWithoutMesaInput[] | ReservaUncheckedCreateWithoutMesaInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutMesaInput | ReservaCreateOrConnectWithoutMesaInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutMesaInput | ReservaUpsertWithWhereUniqueWithoutMesaInput[]
    createMany?: ReservaCreateManyMesaInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutMesaInput | ReservaUpdateWithWhereUniqueWithoutMesaInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutMesaInput | ReservaUpdateManyWithWhereWithoutMesaInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutMesaNestedInput = {
    create?: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput> | ReservaCreateWithoutMesaInput[] | ReservaUncheckedCreateWithoutMesaInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutMesaInput | ReservaCreateOrConnectWithoutMesaInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutMesaInput | ReservaUpsertWithWhereUniqueWithoutMesaInput[]
    createMany?: ReservaCreateManyMesaInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutMesaInput | ReservaUpdateWithWhereUniqueWithoutMesaInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutMesaInput | ReservaUpdateManyWithWhereWithoutMesaInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type MesaCreateNestedOneWithoutReservasInput = {
    create?: XOR<MesaCreateWithoutReservasInput, MesaUncheckedCreateWithoutReservasInput>
    connectOrCreate?: MesaCreateOrConnectWithoutReservasInput
    connect?: MesaWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumReservaEstadoFieldUpdateOperationsInput = {
    set?: $Enums.ReservaEstado
  }

  export type EnumPagoEstadoFieldUpdateOperationsInput = {
    set?: $Enums.PagoEstado
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumRefundEstadoFieldUpdateOperationsInput = {
    set?: $Enums.RefundEstado
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type MesaUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<MesaCreateWithoutReservasInput, MesaUncheckedCreateWithoutReservasInput>
    connectOrCreate?: MesaCreateOrConnectWithoutReservasInput
    upsert?: MesaUpsertWithoutReservasInput
    connect?: MesaWhereUniqueInput
    update?: XOR<XOR<MesaUpdateToOneWithWhereWithoutReservasInput, MesaUpdateWithoutReservasInput>, MesaUncheckedUpdateWithoutReservasInput>
  }

  export type UsuarioCreateNestedOneWithoutOrdenesMeseroInput = {
    create?: XOR<UsuarioCreateWithoutOrdenesMeseroInput, UsuarioUncheckedCreateWithoutOrdenesMeseroInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutOrdenesMeseroInput
    connect?: UsuarioWhereUniqueInput
  }

  export type OrdenItemCreateNestedManyWithoutOrdenInput = {
    create?: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput> | OrdenItemCreateWithoutOrdenInput[] | OrdenItemUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutOrdenInput | OrdenItemCreateOrConnectWithoutOrdenInput[]
    createMany?: OrdenItemCreateManyOrdenInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type TicketVentaCreateNestedManyWithoutOrdenInput = {
    create?: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput> | TicketVentaCreateWithoutOrdenInput[] | TicketVentaUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutOrdenInput | TicketVentaCreateOrConnectWithoutOrdenInput[]
    createMany?: TicketVentaCreateManyOrdenInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type PedidoClienteCreateNestedOneWithoutOrdenInput = {
    create?: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutOrdenInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type MeseroNotifCreateNestedManyWithoutOrdenInput = {
    create?: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput> | MeseroNotifCreateWithoutOrdenInput[] | MeseroNotifUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutOrdenInput | MeseroNotifCreateOrConnectWithoutOrdenInput[]
    createMany?: MeseroNotifCreateManyOrdenInputEnvelope
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
  }

  export type OrdenItemUncheckedCreateNestedManyWithoutOrdenInput = {
    create?: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput> | OrdenItemCreateWithoutOrdenInput[] | OrdenItemUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutOrdenInput | OrdenItemCreateOrConnectWithoutOrdenInput[]
    createMany?: OrdenItemCreateManyOrdenInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type TicketVentaUncheckedCreateNestedManyWithoutOrdenInput = {
    create?: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput> | TicketVentaCreateWithoutOrdenInput[] | TicketVentaUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutOrdenInput | TicketVentaCreateOrConnectWithoutOrdenInput[]
    createMany?: TicketVentaCreateManyOrdenInputEnvelope
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
  }

  export type PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput = {
    create?: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutOrdenInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput = {
    create?: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput> | MeseroNotifCreateWithoutOrdenInput[] | MeseroNotifUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutOrdenInput | MeseroNotifCreateOrConnectWithoutOrdenInput[]
    createMany?: MeseroNotifCreateManyOrdenInputEnvelope
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
  }

  export type EnumOrdenEstadoFieldUpdateOperationsInput = {
    set?: $Enums.OrdenEstado
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioUpdateOneWithoutOrdenesMeseroNestedInput = {
    create?: XOR<UsuarioCreateWithoutOrdenesMeseroInput, UsuarioUncheckedCreateWithoutOrdenesMeseroInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutOrdenesMeseroInput
    upsert?: UsuarioUpsertWithoutOrdenesMeseroInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutOrdenesMeseroInput, UsuarioUpdateWithoutOrdenesMeseroInput>, UsuarioUncheckedUpdateWithoutOrdenesMeseroInput>
  }

  export type OrdenItemUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput> | OrdenItemCreateWithoutOrdenInput[] | OrdenItemUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutOrdenInput | OrdenItemCreateOrConnectWithoutOrdenInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutOrdenInput | OrdenItemUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: OrdenItemCreateManyOrdenInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutOrdenInput | OrdenItemUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutOrdenInput | OrdenItemUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type TicketVentaUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput> | TicketVentaCreateWithoutOrdenInput[] | TicketVentaUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutOrdenInput | TicketVentaCreateOrConnectWithoutOrdenInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutOrdenInput | TicketVentaUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: TicketVentaCreateManyOrdenInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutOrdenInput | TicketVentaUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutOrdenInput | TicketVentaUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type PedidoClienteUpdateOneWithoutOrdenNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutOrdenInput
    upsert?: PedidoClienteUpsertWithoutOrdenInput
    disconnect?: PedidoClienteWhereInput | boolean
    delete?: PedidoClienteWhereInput | boolean
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutOrdenInput, PedidoClienteUpdateWithoutOrdenInput>, PedidoClienteUncheckedUpdateWithoutOrdenInput>
  }

  export type MeseroNotifUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput> | MeseroNotifCreateWithoutOrdenInput[] | MeseroNotifUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutOrdenInput | MeseroNotifCreateOrConnectWithoutOrdenInput[]
    upsert?: MeseroNotifUpsertWithWhereUniqueWithoutOrdenInput | MeseroNotifUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: MeseroNotifCreateManyOrdenInputEnvelope
    set?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    disconnect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    delete?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    update?: MeseroNotifUpdateWithWhereUniqueWithoutOrdenInput | MeseroNotifUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: MeseroNotifUpdateManyWithWhereWithoutOrdenInput | MeseroNotifUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
  }

  export type OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput> | OrdenItemCreateWithoutOrdenInput[] | OrdenItemUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutOrdenInput | OrdenItemCreateOrConnectWithoutOrdenInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutOrdenInput | OrdenItemUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: OrdenItemCreateManyOrdenInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutOrdenInput | OrdenItemUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutOrdenInput | OrdenItemUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput> | TicketVentaCreateWithoutOrdenInput[] | TicketVentaUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: TicketVentaCreateOrConnectWithoutOrdenInput | TicketVentaCreateOrConnectWithoutOrdenInput[]
    upsert?: TicketVentaUpsertWithWhereUniqueWithoutOrdenInput | TicketVentaUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: TicketVentaCreateManyOrdenInputEnvelope
    set?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    disconnect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    delete?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    connect?: TicketVentaWhereUniqueInput | TicketVentaWhereUniqueInput[]
    update?: TicketVentaUpdateWithWhereUniqueWithoutOrdenInput | TicketVentaUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: TicketVentaUpdateManyWithWhereWithoutOrdenInput | TicketVentaUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
  }

  export type PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutOrdenInput
    upsert?: PedidoClienteUpsertWithoutOrdenInput
    disconnect?: PedidoClienteWhereInput | boolean
    delete?: PedidoClienteWhereInput | boolean
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutOrdenInput, PedidoClienteUpdateWithoutOrdenInput>, PedidoClienteUncheckedUpdateWithoutOrdenInput>
  }

  export type MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput = {
    create?: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput> | MeseroNotifCreateWithoutOrdenInput[] | MeseroNotifUncheckedCreateWithoutOrdenInput[]
    connectOrCreate?: MeseroNotifCreateOrConnectWithoutOrdenInput | MeseroNotifCreateOrConnectWithoutOrdenInput[]
    upsert?: MeseroNotifUpsertWithWhereUniqueWithoutOrdenInput | MeseroNotifUpsertWithWhereUniqueWithoutOrdenInput[]
    createMany?: MeseroNotifCreateManyOrdenInputEnvelope
    set?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    disconnect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    delete?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    connect?: MeseroNotifWhereUniqueInput | MeseroNotifWhereUniqueInput[]
    update?: MeseroNotifUpdateWithWhereUniqueWithoutOrdenInput | MeseroNotifUpdateWithWhereUniqueWithoutOrdenInput[]
    updateMany?: MeseroNotifUpdateManyWithWhereWithoutOrdenInput | MeseroNotifUpdateManyWithWhereWithoutOrdenInput[]
    deleteMany?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
  }

  export type OrdenCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrdenCreateWithoutItemsInput, OrdenUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutItemsInput
    connect?: OrdenWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutItemsAsignadosInput = {
    create?: XOR<UsuarioCreateWithoutItemsAsignadosInput, UsuarioUncheckedCreateWithoutItemsAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutItemsAsignadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutItemsBarraAsignadosInput = {
    create?: XOR<UsuarioCreateWithoutItemsBarraAsignadosInput, UsuarioUncheckedCreateWithoutItemsBarraAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutItemsBarraAsignadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type TicketVentaCreateNestedOneWithoutItemsInput = {
    create?: XOR<TicketVentaCreateWithoutItemsInput, TicketVentaUncheckedCreateWithoutItemsInput>
    connectOrCreate?: TicketVentaCreateOrConnectWithoutItemsInput
    connect?: TicketVentaWhereUniqueInput
  }

  export type OrdenUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<OrdenCreateWithoutItemsInput, OrdenUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutItemsInput
    upsert?: OrdenUpsertWithoutItemsInput
    connect?: OrdenWhereUniqueInput
    update?: XOR<XOR<OrdenUpdateToOneWithWhereWithoutItemsInput, OrdenUpdateWithoutItemsInput>, OrdenUncheckedUpdateWithoutItemsInput>
  }

  export type UsuarioUpdateOneWithoutItemsAsignadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutItemsAsignadosInput, UsuarioUncheckedCreateWithoutItemsAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutItemsAsignadosInput
    upsert?: UsuarioUpsertWithoutItemsAsignadosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutItemsAsignadosInput, UsuarioUpdateWithoutItemsAsignadosInput>, UsuarioUncheckedUpdateWithoutItemsAsignadosInput>
  }

  export type UsuarioUpdateOneWithoutItemsBarraAsignadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutItemsBarraAsignadosInput, UsuarioUncheckedCreateWithoutItemsBarraAsignadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutItemsBarraAsignadosInput
    upsert?: UsuarioUpsertWithoutItemsBarraAsignadosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutItemsBarraAsignadosInput, UsuarioUpdateWithoutItemsBarraAsignadosInput>, UsuarioUncheckedUpdateWithoutItemsBarraAsignadosInput>
  }

  export type TicketVentaUpdateOneWithoutItemsNestedInput = {
    create?: XOR<TicketVentaCreateWithoutItemsInput, TicketVentaUncheckedCreateWithoutItemsInput>
    connectOrCreate?: TicketVentaCreateOrConnectWithoutItemsInput
    upsert?: TicketVentaUpsertWithoutItemsInput
    disconnect?: TicketVentaWhereInput | boolean
    delete?: TicketVentaWhereInput | boolean
    connect?: TicketVentaWhereUniqueInput
    update?: XOR<XOR<TicketVentaUpdateToOneWithWhereWithoutItemsInput, TicketVentaUpdateWithoutItemsInput>, TicketVentaUncheckedUpdateWithoutItemsInput>
  }

  export type UsuarioCreateNestedOneWithoutCocinaEstadoInput = {
    create?: XOR<UsuarioCreateWithoutCocinaEstadoInput, UsuarioUncheckedCreateWithoutCocinaEstadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCocinaEstadoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutCocinaEstadoNestedInput = {
    create?: XOR<UsuarioCreateWithoutCocinaEstadoInput, UsuarioUncheckedCreateWithoutCocinaEstadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCocinaEstadoInput
    upsert?: UsuarioUpsertWithoutCocinaEstadoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCocinaEstadoInput, UsuarioUpdateWithoutCocinaEstadoInput>, UsuarioUncheckedUpdateWithoutCocinaEstadoInput>
  }

  export type UsuarioCreateNestedOneWithoutBarraEstadoInput = {
    create?: XOR<UsuarioCreateWithoutBarraEstadoInput, UsuarioUncheckedCreateWithoutBarraEstadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBarraEstadoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutBarraEstadoNestedInput = {
    create?: XOR<UsuarioCreateWithoutBarraEstadoInput, UsuarioUncheckedCreateWithoutBarraEstadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBarraEstadoInput
    upsert?: UsuarioUpsertWithoutBarraEstadoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutBarraEstadoInput, UsuarioUpdateWithoutBarraEstadoInput>, UsuarioUncheckedUpdateWithoutBarraEstadoInput>
  }

  export type OrdenCreateNestedOneWithoutTicketsInput = {
    create?: XOR<OrdenCreateWithoutTicketsInput, OrdenUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutTicketsInput
    connect?: OrdenWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutTicketsCobradosInput = {
    create?: XOR<UsuarioCreateWithoutTicketsCobradosInput, UsuarioUncheckedCreateWithoutTicketsCobradosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsCobradosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutTicketsAnuladosInput = {
    create?: XOR<UsuarioCreateWithoutTicketsAnuladosInput, UsuarioUncheckedCreateWithoutTicketsAnuladosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsAnuladosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type OrdenItemCreateNestedManyWithoutTicketInput = {
    create?: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput> | OrdenItemCreateWithoutTicketInput[] | OrdenItemUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutTicketInput | OrdenItemCreateOrConnectWithoutTicketInput[]
    createMany?: OrdenItemCreateManyTicketInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type OrdenItemUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput> | OrdenItemCreateWithoutTicketInput[] | OrdenItemUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutTicketInput | OrdenItemCreateOrConnectWithoutTicketInput[]
    createMany?: OrdenItemCreateManyTicketInputEnvelope
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
  }

  export type EnumMetodoPagoFieldUpdateOperationsInput = {
    set?: $Enums.MetodoPago
  }

  export type EnumComprobanteEstadoFieldUpdateOperationsInput = {
    set?: $Enums.ComprobanteEstado
  }

  export type OrdenUpdateOneRequiredWithoutTicketsNestedInput = {
    create?: XOR<OrdenCreateWithoutTicketsInput, OrdenUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutTicketsInput
    upsert?: OrdenUpsertWithoutTicketsInput
    connect?: OrdenWhereUniqueInput
    update?: XOR<XOR<OrdenUpdateToOneWithWhereWithoutTicketsInput, OrdenUpdateWithoutTicketsInput>, OrdenUncheckedUpdateWithoutTicketsInput>
  }

  export type UsuarioUpdateOneWithoutTicketsCobradosNestedInput = {
    create?: XOR<UsuarioCreateWithoutTicketsCobradosInput, UsuarioUncheckedCreateWithoutTicketsCobradosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsCobradosInput
    upsert?: UsuarioUpsertWithoutTicketsCobradosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutTicketsCobradosInput, UsuarioUpdateWithoutTicketsCobradosInput>, UsuarioUncheckedUpdateWithoutTicketsCobradosInput>
  }

  export type UsuarioUpdateOneWithoutTicketsAnuladosNestedInput = {
    create?: XOR<UsuarioCreateWithoutTicketsAnuladosInput, UsuarioUncheckedCreateWithoutTicketsAnuladosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTicketsAnuladosInput
    upsert?: UsuarioUpsertWithoutTicketsAnuladosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutTicketsAnuladosInput, UsuarioUpdateWithoutTicketsAnuladosInput>, UsuarioUncheckedUpdateWithoutTicketsAnuladosInput>
  }

  export type OrdenItemUpdateManyWithoutTicketNestedInput = {
    create?: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput> | OrdenItemCreateWithoutTicketInput[] | OrdenItemUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutTicketInput | OrdenItemCreateOrConnectWithoutTicketInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutTicketInput | OrdenItemUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: OrdenItemCreateManyTicketInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutTicketInput | OrdenItemUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutTicketInput | OrdenItemUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type OrdenItemUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput> | OrdenItemCreateWithoutTicketInput[] | OrdenItemUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: OrdenItemCreateOrConnectWithoutTicketInput | OrdenItemCreateOrConnectWithoutTicketInput[]
    upsert?: OrdenItemUpsertWithWhereUniqueWithoutTicketInput | OrdenItemUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: OrdenItemCreateManyTicketInputEnvelope
    set?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    disconnect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    delete?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    connect?: OrdenItemWhereUniqueInput | OrdenItemWhereUniqueInput[]
    update?: OrdenItemUpdateWithWhereUniqueWithoutTicketInput | OrdenItemUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: OrdenItemUpdateManyWithWhereWithoutTicketInput | OrdenItemUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutEgresosSolicitadosInput = {
    create?: XOR<UsuarioCreateWithoutEgresosSolicitadosInput, UsuarioUncheckedCreateWithoutEgresosSolicitadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresosSolicitadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEgresosAutorizadosInput = {
    create?: XOR<UsuarioCreateWithoutEgresosAutorizadosInput, UsuarioUncheckedCreateWithoutEgresosAutorizadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresosAutorizadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEgresoEstadoFieldUpdateOperationsInput = {
    set?: $Enums.EgresoEstado
  }

  export type UsuarioUpdateOneRequiredWithoutEgresosSolicitadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutEgresosSolicitadosInput, UsuarioUncheckedCreateWithoutEgresosSolicitadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresosSolicitadosInput
    upsert?: UsuarioUpsertWithoutEgresosSolicitadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEgresosSolicitadosInput, UsuarioUpdateWithoutEgresosSolicitadosInput>, UsuarioUncheckedUpdateWithoutEgresosSolicitadosInput>
  }

  export type UsuarioUpdateOneWithoutEgresosAutorizadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutEgresosAutorizadosInput, UsuarioUncheckedCreateWithoutEgresosAutorizadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresosAutorizadosInput
    upsert?: UsuarioUpsertWithoutEgresosAutorizadosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEgresosAutorizadosInput, UsuarioUpdateWithoutEgresosAutorizadosInput>, UsuarioUncheckedUpdateWithoutEgresosAutorizadosInput>
  }

  export type UsuarioCreateNestedOneWithoutPedidosRepartidorInput = {
    create?: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosRepartidorInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CalificacionPedidoCreateNestedOneWithoutPedidoInput = {
    create?: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionPedidoCreateOrConnectWithoutPedidoInput
    connect?: CalificacionPedidoWhereUniqueInput
  }

  export type OrdenCreateNestedOneWithoutPedidoClienteInput = {
    create?: XOR<OrdenCreateWithoutPedidoClienteInput, OrdenUncheckedCreateWithoutPedidoClienteInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutPedidoClienteInput
    connect?: OrdenWhereUniqueInput
  }

  export type PedidoClienteItemCreateNestedManyWithoutPedidoInput = {
    create?: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput> | PedidoClienteItemCreateWithoutPedidoInput[] | PedidoClienteItemUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PedidoClienteItemCreateOrConnectWithoutPedidoInput | PedidoClienteItemCreateOrConnectWithoutPedidoInput[]
    createMany?: PedidoClienteItemCreateManyPedidoInputEnvelope
    connect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
  }

  export type ObservacionEntregaCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput> | ObservacionEntregaCreateWithoutPedidoInput[] | ObservacionEntregaUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutPedidoInput | ObservacionEntregaCreateOrConnectWithoutPedidoInput[]
    createMany?: ObservacionEntregaCreateManyPedidoInputEnvelope
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
  }

  export type RepartidorNotifCreateNestedManyWithoutPedidoInput = {
    create?: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput> | RepartidorNotifCreateWithoutPedidoInput[] | RepartidorNotifUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutPedidoInput | RepartidorNotifCreateOrConnectWithoutPedidoInput[]
    createMany?: RepartidorNotifCreateManyPedidoInputEnvelope
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
  }

  export type CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput = {
    create?: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionPedidoCreateOrConnectWithoutPedidoInput
    connect?: CalificacionPedidoWhereUniqueInput
  }

  export type PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput> | PedidoClienteItemCreateWithoutPedidoInput[] | PedidoClienteItemUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PedidoClienteItemCreateOrConnectWithoutPedidoInput | PedidoClienteItemCreateOrConnectWithoutPedidoInput[]
    createMany?: PedidoClienteItemCreateManyPedidoInputEnvelope
    connect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
  }

  export type ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput> | ObservacionEntregaCreateWithoutPedidoInput[] | ObservacionEntregaUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutPedidoInput | ObservacionEntregaCreateOrConnectWithoutPedidoInput[]
    createMany?: ObservacionEntregaCreateManyPedidoInputEnvelope
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
  }

  export type RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput> | RepartidorNotifCreateWithoutPedidoInput[] | RepartidorNotifUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutPedidoInput | RepartidorNotifCreateOrConnectWithoutPedidoInput[]
    createMany?: RepartidorNotifCreateManyPedidoInputEnvelope
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
  }

  export type EnumTipoEntregaFieldUpdateOperationsInput = {
    set?: $Enums.TipoEntrega
  }

  export type EnumDeliveryStatusFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryStatus
  }

  export type UsuarioUpdateOneWithoutPedidosRepartidorNestedInput = {
    create?: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosRepartidorInput
    upsert?: UsuarioUpsertWithoutPedidosRepartidorInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPedidosRepartidorInput, UsuarioUpdateWithoutPedidosRepartidorInput>, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
  }

  export type CalificacionPedidoUpdateOneWithoutPedidoNestedInput = {
    create?: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionPedidoCreateOrConnectWithoutPedidoInput
    upsert?: CalificacionPedidoUpsertWithoutPedidoInput
    disconnect?: CalificacionPedidoWhereInput | boolean
    delete?: CalificacionPedidoWhereInput | boolean
    connect?: CalificacionPedidoWhereUniqueInput
    update?: XOR<XOR<CalificacionPedidoUpdateToOneWithWhereWithoutPedidoInput, CalificacionPedidoUpdateWithoutPedidoInput>, CalificacionPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type OrdenUpdateOneWithoutPedidoClienteNestedInput = {
    create?: XOR<OrdenCreateWithoutPedidoClienteInput, OrdenUncheckedCreateWithoutPedidoClienteInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutPedidoClienteInput
    upsert?: OrdenUpsertWithoutPedidoClienteInput
    disconnect?: OrdenWhereInput | boolean
    delete?: OrdenWhereInput | boolean
    connect?: OrdenWhereUniqueInput
    update?: XOR<XOR<OrdenUpdateToOneWithWhereWithoutPedidoClienteInput, OrdenUpdateWithoutPedidoClienteInput>, OrdenUncheckedUpdateWithoutPedidoClienteInput>
  }

  export type PedidoClienteItemUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput> | PedidoClienteItemCreateWithoutPedidoInput[] | PedidoClienteItemUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PedidoClienteItemCreateOrConnectWithoutPedidoInput | PedidoClienteItemCreateOrConnectWithoutPedidoInput[]
    upsert?: PedidoClienteItemUpsertWithWhereUniqueWithoutPedidoInput | PedidoClienteItemUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: PedidoClienteItemCreateManyPedidoInputEnvelope
    set?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    disconnect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    delete?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    connect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    update?: PedidoClienteItemUpdateWithWhereUniqueWithoutPedidoInput | PedidoClienteItemUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: PedidoClienteItemUpdateManyWithWhereWithoutPedidoInput | PedidoClienteItemUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: PedidoClienteItemScalarWhereInput | PedidoClienteItemScalarWhereInput[]
  }

  export type ObservacionEntregaUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput> | ObservacionEntregaCreateWithoutPedidoInput[] | ObservacionEntregaUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutPedidoInput | ObservacionEntregaCreateOrConnectWithoutPedidoInput[]
    upsert?: ObservacionEntregaUpsertWithWhereUniqueWithoutPedidoInput | ObservacionEntregaUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ObservacionEntregaCreateManyPedidoInputEnvelope
    set?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    disconnect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    delete?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    update?: ObservacionEntregaUpdateWithWhereUniqueWithoutPedidoInput | ObservacionEntregaUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ObservacionEntregaUpdateManyWithWhereWithoutPedidoInput | ObservacionEntregaUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
  }

  export type RepartidorNotifUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput> | RepartidorNotifCreateWithoutPedidoInput[] | RepartidorNotifUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutPedidoInput | RepartidorNotifCreateOrConnectWithoutPedidoInput[]
    upsert?: RepartidorNotifUpsertWithWhereUniqueWithoutPedidoInput | RepartidorNotifUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: RepartidorNotifCreateManyPedidoInputEnvelope
    set?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    disconnect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    delete?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    update?: RepartidorNotifUpdateWithWhereUniqueWithoutPedidoInput | RepartidorNotifUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: RepartidorNotifUpdateManyWithWhereWithoutPedidoInput | RepartidorNotifUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
  }

  export type CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput = {
    create?: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionPedidoCreateOrConnectWithoutPedidoInput
    upsert?: CalificacionPedidoUpsertWithoutPedidoInput
    disconnect?: CalificacionPedidoWhereInput | boolean
    delete?: CalificacionPedidoWhereInput | boolean
    connect?: CalificacionPedidoWhereUniqueInput
    update?: XOR<XOR<CalificacionPedidoUpdateToOneWithWhereWithoutPedidoInput, CalificacionPedidoUpdateWithoutPedidoInput>, CalificacionPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput> | PedidoClienteItemCreateWithoutPedidoInput[] | PedidoClienteItemUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PedidoClienteItemCreateOrConnectWithoutPedidoInput | PedidoClienteItemCreateOrConnectWithoutPedidoInput[]
    upsert?: PedidoClienteItemUpsertWithWhereUniqueWithoutPedidoInput | PedidoClienteItemUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: PedidoClienteItemCreateManyPedidoInputEnvelope
    set?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    disconnect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    delete?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    connect?: PedidoClienteItemWhereUniqueInput | PedidoClienteItemWhereUniqueInput[]
    update?: PedidoClienteItemUpdateWithWhereUniqueWithoutPedidoInput | PedidoClienteItemUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: PedidoClienteItemUpdateManyWithWhereWithoutPedidoInput | PedidoClienteItemUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: PedidoClienteItemScalarWhereInput | PedidoClienteItemScalarWhereInput[]
  }

  export type ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput> | ObservacionEntregaCreateWithoutPedidoInput[] | ObservacionEntregaUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ObservacionEntregaCreateOrConnectWithoutPedidoInput | ObservacionEntregaCreateOrConnectWithoutPedidoInput[]
    upsert?: ObservacionEntregaUpsertWithWhereUniqueWithoutPedidoInput | ObservacionEntregaUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ObservacionEntregaCreateManyPedidoInputEnvelope
    set?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    disconnect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    delete?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    connect?: ObservacionEntregaWhereUniqueInput | ObservacionEntregaWhereUniqueInput[]
    update?: ObservacionEntregaUpdateWithWhereUniqueWithoutPedidoInput | ObservacionEntregaUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ObservacionEntregaUpdateManyWithWhereWithoutPedidoInput | ObservacionEntregaUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
  }

  export type RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput> | RepartidorNotifCreateWithoutPedidoInput[] | RepartidorNotifUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: RepartidorNotifCreateOrConnectWithoutPedidoInput | RepartidorNotifCreateOrConnectWithoutPedidoInput[]
    upsert?: RepartidorNotifUpsertWithWhereUniqueWithoutPedidoInput | RepartidorNotifUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: RepartidorNotifCreateManyPedidoInputEnvelope
    set?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    disconnect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    delete?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    connect?: RepartidorNotifWhereUniqueInput | RepartidorNotifWhereUniqueInput[]
    update?: RepartidorNotifUpdateWithWhereUniqueWithoutPedidoInput | RepartidorNotifUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: RepartidorNotifUpdateManyWithWhereWithoutPedidoInput | RepartidorNotifUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
  }

  export type PedidoClienteCreateNestedOneWithoutObservacionesInput = {
    create?: XOR<PedidoClienteCreateWithoutObservacionesInput, PedidoClienteUncheckedCreateWithoutObservacionesInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutObservacionesInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutObservacionesEntregaInput = {
    create?: XOR<UsuarioCreateWithoutObservacionesEntregaInput, UsuarioUncheckedCreateWithoutObservacionesEntregaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutObservacionesEntregaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PedidoClienteUpdateOneRequiredWithoutObservacionesNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutObservacionesInput, PedidoClienteUncheckedCreateWithoutObservacionesInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutObservacionesInput
    upsert?: PedidoClienteUpsertWithoutObservacionesInput
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutObservacionesInput, PedidoClienteUpdateWithoutObservacionesInput>, PedidoClienteUncheckedUpdateWithoutObservacionesInput>
  }

  export type UsuarioUpdateOneRequiredWithoutObservacionesEntregaNestedInput = {
    create?: XOR<UsuarioCreateWithoutObservacionesEntregaInput, UsuarioUncheckedCreateWithoutObservacionesEntregaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutObservacionesEntregaInput
    upsert?: UsuarioUpsertWithoutObservacionesEntregaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutObservacionesEntregaInput, UsuarioUpdateWithoutObservacionesEntregaInput>, UsuarioUncheckedUpdateWithoutObservacionesEntregaInput>
  }

  export type PedidoClienteCreateNestedOneWithoutItemsInput = {
    create?: XOR<PedidoClienteCreateWithoutItemsInput, PedidoClienteUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutItemsInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type PedidoClienteUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutItemsInput, PedidoClienteUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutItemsInput
    upsert?: PedidoClienteUpsertWithoutItemsInput
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutItemsInput, PedidoClienteUpdateWithoutItemsInput>, PedidoClienteUncheckedUpdateWithoutItemsInput>
  }

  export type OrdenCreateNestedOneWithoutNotifsInput = {
    create?: XOR<OrdenCreateWithoutNotifsInput, OrdenUncheckedCreateWithoutNotifsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutNotifsInput
    connect?: OrdenWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutMeseroNotifsInput = {
    create?: XOR<UsuarioCreateWithoutMeseroNotifsInput, UsuarioUncheckedCreateWithoutMeseroNotifsInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMeseroNotifsInput
    connect?: UsuarioWhereUniqueInput
  }

  export type OrdenUpdateOneRequiredWithoutNotifsNestedInput = {
    create?: XOR<OrdenCreateWithoutNotifsInput, OrdenUncheckedCreateWithoutNotifsInput>
    connectOrCreate?: OrdenCreateOrConnectWithoutNotifsInput
    upsert?: OrdenUpsertWithoutNotifsInput
    connect?: OrdenWhereUniqueInput
    update?: XOR<XOR<OrdenUpdateToOneWithWhereWithoutNotifsInput, OrdenUpdateWithoutNotifsInput>, OrdenUncheckedUpdateWithoutNotifsInput>
  }

  export type UsuarioUpdateOneWithoutMeseroNotifsNestedInput = {
    create?: XOR<UsuarioCreateWithoutMeseroNotifsInput, UsuarioUncheckedCreateWithoutMeseroNotifsInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMeseroNotifsInput
    upsert?: UsuarioUpsertWithoutMeseroNotifsInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMeseroNotifsInput, UsuarioUpdateWithoutMeseroNotifsInput>, UsuarioUncheckedUpdateWithoutMeseroNotifsInput>
  }

  export type UsuarioCreateNestedOneWithoutRepartidorNotifsInput = {
    create?: XOR<UsuarioCreateWithoutRepartidorNotifsInput, UsuarioUncheckedCreateWithoutRepartidorNotifsInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRepartidorNotifsInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PedidoClienteCreateNestedOneWithoutRepartidorNotifsInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorNotifsInput, PedidoClienteUncheckedCreateWithoutRepartidorNotifsInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorNotifsInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type UsuarioUpdateOneWithoutRepartidorNotifsNestedInput = {
    create?: XOR<UsuarioCreateWithoutRepartidorNotifsInput, UsuarioUncheckedCreateWithoutRepartidorNotifsInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRepartidorNotifsInput
    upsert?: UsuarioUpsertWithoutRepartidorNotifsInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutRepartidorNotifsInput, UsuarioUpdateWithoutRepartidorNotifsInput>, UsuarioUncheckedUpdateWithoutRepartidorNotifsInput>
  }

  export type PedidoClienteUpdateOneWithoutRepartidorNotifsNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutRepartidorNotifsInput, PedidoClienteUncheckedCreateWithoutRepartidorNotifsInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutRepartidorNotifsInput
    upsert?: PedidoClienteUpsertWithoutRepartidorNotifsInput
    disconnect?: PedidoClienteWhereInput | boolean
    delete?: PedidoClienteWhereInput | boolean
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutRepartidorNotifsInput, PedidoClienteUpdateWithoutRepartidorNotifsInput>, PedidoClienteUncheckedUpdateWithoutRepartidorNotifsInput>
  }

  export type UsuarioCreateNestedOneWithoutCajaTurnosSolicitadosInput = {
    create?: XOR<UsuarioCreateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedCreateWithoutCajaTurnosSolicitadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCajaTurnosSolicitadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCajaTurnosAutorizadosInput = {
    create?: XOR<UsuarioCreateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedCreateWithoutCajaTurnosAutorizadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCajaTurnosAutorizadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumCajaTurnoEstadoFieldUpdateOperationsInput = {
    set?: $Enums.CajaTurnoEstado
  }

  export type UsuarioUpdateOneRequiredWithoutCajaTurnosSolicitadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedCreateWithoutCajaTurnosSolicitadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCajaTurnosSolicitadosInput
    upsert?: UsuarioUpsertWithoutCajaTurnosSolicitadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCajaTurnosSolicitadosInput, UsuarioUpdateWithoutCajaTurnosSolicitadosInput>, UsuarioUncheckedUpdateWithoutCajaTurnosSolicitadosInput>
  }

  export type UsuarioUpdateOneWithoutCajaTurnosAutorizadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedCreateWithoutCajaTurnosAutorizadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCajaTurnosAutorizadosInput
    upsert?: UsuarioUpsertWithoutCajaTurnosAutorizadosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCajaTurnosAutorizadosInput, UsuarioUpdateWithoutCajaTurnosAutorizadosInput>, UsuarioUncheckedUpdateWithoutCajaTurnosAutorizadosInput>
  }

  export type PedidoClienteCreateNestedOneWithoutCalificacionInput = {
    create?: XOR<PedidoClienteCreateWithoutCalificacionInput, PedidoClienteUncheckedCreateWithoutCalificacionInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutCalificacionInput
    connect?: PedidoClienteWhereUniqueInput
  }

  export type PedidoClienteUpdateOneRequiredWithoutCalificacionNestedInput = {
    create?: XOR<PedidoClienteCreateWithoutCalificacionInput, PedidoClienteUncheckedCreateWithoutCalificacionInput>
    connectOrCreate?: PedidoClienteCreateOrConnectWithoutCalificacionInput
    upsert?: PedidoClienteUpsertWithoutCalificacionInput
    connect?: PedidoClienteWhereUniqueInput
    update?: XOR<XOR<PedidoClienteUpdateToOneWithWhereWithoutCalificacionInput, PedidoClienteUpdateWithoutCalificacionInput>, PedidoClienteUncheckedUpdateWithoutCalificacionInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumCategoriaTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaTipo | EnumCategoriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaTipoFilter<$PrismaModel> | $Enums.CategoriaTipo
  }

  export type NestedEnumCategoriaTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaTipo | EnumCategoriaTipoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaTipo[] | ListEnumCategoriaTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaTipoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaTipoFilter<$PrismaModel>
    _max?: NestedEnumCategoriaTipoFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumMesaEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.MesaEstado | EnumMesaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumMesaEstadoFilter<$PrismaModel> | $Enums.MesaEstado
  }

  export type NestedEnumMesaEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MesaEstado | EnumMesaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MesaEstado[] | ListEnumMesaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumMesaEstadoWithAggregatesFilter<$PrismaModel> | $Enums.MesaEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMesaEstadoFilter<$PrismaModel>
    _max?: NestedEnumMesaEstadoFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumReservaEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstado | EnumReservaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstadoFilter<$PrismaModel> | $Enums.ReservaEstado
  }

  export type NestedEnumPagoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.PagoEstado | EnumPagoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumPagoEstadoFilter<$PrismaModel> | $Enums.PagoEstado
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumRefundEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.RefundEstado | EnumRefundEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumRefundEstadoFilter<$PrismaModel> | $Enums.RefundEstado
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumReservaEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservaEstado | EnumReservaEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservaEstado[] | ListEnumReservaEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumReservaEstadoWithAggregatesFilter<$PrismaModel> | $Enums.ReservaEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservaEstadoFilter<$PrismaModel>
    _max?: NestedEnumReservaEstadoFilter<$PrismaModel>
  }

  export type NestedEnumPagoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PagoEstado | EnumPagoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.PagoEstado[] | ListEnumPagoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumPagoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.PagoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPagoEstadoFilter<$PrismaModel>
    _max?: NestedEnumPagoEstadoFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumRefundEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RefundEstado | EnumRefundEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.RefundEstado[] | ListEnumRefundEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumRefundEstadoWithAggregatesFilter<$PrismaModel> | $Enums.RefundEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRefundEstadoFilter<$PrismaModel>
    _max?: NestedEnumRefundEstadoFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumOrdenEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.OrdenEstado | EnumOrdenEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumOrdenEstadoFilter<$PrismaModel> | $Enums.OrdenEstado
  }

  export type NestedEnumOrdenEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrdenEstado | EnumOrdenEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrdenEstado[] | ListEnumOrdenEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumOrdenEstadoWithAggregatesFilter<$PrismaModel> | $Enums.OrdenEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrdenEstadoFilter<$PrismaModel>
    _max?: NestedEnumOrdenEstadoFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type NestedEnumComprobanteEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.ComprobanteEstado | EnumComprobanteEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumComprobanteEstadoFilter<$PrismaModel> | $Enums.ComprobanteEstado
  }

  export type NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumComprobanteEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComprobanteEstado | EnumComprobanteEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComprobanteEstado[] | ListEnumComprobanteEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumComprobanteEstadoWithAggregatesFilter<$PrismaModel> | $Enums.ComprobanteEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComprobanteEstadoFilter<$PrismaModel>
    _max?: NestedEnumComprobanteEstadoFilter<$PrismaModel>
  }

  export type NestedEnumEgresoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EgresoEstado | EnumEgresoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEgresoEstadoFilter<$PrismaModel> | $Enums.EgresoEstado
  }

  export type NestedEnumEgresoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EgresoEstado | EnumEgresoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EgresoEstado[] | ListEnumEgresoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEgresoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.EgresoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEgresoEstadoFilter<$PrismaModel>
    _max?: NestedEnumEgresoEstadoFilter<$PrismaModel>
  }

  export type NestedEnumTipoEntregaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoEntrega | EnumTipoEntregaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoEntregaFilter<$PrismaModel> | $Enums.TipoEntrega
  }

  export type NestedEnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type NestedEnumTipoEntregaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoEntrega | EnumTipoEntregaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoEntrega[] | ListEnumTipoEntregaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoEntregaWithAggregatesFilter<$PrismaModel> | $Enums.TipoEntrega
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoEntregaFilter<$PrismaModel>
    _max?: NestedEnumTipoEntregaFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type NestedEnumCajaTurnoEstadoFilter<$PrismaModel = never> = {
    equals?: $Enums.CajaTurnoEstado | EnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel> | $Enums.CajaTurnoEstado
  }

  export type NestedEnumCajaTurnoEstadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CajaTurnoEstado | EnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    in?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CajaTurnoEstado[] | ListEnumCajaTurnoEstadoFieldRefInput<$PrismaModel>
    not?: NestedEnumCajaTurnoEstadoWithAggregatesFilter<$PrismaModel> | $Enums.CajaTurnoEstado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel>
    _max?: NestedEnumCajaTurnoEstadoFilter<$PrismaModel>
  }

  export type RolCreateWithoutUsuariosInput = {
    nombre: string
    permisos?: PermisoPorRolCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    permisos?: PermisoPorRolUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutUsuariosInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
  }

  export type PermisoUsuarioCreateWithoutUsuarioInput = {
    permiso: PermisoCreateNestedOneWithoutUsuariosInput
  }

  export type PermisoUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    permisoId: number
  }

  export type PermisoUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: PermisoUsuarioWhereUniqueInput
    create: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type PermisoUsuarioCreateManyUsuarioInputEnvelope = {
    data: PermisoUsuarioCreateManyUsuarioInput | PermisoUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type HistorialModificacionCreateWithoutUsuarioInput = {
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsable: UsuarioCreateNestedOneWithoutHistorialResponsableInput
    platillo?: PlatilloCreateNestedOneWithoutHistorialModificacionesInput
  }

  export type HistorialModificacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    platilloId?: number | null
  }

  export type HistorialModificacionCreateOrConnectWithoutUsuarioInput = {
    where: HistorialModificacionWhereUniqueInput
    create: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialModificacionCreateManyUsuarioInputEnvelope = {
    data: HistorialModificacionCreateManyUsuarioInput | HistorialModificacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type HistorialModificacionCreateWithoutResponsableInput = {
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    usuario?: UsuarioCreateNestedOneWithoutHistorialModificacionesInput
    platillo?: PlatilloCreateNestedOneWithoutHistorialModificacionesInput
  }

  export type HistorialModificacionUncheckedCreateWithoutResponsableInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    usuarioId?: number | null
    platilloId?: number | null
  }

  export type HistorialModificacionCreateOrConnectWithoutResponsableInput = {
    where: HistorialModificacionWhereUniqueInput
    create: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput>
  }

  export type HistorialModificacionCreateManyResponsableInputEnvelope = {
    data: HistorialModificacionCreateManyResponsableInput | HistorialModificacionCreateManyResponsableInput[]
    skipDuplicates?: boolean
  }

  export type PasswordHistoryCreateWithoutUserInput = {
    hash: string
    createdAt?: Date | string
  }

  export type PasswordHistoryUncheckedCreateWithoutUserInput = {
    id?: number
    hash: string
    createdAt?: Date | string
  }

  export type PasswordHistoryCreateOrConnectWithoutUserInput = {
    where: PasswordHistoryWhereUniqueInput
    create: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput>
  }

  export type PasswordHistoryCreateManyUserInputEnvelope = {
    data: PasswordHistoryCreateManyUserInput | PasswordHistoryCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrdenCreateWithoutMeseroInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUncheckedCreateWithoutMeseroInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemUncheckedCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaUncheckedCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput
  }

  export type OrdenCreateOrConnectWithoutMeseroInput = {
    where: OrdenWhereUniqueInput
    create: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput>
  }

  export type OrdenCreateManyMeseroInputEnvelope = {
    data: OrdenCreateManyMeseroInput | OrdenCreateManyMeseroInput[]
    skipDuplicates?: boolean
  }

  export type OrdenItemCreateWithoutChefInput = {
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    orden: OrdenCreateNestedOneWithoutItemsInput
    bartender?: UsuarioCreateNestedOneWithoutItemsBarraAsignadosInput
    ticket?: TicketVentaCreateNestedOneWithoutItemsInput
  }

  export type OrdenItemUncheckedCreateWithoutChefInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemCreateOrConnectWithoutChefInput = {
    where: OrdenItemWhereUniqueInput
    create: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput>
  }

  export type OrdenItemCreateManyChefInputEnvelope = {
    data: OrdenItemCreateManyChefInput | OrdenItemCreateManyChefInput[]
    skipDuplicates?: boolean
  }

  export type CocinaChefCreateWithoutChefInput = {
    activo?: boolean
    lastSeen?: Date | string
  }

  export type CocinaChefUncheckedCreateWithoutChefInput = {
    id?: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type CocinaChefCreateOrConnectWithoutChefInput = {
    where: CocinaChefWhereUniqueInput
    create: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
  }

  export type OrdenItemCreateWithoutBartenderInput = {
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    orden: OrdenCreateNestedOneWithoutItemsInput
    chef?: UsuarioCreateNestedOneWithoutItemsAsignadosInput
    ticket?: TicketVentaCreateNestedOneWithoutItemsInput
  }

  export type OrdenItemUncheckedCreateWithoutBartenderInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemCreateOrConnectWithoutBartenderInput = {
    where: OrdenItemWhereUniqueInput
    create: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput>
  }

  export type OrdenItemCreateManyBartenderInputEnvelope = {
    data: OrdenItemCreateManyBartenderInput | OrdenItemCreateManyBartenderInput[]
    skipDuplicates?: boolean
  }

  export type BarraBartenderCreateWithoutBartenderInput = {
    activo?: boolean
    lastSeen?: Date | string
  }

  export type BarraBartenderUncheckedCreateWithoutBartenderInput = {
    id?: number
    activo?: boolean
    lastSeen?: Date | string
  }

  export type BarraBartenderCreateOrConnectWithoutBartenderInput = {
    where: BarraBartenderWhereUniqueInput
    create: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
  }

  export type EgresoCajaCreateWithoutCajeroInput = {
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    monto: number
    motivo: string
    autorizadoEn?: Date | string | null
    observacion?: string | null
    autorizadoPor?: UsuarioCreateNestedOneWithoutEgresosAutorizadosInput
  }

  export type EgresoCajaUncheckedCreateWithoutCajeroInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    monto: number
    motivo: string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type EgresoCajaCreateOrConnectWithoutCajeroInput = {
    where: EgresoCajaWhereUniqueInput
    create: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput>
  }

  export type EgresoCajaCreateManyCajeroInputEnvelope = {
    data: EgresoCajaCreateManyCajeroInput | EgresoCajaCreateManyCajeroInput[]
    skipDuplicates?: boolean
  }

  export type EgresoCajaCreateWithoutAutorizadoPorInput = {
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    monto: number
    motivo: string
    autorizadoEn?: Date | string | null
    observacion?: string | null
    cajero: UsuarioCreateNestedOneWithoutEgresosSolicitadosInput
  }

  export type EgresoCajaUncheckedCreateWithoutAutorizadoPorInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    cajeroId: number
    monto: number
    motivo: string
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type EgresoCajaCreateOrConnectWithoutAutorizadoPorInput = {
    where: EgresoCajaWhereUniqueInput
    create: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput>
  }

  export type EgresoCajaCreateManyAutorizadoPorInputEnvelope = {
    data: EgresoCajaCreateManyAutorizadoPorInput | EgresoCajaCreateManyAutorizadoPorInput[]
    skipDuplicates?: boolean
  }

  export type MeseroNotifCreateWithoutMeseroInput = {
    creadoEn?: Date | string
    visto?: boolean
    itemNombre: string
    tipo: string
    orden: OrdenCreateNestedOneWithoutNotifsInput
  }

  export type MeseroNotifUncheckedCreateWithoutMeseroInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    ordenId: number
    itemNombre: string
    tipo: string
  }

  export type MeseroNotifCreateOrConnectWithoutMeseroInput = {
    where: MeseroNotifWhereUniqueInput
    create: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput>
  }

  export type MeseroNotifCreateManyMeseroInputEnvelope = {
    data: MeseroNotifCreateManyMeseroInput | MeseroNotifCreateManyMeseroInput[]
    skipDuplicates?: boolean
  }

  export type PedidoClienteCreateWithoutRepartidorInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutRepartidorInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutRepartidorInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput>
  }

  export type PedidoClienteCreateManyRepartidorInputEnvelope = {
    data: PedidoClienteCreateManyRepartidorInput | PedidoClienteCreateManyRepartidorInput[]
    skipDuplicates?: boolean
  }

  export type ObservacionEntregaCreateWithoutRepartidorInput = {
    texto: string
    createdAt?: Date | string
    pedido: PedidoClienteCreateNestedOneWithoutObservacionesInput
  }

  export type ObservacionEntregaUncheckedCreateWithoutRepartidorInput = {
    id?: number
    pedidoId: number
    texto: string
    createdAt?: Date | string
  }

  export type ObservacionEntregaCreateOrConnectWithoutRepartidorInput = {
    where: ObservacionEntregaWhereUniqueInput
    create: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput>
  }

  export type ObservacionEntregaCreateManyRepartidorInputEnvelope = {
    data: ObservacionEntregaCreateManyRepartidorInput | ObservacionEntregaCreateManyRepartidorInput[]
    skipDuplicates?: boolean
  }

  export type RepartidorNotifCreateWithoutRepartidorInput = {
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    pedido?: PedidoClienteCreateNestedOneWithoutRepartidorNotifsInput
  }

  export type RepartidorNotifUncheckedCreateWithoutRepartidorInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    pedidoId?: number | null
  }

  export type RepartidorNotifCreateOrConnectWithoutRepartidorInput = {
    where: RepartidorNotifWhereUniqueInput
    create: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput>
  }

  export type RepartidorNotifCreateManyRepartidorInputEnvelope = {
    data: RepartidorNotifCreateManyRepartidorInput | RepartidorNotifCreateManyRepartidorInput[]
    skipDuplicates?: boolean
  }

  export type TicketVentaCreateWithoutCajeroInput = {
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    orden: OrdenCreateNestedOneWithoutTicketsInput
    anuladoPor?: UsuarioCreateNestedOneWithoutTicketsAnuladosInput
    items?: OrdenItemCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaUncheckedCreateWithoutCajeroInput = {
    id?: number
    ordenId: number
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    items?: OrdenItemUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaCreateOrConnectWithoutCajeroInput = {
    where: TicketVentaWhereUniqueInput
    create: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput>
  }

  export type TicketVentaCreateManyCajeroInputEnvelope = {
    data: TicketVentaCreateManyCajeroInput | TicketVentaCreateManyCajeroInput[]
    skipDuplicates?: boolean
  }

  export type TicketVentaCreateWithoutAnuladoPorInput = {
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    orden: OrdenCreateNestedOneWithoutTicketsInput
    cajero?: UsuarioCreateNestedOneWithoutTicketsCobradosInput
    items?: OrdenItemCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaUncheckedCreateWithoutAnuladoPorInput = {
    id?: number
    ordenId: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    items?: OrdenItemUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaCreateOrConnectWithoutAnuladoPorInput = {
    where: TicketVentaWhereUniqueInput
    create: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput>
  }

  export type TicketVentaCreateManyAnuladoPorInputEnvelope = {
    data: TicketVentaCreateManyAnuladoPorInput | TicketVentaCreateManyAnuladoPorInput[]
    skipDuplicates?: boolean
  }

  export type CajaTurnoCreateWithoutCajeroInput = {
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
    autorizadoPor?: UsuarioCreateNestedOneWithoutCajaTurnosAutorizadosInput
  }

  export type CajaTurnoUncheckedCreateWithoutCajeroInput = {
    id?: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type CajaTurnoCreateOrConnectWithoutCajeroInput = {
    where: CajaTurnoWhereUniqueInput
    create: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput>
  }

  export type CajaTurnoCreateManyCajeroInputEnvelope = {
    data: CajaTurnoCreateManyCajeroInput | CajaTurnoCreateManyCajeroInput[]
    skipDuplicates?: boolean
  }

  export type CajaTurnoCreateWithoutAutorizadoPorInput = {
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
    cajero: UsuarioCreateNestedOneWithoutCajaTurnosSolicitadosInput
  }

  export type CajaTurnoUncheckedCreateWithoutAutorizadoPorInput = {
    id?: number
    cajeroId: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type CajaTurnoCreateOrConnectWithoutAutorizadoPorInput = {
    where: CajaTurnoWhereUniqueInput
    create: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput>
  }

  export type CajaTurnoCreateManyAutorizadoPorInputEnvelope = {
    data: CajaTurnoCreateManyAutorizadoPorInput | CajaTurnoCreateManyAutorizadoPorInput[]
    skipDuplicates?: boolean
  }

  export type RolUpsertWithoutUsuariosInput = {
    update: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
    create: XOR<RolCreateWithoutUsuariosInput, RolUncheckedCreateWithoutUsuariosInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutUsuariosInput, RolUncheckedUpdateWithoutUsuariosInput>
  }

  export type RolUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: PermisoPorRolUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permisos?: PermisoPorRolUncheckedUpdateManyWithoutRolNestedInput
  }

  export type PermisoUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: PermisoUsuarioWhereUniqueInput
    update: XOR<PermisoUsuarioUpdateWithoutUsuarioInput, PermisoUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<PermisoUsuarioCreateWithoutUsuarioInput, PermisoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type PermisoUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: PermisoUsuarioWhereUniqueInput
    data: XOR<PermisoUsuarioUpdateWithoutUsuarioInput, PermisoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type PermisoUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: PermisoUsuarioScalarWhereInput
    data: XOR<PermisoUsuarioUpdateManyMutationInput, PermisoUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type PermisoUsuarioScalarWhereInput = {
    AND?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
    OR?: PermisoUsuarioScalarWhereInput[]
    NOT?: PermisoUsuarioScalarWhereInput | PermisoUsuarioScalarWhereInput[]
    id?: IntFilter<"PermisoUsuario"> | number
    usuarioId?: IntFilter<"PermisoUsuario"> | number
    permisoId?: IntFilter<"PermisoUsuario"> | number
  }

  export type HistorialModificacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialModificacionWhereUniqueInput
    update: XOR<HistorialModificacionUpdateWithoutUsuarioInput, HistorialModificacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<HistorialModificacionCreateWithoutUsuarioInput, HistorialModificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialModificacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialModificacionWhereUniqueInput
    data: XOR<HistorialModificacionUpdateWithoutUsuarioInput, HistorialModificacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type HistorialModificacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: HistorialModificacionScalarWhereInput
    data: XOR<HistorialModificacionUpdateManyMutationInput, HistorialModificacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type HistorialModificacionScalarWhereInput = {
    AND?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
    OR?: HistorialModificacionScalarWhereInput[]
    NOT?: HistorialModificacionScalarWhereInput | HistorialModificacionScalarWhereInput[]
    id?: IntFilter<"HistorialModificacion"> | number
    campo?: StringFilter<"HistorialModificacion"> | string
    valorAnterior?: StringNullableFilter<"HistorialModificacion"> | string | null
    valorNuevo?: StringNullableFilter<"HistorialModificacion"> | string | null
    fecha?: DateTimeFilter<"HistorialModificacion"> | Date | string
    accion?: StringFilter<"HistorialModificacion"> | string
    responsableId?: IntFilter<"HistorialModificacion"> | number
    usuarioId?: IntNullableFilter<"HistorialModificacion"> | number | null
    platilloId?: IntNullableFilter<"HistorialModificacion"> | number | null
  }

  export type HistorialModificacionUpsertWithWhereUniqueWithoutResponsableInput = {
    where: HistorialModificacionWhereUniqueInput
    update: XOR<HistorialModificacionUpdateWithoutResponsableInput, HistorialModificacionUncheckedUpdateWithoutResponsableInput>
    create: XOR<HistorialModificacionCreateWithoutResponsableInput, HistorialModificacionUncheckedCreateWithoutResponsableInput>
  }

  export type HistorialModificacionUpdateWithWhereUniqueWithoutResponsableInput = {
    where: HistorialModificacionWhereUniqueInput
    data: XOR<HistorialModificacionUpdateWithoutResponsableInput, HistorialModificacionUncheckedUpdateWithoutResponsableInput>
  }

  export type HistorialModificacionUpdateManyWithWhereWithoutResponsableInput = {
    where: HistorialModificacionScalarWhereInput
    data: XOR<HistorialModificacionUpdateManyMutationInput, HistorialModificacionUncheckedUpdateManyWithoutResponsableInput>
  }

  export type PasswordHistoryUpsertWithWhereUniqueWithoutUserInput = {
    where: PasswordHistoryWhereUniqueInput
    update: XOR<PasswordHistoryUpdateWithoutUserInput, PasswordHistoryUncheckedUpdateWithoutUserInput>
    create: XOR<PasswordHistoryCreateWithoutUserInput, PasswordHistoryUncheckedCreateWithoutUserInput>
  }

  export type PasswordHistoryUpdateWithWhereUniqueWithoutUserInput = {
    where: PasswordHistoryWhereUniqueInput
    data: XOR<PasswordHistoryUpdateWithoutUserInput, PasswordHistoryUncheckedUpdateWithoutUserInput>
  }

  export type PasswordHistoryUpdateManyWithWhereWithoutUserInput = {
    where: PasswordHistoryScalarWhereInput
    data: XOR<PasswordHistoryUpdateManyMutationInput, PasswordHistoryUncheckedUpdateManyWithoutUserInput>
  }

  export type PasswordHistoryScalarWhereInput = {
    AND?: PasswordHistoryScalarWhereInput | PasswordHistoryScalarWhereInput[]
    OR?: PasswordHistoryScalarWhereInput[]
    NOT?: PasswordHistoryScalarWhereInput | PasswordHistoryScalarWhereInput[]
    id?: IntFilter<"PasswordHistory"> | number
    userId?: IntFilter<"PasswordHistory"> | number
    hash?: StringFilter<"PasswordHistory"> | string
    createdAt?: DateTimeFilter<"PasswordHistory"> | Date | string
  }

  export type OrdenUpsertWithWhereUniqueWithoutMeseroInput = {
    where: OrdenWhereUniqueInput
    update: XOR<OrdenUpdateWithoutMeseroInput, OrdenUncheckedUpdateWithoutMeseroInput>
    create: XOR<OrdenCreateWithoutMeseroInput, OrdenUncheckedCreateWithoutMeseroInput>
  }

  export type OrdenUpdateWithWhereUniqueWithoutMeseroInput = {
    where: OrdenWhereUniqueInput
    data: XOR<OrdenUpdateWithoutMeseroInput, OrdenUncheckedUpdateWithoutMeseroInput>
  }

  export type OrdenUpdateManyWithWhereWithoutMeseroInput = {
    where: OrdenScalarWhereInput
    data: XOR<OrdenUpdateManyMutationInput, OrdenUncheckedUpdateManyWithoutMeseroInput>
  }

  export type OrdenScalarWhereInput = {
    AND?: OrdenScalarWhereInput | OrdenScalarWhereInput[]
    OR?: OrdenScalarWhereInput[]
    NOT?: OrdenScalarWhereInput | OrdenScalarWhereInput[]
    id?: IntFilter<"Orden"> | number
    codigo?: StringFilter<"Orden"> | string
    mesa?: IntFilter<"Orden"> | number
    fecha?: DateTimeFilter<"Orden"> | Date | string
    finishedAt?: DateTimeNullableFilter<"Orden"> | Date | string | null
    durationSec?: IntNullableFilter<"Orden"> | number | null
    meseroId?: IntNullableFilter<"Orden"> | number | null
    estado?: EnumOrdenEstadoFilter<"Orden"> | $Enums.OrdenEstado
    totalPagado?: FloatNullableFilter<"Orden"> | number | null
    anticipo?: FloatFilter<"Orden"> | number
  }

  export type OrdenItemUpsertWithWhereUniqueWithoutChefInput = {
    where: OrdenItemWhereUniqueInput
    update: XOR<OrdenItemUpdateWithoutChefInput, OrdenItemUncheckedUpdateWithoutChefInput>
    create: XOR<OrdenItemCreateWithoutChefInput, OrdenItemUncheckedCreateWithoutChefInput>
  }

  export type OrdenItemUpdateWithWhereUniqueWithoutChefInput = {
    where: OrdenItemWhereUniqueInput
    data: XOR<OrdenItemUpdateWithoutChefInput, OrdenItemUncheckedUpdateWithoutChefInput>
  }

  export type OrdenItemUpdateManyWithWhereWithoutChefInput = {
    where: OrdenItemScalarWhereInput
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyWithoutChefInput>
  }

  export type OrdenItemScalarWhereInput = {
    AND?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
    OR?: OrdenItemScalarWhereInput[]
    NOT?: OrdenItemScalarWhereInput | OrdenItemScalarWhereInput[]
    id?: IntFilter<"OrdenItem"> | number
    nombre?: StringFilter<"OrdenItem"> | string
    precio?: FloatFilter<"OrdenItem"> | number
    nota?: StringNullableFilter<"OrdenItem"> | string | null
    tipo?: StringFilter<"OrdenItem"> | string
    estado?: StringFilter<"OrdenItem"> | string
    qty?: IntFilter<"OrdenItem"> | number
    subtotal?: FloatNullableFilter<"OrdenItem"> | number | null
    creadoEn?: DateTimeFilter<"OrdenItem"> | Date | string
    asignadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    preparandoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    finalizadoEn?: DateTimeNullableFilter<"OrdenItem"> | Date | string | null
    prioridad?: IntNullableFilter<"OrdenItem"> | number | null
    pagado?: BoolFilter<"OrdenItem"> | boolean
    ordenId?: IntFilter<"OrdenItem"> | number
    chefId?: IntNullableFilter<"OrdenItem"> | number | null
    bartenderId?: IntNullableFilter<"OrdenItem"> | number | null
    ticketVentaId?: IntNullableFilter<"OrdenItem"> | number | null
  }

  export type CocinaChefUpsertWithoutChefInput = {
    update: XOR<CocinaChefUpdateWithoutChefInput, CocinaChefUncheckedUpdateWithoutChefInput>
    create: XOR<CocinaChefCreateWithoutChefInput, CocinaChefUncheckedCreateWithoutChefInput>
    where?: CocinaChefWhereInput
  }

  export type CocinaChefUpdateToOneWithWhereWithoutChefInput = {
    where?: CocinaChefWhereInput
    data: XOR<CocinaChefUpdateWithoutChefInput, CocinaChefUncheckedUpdateWithoutChefInput>
  }

  export type CocinaChefUpdateWithoutChefInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CocinaChefUncheckedUpdateWithoutChefInput = {
    id?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrdenItemUpsertWithWhereUniqueWithoutBartenderInput = {
    where: OrdenItemWhereUniqueInput
    update: XOR<OrdenItemUpdateWithoutBartenderInput, OrdenItemUncheckedUpdateWithoutBartenderInput>
    create: XOR<OrdenItemCreateWithoutBartenderInput, OrdenItemUncheckedCreateWithoutBartenderInput>
  }

  export type OrdenItemUpdateWithWhereUniqueWithoutBartenderInput = {
    where: OrdenItemWhereUniqueInput
    data: XOR<OrdenItemUpdateWithoutBartenderInput, OrdenItemUncheckedUpdateWithoutBartenderInput>
  }

  export type OrdenItemUpdateManyWithWhereWithoutBartenderInput = {
    where: OrdenItemScalarWhereInput
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyWithoutBartenderInput>
  }

  export type BarraBartenderUpsertWithoutBartenderInput = {
    update: XOR<BarraBartenderUpdateWithoutBartenderInput, BarraBartenderUncheckedUpdateWithoutBartenderInput>
    create: XOR<BarraBartenderCreateWithoutBartenderInput, BarraBartenderUncheckedCreateWithoutBartenderInput>
    where?: BarraBartenderWhereInput
  }

  export type BarraBartenderUpdateToOneWithWhereWithoutBartenderInput = {
    where?: BarraBartenderWhereInput
    data: XOR<BarraBartenderUpdateWithoutBartenderInput, BarraBartenderUncheckedUpdateWithoutBartenderInput>
  }

  export type BarraBartenderUpdateWithoutBartenderInput = {
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BarraBartenderUncheckedUpdateWithoutBartenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    lastSeen?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EgresoCajaUpsertWithWhereUniqueWithoutCajeroInput = {
    where: EgresoCajaWhereUniqueInput
    update: XOR<EgresoCajaUpdateWithoutCajeroInput, EgresoCajaUncheckedUpdateWithoutCajeroInput>
    create: XOR<EgresoCajaCreateWithoutCajeroInput, EgresoCajaUncheckedCreateWithoutCajeroInput>
  }

  export type EgresoCajaUpdateWithWhereUniqueWithoutCajeroInput = {
    where: EgresoCajaWhereUniqueInput
    data: XOR<EgresoCajaUpdateWithoutCajeroInput, EgresoCajaUncheckedUpdateWithoutCajeroInput>
  }

  export type EgresoCajaUpdateManyWithWhereWithoutCajeroInput = {
    where: EgresoCajaScalarWhereInput
    data: XOR<EgresoCajaUpdateManyMutationInput, EgresoCajaUncheckedUpdateManyWithoutCajeroInput>
  }

  export type EgresoCajaScalarWhereInput = {
    AND?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
    OR?: EgresoCajaScalarWhereInput[]
    NOT?: EgresoCajaScalarWhereInput | EgresoCajaScalarWhereInput[]
    id?: IntFilter<"EgresoCaja"> | number
    creadoEn?: DateTimeFilter<"EgresoCaja"> | Date | string
    estado?: EnumEgresoEstadoFilter<"EgresoCaja"> | $Enums.EgresoEstado
    cajeroId?: IntFilter<"EgresoCaja"> | number
    monto?: FloatFilter<"EgresoCaja"> | number
    motivo?: StringFilter<"EgresoCaja"> | string
    autorizadoPorId?: IntNullableFilter<"EgresoCaja"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"EgresoCaja"> | Date | string | null
    observacion?: StringNullableFilter<"EgresoCaja"> | string | null
  }

  export type EgresoCajaUpsertWithWhereUniqueWithoutAutorizadoPorInput = {
    where: EgresoCajaWhereUniqueInput
    update: XOR<EgresoCajaUpdateWithoutAutorizadoPorInput, EgresoCajaUncheckedUpdateWithoutAutorizadoPorInput>
    create: XOR<EgresoCajaCreateWithoutAutorizadoPorInput, EgresoCajaUncheckedCreateWithoutAutorizadoPorInput>
  }

  export type EgresoCajaUpdateWithWhereUniqueWithoutAutorizadoPorInput = {
    where: EgresoCajaWhereUniqueInput
    data: XOR<EgresoCajaUpdateWithoutAutorizadoPorInput, EgresoCajaUncheckedUpdateWithoutAutorizadoPorInput>
  }

  export type EgresoCajaUpdateManyWithWhereWithoutAutorizadoPorInput = {
    where: EgresoCajaScalarWhereInput
    data: XOR<EgresoCajaUpdateManyMutationInput, EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorInput>
  }

  export type MeseroNotifUpsertWithWhereUniqueWithoutMeseroInput = {
    where: MeseroNotifWhereUniqueInput
    update: XOR<MeseroNotifUpdateWithoutMeseroInput, MeseroNotifUncheckedUpdateWithoutMeseroInput>
    create: XOR<MeseroNotifCreateWithoutMeseroInput, MeseroNotifUncheckedCreateWithoutMeseroInput>
  }

  export type MeseroNotifUpdateWithWhereUniqueWithoutMeseroInput = {
    where: MeseroNotifWhereUniqueInput
    data: XOR<MeseroNotifUpdateWithoutMeseroInput, MeseroNotifUncheckedUpdateWithoutMeseroInput>
  }

  export type MeseroNotifUpdateManyWithWhereWithoutMeseroInput = {
    where: MeseroNotifScalarWhereInput
    data: XOR<MeseroNotifUpdateManyMutationInput, MeseroNotifUncheckedUpdateManyWithoutMeseroInput>
  }

  export type MeseroNotifScalarWhereInput = {
    AND?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
    OR?: MeseroNotifScalarWhereInput[]
    NOT?: MeseroNotifScalarWhereInput | MeseroNotifScalarWhereInput[]
    id?: IntFilter<"MeseroNotif"> | number
    creadoEn?: DateTimeFilter<"MeseroNotif"> | Date | string
    visto?: BoolFilter<"MeseroNotif"> | boolean
    ordenId?: IntFilter<"MeseroNotif"> | number
    itemNombre?: StringFilter<"MeseroNotif"> | string
    tipo?: StringFilter<"MeseroNotif"> | string
    meseroId?: IntNullableFilter<"MeseroNotif"> | number | null
  }

  export type PedidoClienteUpsertWithWhereUniqueWithoutRepartidorInput = {
    where: PedidoClienteWhereUniqueInput
    update: XOR<PedidoClienteUpdateWithoutRepartidorInput, PedidoClienteUncheckedUpdateWithoutRepartidorInput>
    create: XOR<PedidoClienteCreateWithoutRepartidorInput, PedidoClienteUncheckedCreateWithoutRepartidorInput>
  }

  export type PedidoClienteUpdateWithWhereUniqueWithoutRepartidorInput = {
    where: PedidoClienteWhereUniqueInput
    data: XOR<PedidoClienteUpdateWithoutRepartidorInput, PedidoClienteUncheckedUpdateWithoutRepartidorInput>
  }

  export type PedidoClienteUpdateManyWithWhereWithoutRepartidorInput = {
    where: PedidoClienteScalarWhereInput
    data: XOR<PedidoClienteUpdateManyMutationInput, PedidoClienteUncheckedUpdateManyWithoutRepartidorInput>
  }

  export type PedidoClienteScalarWhereInput = {
    AND?: PedidoClienteScalarWhereInput | PedidoClienteScalarWhereInput[]
    OR?: PedidoClienteScalarWhereInput[]
    NOT?: PedidoClienteScalarWhereInput | PedidoClienteScalarWhereInput[]
    id?: IntFilter<"PedidoCliente"> | number
    codigo?: StringFilter<"PedidoCliente"> | string
    clienteEmail?: StringFilter<"PedidoCliente"> | string
    creadoEn?: DateTimeFilter<"PedidoCliente"> | Date | string
    estado?: StringFilter<"PedidoCliente"> | string
    repartidorId?: IntNullableFilter<"PedidoCliente"> | number | null
    tipoEntrega?: EnumTipoEntregaFilter<"PedidoCliente"> | $Enums.TipoEntrega
    metodoPago?: StringFilter<"PedidoCliente"> | string
    direccion?: StringNullableFilter<"PedidoCliente"> | string | null
    telefono?: StringNullableFilter<"PedidoCliente"> | string | null
    receptorNombre?: StringNullableFilter<"PedidoCliente"> | string | null
    deliveryStatus?: EnumDeliveryStatusFilter<"PedidoCliente"> | $Enums.DeliveryStatus
    readyAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    assignedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    deliveredAt?: DateTimeNullableFilter<"PedidoCliente"> | Date | string | null
    total?: FloatFilter<"PedidoCliente"> | number
    ordenId?: IntNullableFilter<"PedidoCliente"> | number | null
  }

  export type ObservacionEntregaUpsertWithWhereUniqueWithoutRepartidorInput = {
    where: ObservacionEntregaWhereUniqueInput
    update: XOR<ObservacionEntregaUpdateWithoutRepartidorInput, ObservacionEntregaUncheckedUpdateWithoutRepartidorInput>
    create: XOR<ObservacionEntregaCreateWithoutRepartidorInput, ObservacionEntregaUncheckedCreateWithoutRepartidorInput>
  }

  export type ObservacionEntregaUpdateWithWhereUniqueWithoutRepartidorInput = {
    where: ObservacionEntregaWhereUniqueInput
    data: XOR<ObservacionEntregaUpdateWithoutRepartidorInput, ObservacionEntregaUncheckedUpdateWithoutRepartidorInput>
  }

  export type ObservacionEntregaUpdateManyWithWhereWithoutRepartidorInput = {
    where: ObservacionEntregaScalarWhereInput
    data: XOR<ObservacionEntregaUpdateManyMutationInput, ObservacionEntregaUncheckedUpdateManyWithoutRepartidorInput>
  }

  export type ObservacionEntregaScalarWhereInput = {
    AND?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
    OR?: ObservacionEntregaScalarWhereInput[]
    NOT?: ObservacionEntregaScalarWhereInput | ObservacionEntregaScalarWhereInput[]
    id?: IntFilter<"ObservacionEntrega"> | number
    pedidoId?: IntFilter<"ObservacionEntrega"> | number
    repartidorId?: IntFilter<"ObservacionEntrega"> | number
    texto?: StringFilter<"ObservacionEntrega"> | string
    createdAt?: DateTimeFilter<"ObservacionEntrega"> | Date | string
  }

  export type RepartidorNotifUpsertWithWhereUniqueWithoutRepartidorInput = {
    where: RepartidorNotifWhereUniqueInput
    update: XOR<RepartidorNotifUpdateWithoutRepartidorInput, RepartidorNotifUncheckedUpdateWithoutRepartidorInput>
    create: XOR<RepartidorNotifCreateWithoutRepartidorInput, RepartidorNotifUncheckedCreateWithoutRepartidorInput>
  }

  export type RepartidorNotifUpdateWithWhereUniqueWithoutRepartidorInput = {
    where: RepartidorNotifWhereUniqueInput
    data: XOR<RepartidorNotifUpdateWithoutRepartidorInput, RepartidorNotifUncheckedUpdateWithoutRepartidorInput>
  }

  export type RepartidorNotifUpdateManyWithWhereWithoutRepartidorInput = {
    where: RepartidorNotifScalarWhereInput
    data: XOR<RepartidorNotifUpdateManyMutationInput, RepartidorNotifUncheckedUpdateManyWithoutRepartidorInput>
  }

  export type RepartidorNotifScalarWhereInput = {
    AND?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
    OR?: RepartidorNotifScalarWhereInput[]
    NOT?: RepartidorNotifScalarWhereInput | RepartidorNotifScalarWhereInput[]
    id?: IntFilter<"RepartidorNotif"> | number
    creadoEn?: DateTimeFilter<"RepartidorNotif"> | Date | string
    visto?: BoolFilter<"RepartidorNotif"> | boolean
    tipo?: StringFilter<"RepartidorNotif"> | string
    titulo?: StringFilter<"RepartidorNotif"> | string
    cuerpo?: StringNullableFilter<"RepartidorNotif"> | string | null
    repartidorId?: IntNullableFilter<"RepartidorNotif"> | number | null
    pedidoId?: IntNullableFilter<"RepartidorNotif"> | number | null
  }

  export type TicketVentaUpsertWithWhereUniqueWithoutCajeroInput = {
    where: TicketVentaWhereUniqueInput
    update: XOR<TicketVentaUpdateWithoutCajeroInput, TicketVentaUncheckedUpdateWithoutCajeroInput>
    create: XOR<TicketVentaCreateWithoutCajeroInput, TicketVentaUncheckedCreateWithoutCajeroInput>
  }

  export type TicketVentaUpdateWithWhereUniqueWithoutCajeroInput = {
    where: TicketVentaWhereUniqueInput
    data: XOR<TicketVentaUpdateWithoutCajeroInput, TicketVentaUncheckedUpdateWithoutCajeroInput>
  }

  export type TicketVentaUpdateManyWithWhereWithoutCajeroInput = {
    where: TicketVentaScalarWhereInput
    data: XOR<TicketVentaUpdateManyMutationInput, TicketVentaUncheckedUpdateManyWithoutCajeroInput>
  }

  export type TicketVentaScalarWhereInput = {
    AND?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
    OR?: TicketVentaScalarWhereInput[]
    NOT?: TicketVentaScalarWhereInput | TicketVentaScalarWhereInput[]
    id?: IntFilter<"TicketVenta"> | number
    ordenId?: IntFilter<"TicketVenta"> | number
    cajeroId?: IntNullableFilter<"TicketVenta"> | number | null
    fechaPago?: DateTimeFilter<"TicketVenta"> | Date | string
    metodoPago?: EnumMetodoPagoFilter<"TicketVenta"> | $Enums.MetodoPago
    subtotal?: FloatFilter<"TicketVenta"> | number
    impuestos?: FloatFilter<"TicketVenta"> | number
    descuentos?: FloatFilter<"TicketVenta"> | number
    totalAPagar?: FloatFilter<"TicketVenta"> | number
    montoRecibido?: FloatFilter<"TicketVenta"> | number
    cambio?: FloatFilter<"TicketVenta"> | number
    anticipoAplicado?: FloatFilter<"TicketVenta"> | number
    propina?: FloatFilter<"TicketVenta"> | number
    serie?: StringNullableFilter<"TicketVenta"> | string | null
    numero?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNombre?: StringNullableFilter<"TicketVenta"> | string | null
    clienteNit?: StringNullableFilter<"TicketVenta"> | string | null
    snapshot?: JsonNullableFilter<"TicketVenta">
    estado?: EnumComprobanteEstadoFilter<"TicketVenta"> | $Enums.ComprobanteEstado
    anuladoEn?: DateTimeNullableFilter<"TicketVenta"> | Date | string | null
    anuladoPorId?: IntNullableFilter<"TicketVenta"> | number | null
    anuladoMotivo?: StringNullableFilter<"TicketVenta"> | string | null
    posCorrelativo?: StringNullableFilter<"TicketVenta"> | string | null
  }

  export type TicketVentaUpsertWithWhereUniqueWithoutAnuladoPorInput = {
    where: TicketVentaWhereUniqueInput
    update: XOR<TicketVentaUpdateWithoutAnuladoPorInput, TicketVentaUncheckedUpdateWithoutAnuladoPorInput>
    create: XOR<TicketVentaCreateWithoutAnuladoPorInput, TicketVentaUncheckedCreateWithoutAnuladoPorInput>
  }

  export type TicketVentaUpdateWithWhereUniqueWithoutAnuladoPorInput = {
    where: TicketVentaWhereUniqueInput
    data: XOR<TicketVentaUpdateWithoutAnuladoPorInput, TicketVentaUncheckedUpdateWithoutAnuladoPorInput>
  }

  export type TicketVentaUpdateManyWithWhereWithoutAnuladoPorInput = {
    where: TicketVentaScalarWhereInput
    data: XOR<TicketVentaUpdateManyMutationInput, TicketVentaUncheckedUpdateManyWithoutAnuladoPorInput>
  }

  export type CajaTurnoUpsertWithWhereUniqueWithoutCajeroInput = {
    where: CajaTurnoWhereUniqueInput
    update: XOR<CajaTurnoUpdateWithoutCajeroInput, CajaTurnoUncheckedUpdateWithoutCajeroInput>
    create: XOR<CajaTurnoCreateWithoutCajeroInput, CajaTurnoUncheckedCreateWithoutCajeroInput>
  }

  export type CajaTurnoUpdateWithWhereUniqueWithoutCajeroInput = {
    where: CajaTurnoWhereUniqueInput
    data: XOR<CajaTurnoUpdateWithoutCajeroInput, CajaTurnoUncheckedUpdateWithoutCajeroInput>
  }

  export type CajaTurnoUpdateManyWithWhereWithoutCajeroInput = {
    where: CajaTurnoScalarWhereInput
    data: XOR<CajaTurnoUpdateManyMutationInput, CajaTurnoUncheckedUpdateManyWithoutCajeroInput>
  }

  export type CajaTurnoScalarWhereInput = {
    AND?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
    OR?: CajaTurnoScalarWhereInput[]
    NOT?: CajaTurnoScalarWhereInput | CajaTurnoScalarWhereInput[]
    id?: IntFilter<"CajaTurno"> | number
    cajeroId?: IntFilter<"CajaTurno"> | number
    estado?: EnumCajaTurnoEstadoFilter<"CajaTurno"> | $Enums.CajaTurnoEstado
    montoApertura?: FloatFilter<"CajaTurno"> | number
    conteoInicial?: JsonNullableFilter<"CajaTurno">
    solicitadoEn?: DateTimeFilter<"CajaTurno"> | Date | string
    autorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    autorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    montoCierre?: FloatNullableFilter<"CajaTurno"> | number | null
    conteoFinal?: JsonNullableFilter<"CajaTurno">
    cierreSolicitadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cierreAutorizadoPorId?: IntNullableFilter<"CajaTurno"> | number | null
    cierreAutorizadoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
    cerradoEn?: DateTimeNullableFilter<"CajaTurno"> | Date | string | null
  }

  export type CajaTurnoUpsertWithWhereUniqueWithoutAutorizadoPorInput = {
    where: CajaTurnoWhereUniqueInput
    update: XOR<CajaTurnoUpdateWithoutAutorizadoPorInput, CajaTurnoUncheckedUpdateWithoutAutorizadoPorInput>
    create: XOR<CajaTurnoCreateWithoutAutorizadoPorInput, CajaTurnoUncheckedCreateWithoutAutorizadoPorInput>
  }

  export type CajaTurnoUpdateWithWhereUniqueWithoutAutorizadoPorInput = {
    where: CajaTurnoWhereUniqueInput
    data: XOR<CajaTurnoUpdateWithoutAutorizadoPorInput, CajaTurnoUncheckedUpdateWithoutAutorizadoPorInput>
  }

  export type CajaTurnoUpdateManyWithWhereWithoutAutorizadoPorInput = {
    where: CajaTurnoScalarWhereInput
    data: XOR<CajaTurnoUpdateManyMutationInput, CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorInput>
  }

  export type UsuarioCreateWithoutRolInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutRolInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioCreateManyRolInputEnvelope = {
    data: UsuarioCreateManyRolInput | UsuarioCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type PermisoPorRolCreateWithoutRolInput = {
    permiso: PermisoCreateNestedOneWithoutRolesInput
  }

  export type PermisoPorRolUncheckedCreateWithoutRolInput = {
    id?: number
    permisoId: number
  }

  export type PermisoPorRolCreateOrConnectWithoutRolInput = {
    where: PermisoPorRolWhereUniqueInput
    create: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput>
  }

  export type PermisoPorRolCreateManyRolInputEnvelope = {
    data: PermisoPorRolCreateManyRolInput | PermisoPorRolCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutRolInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutRolInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    usuario?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    contrasena?: StringNullableFilter<"Usuario"> | string | null
    estado?: BoolFilter<"Usuario"> | boolean
    creadoEn?: DateTimeFilter<"Usuario"> | Date | string
    actualizadoEn?: DateTimeFilter<"Usuario"> | Date | string
    debeCambiarPassword?: BoolFilter<"Usuario"> | boolean
    rolId?: IntFilter<"Usuario"> | number
  }

  export type PermisoPorRolUpsertWithWhereUniqueWithoutRolInput = {
    where: PermisoPorRolWhereUniqueInput
    update: XOR<PermisoPorRolUpdateWithoutRolInput, PermisoPorRolUncheckedUpdateWithoutRolInput>
    create: XOR<PermisoPorRolCreateWithoutRolInput, PermisoPorRolUncheckedCreateWithoutRolInput>
  }

  export type PermisoPorRolUpdateWithWhereUniqueWithoutRolInput = {
    where: PermisoPorRolWhereUniqueInput
    data: XOR<PermisoPorRolUpdateWithoutRolInput, PermisoPorRolUncheckedUpdateWithoutRolInput>
  }

  export type PermisoPorRolUpdateManyWithWhereWithoutRolInput = {
    where: PermisoPorRolScalarWhereInput
    data: XOR<PermisoPorRolUpdateManyMutationInput, PermisoPorRolUncheckedUpdateManyWithoutRolInput>
  }

  export type PermisoPorRolScalarWhereInput = {
    AND?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
    OR?: PermisoPorRolScalarWhereInput[]
    NOT?: PermisoPorRolScalarWhereInput | PermisoPorRolScalarWhereInput[]
    id?: IntFilter<"PermisoPorRol"> | number
    permisoId?: IntFilter<"PermisoPorRol"> | number
    rolId?: IntFilter<"PermisoPorRol"> | number
  }

  export type PermisoPorRolCreateWithoutPermisoInput = {
    rol: RolCreateNestedOneWithoutPermisosInput
  }

  export type PermisoPorRolUncheckedCreateWithoutPermisoInput = {
    id?: number
    rolId: number
  }

  export type PermisoPorRolCreateOrConnectWithoutPermisoInput = {
    where: PermisoPorRolWhereUniqueInput
    create: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput>
  }

  export type PermisoPorRolCreateManyPermisoInputEnvelope = {
    data: PermisoPorRolCreateManyPermisoInput | PermisoPorRolCreateManyPermisoInput[]
    skipDuplicates?: boolean
  }

  export type PermisoUsuarioCreateWithoutPermisoInput = {
    usuario: UsuarioCreateNestedOneWithoutPermisosInput
  }

  export type PermisoUsuarioUncheckedCreateWithoutPermisoInput = {
    id?: number
    usuarioId: number
  }

  export type PermisoUsuarioCreateOrConnectWithoutPermisoInput = {
    where: PermisoUsuarioWhereUniqueInput
    create: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput>
  }

  export type PermisoUsuarioCreateManyPermisoInputEnvelope = {
    data: PermisoUsuarioCreateManyPermisoInput | PermisoUsuarioCreateManyPermisoInput[]
    skipDuplicates?: boolean
  }

  export type PermisoPorRolUpsertWithWhereUniqueWithoutPermisoInput = {
    where: PermisoPorRolWhereUniqueInput
    update: XOR<PermisoPorRolUpdateWithoutPermisoInput, PermisoPorRolUncheckedUpdateWithoutPermisoInput>
    create: XOR<PermisoPorRolCreateWithoutPermisoInput, PermisoPorRolUncheckedCreateWithoutPermisoInput>
  }

  export type PermisoPorRolUpdateWithWhereUniqueWithoutPermisoInput = {
    where: PermisoPorRolWhereUniqueInput
    data: XOR<PermisoPorRolUpdateWithoutPermisoInput, PermisoPorRolUncheckedUpdateWithoutPermisoInput>
  }

  export type PermisoPorRolUpdateManyWithWhereWithoutPermisoInput = {
    where: PermisoPorRolScalarWhereInput
    data: XOR<PermisoPorRolUpdateManyMutationInput, PermisoPorRolUncheckedUpdateManyWithoutPermisoInput>
  }

  export type PermisoUsuarioUpsertWithWhereUniqueWithoutPermisoInput = {
    where: PermisoUsuarioWhereUniqueInput
    update: XOR<PermisoUsuarioUpdateWithoutPermisoInput, PermisoUsuarioUncheckedUpdateWithoutPermisoInput>
    create: XOR<PermisoUsuarioCreateWithoutPermisoInput, PermisoUsuarioUncheckedCreateWithoutPermisoInput>
  }

  export type PermisoUsuarioUpdateWithWhereUniqueWithoutPermisoInput = {
    where: PermisoUsuarioWhereUniqueInput
    data: XOR<PermisoUsuarioUpdateWithoutPermisoInput, PermisoUsuarioUncheckedUpdateWithoutPermisoInput>
  }

  export type PermisoUsuarioUpdateManyWithWhereWithoutPermisoInput = {
    where: PermisoUsuarioScalarWhereInput
    data: XOR<PermisoUsuarioUpdateManyMutationInput, PermisoUsuarioUncheckedUpdateManyWithoutPermisoInput>
  }

  export type PermisoCreateWithoutRolesInput = {
    nombre: string
    descripcion?: string | null
    usuarios?: PermisoUsuarioCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUncheckedCreateWithoutRolesInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    usuarios?: PermisoUsuarioUncheckedCreateNestedManyWithoutPermisoInput
  }

  export type PermisoCreateOrConnectWithoutRolesInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutRolesInput, PermisoUncheckedCreateWithoutRolesInput>
  }

  export type RolCreateWithoutPermisosInput = {
    nombre: string
    usuarios?: UsuarioCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutPermisosInput = {
    id?: number
    nombre: string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutPermisosInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutPermisosInput, RolUncheckedCreateWithoutPermisosInput>
  }

  export type PermisoUpsertWithoutRolesInput = {
    update: XOR<PermisoUpdateWithoutRolesInput, PermisoUncheckedUpdateWithoutRolesInput>
    create: XOR<PermisoCreateWithoutRolesInput, PermisoUncheckedCreateWithoutRolesInput>
    where?: PermisoWhereInput
  }

  export type PermisoUpdateToOneWithWhereWithoutRolesInput = {
    where?: PermisoWhereInput
    data: XOR<PermisoUpdateWithoutRolesInput, PermisoUncheckedUpdateWithoutRolesInput>
  }

  export type PermisoUpdateWithoutRolesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: PermisoUsuarioUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: PermisoUsuarioUncheckedUpdateManyWithoutPermisoNestedInput
  }

  export type RolUpsertWithoutPermisosInput = {
    update: XOR<RolUpdateWithoutPermisosInput, RolUncheckedUpdateWithoutPermisosInput>
    create: XOR<RolCreateWithoutPermisosInput, RolUncheckedCreateWithoutPermisosInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutPermisosInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutPermisosInput, RolUncheckedUpdateWithoutPermisosInput>
  }

  export type RolUpdateWithoutPermisosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutPermisosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutRolNestedInput
  }

  export type UsuarioCreateWithoutPermisosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutPermisosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutPermisosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPermisosInput, UsuarioUncheckedCreateWithoutPermisosInput>
  }

  export type PermisoCreateWithoutUsuariosInput = {
    nombre: string
    descripcion?: string | null
    roles?: PermisoPorRolCreateNestedManyWithoutPermisoInput
  }

  export type PermisoUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    roles?: PermisoPorRolUncheckedCreateNestedManyWithoutPermisoInput
  }

  export type PermisoCreateOrConnectWithoutUsuariosInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutUsuariosInput, PermisoUncheckedCreateWithoutUsuariosInput>
  }

  export type UsuarioUpsertWithoutPermisosInput = {
    update: XOR<UsuarioUpdateWithoutPermisosInput, UsuarioUncheckedUpdateWithoutPermisosInput>
    create: XOR<UsuarioCreateWithoutPermisosInput, UsuarioUncheckedCreateWithoutPermisosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPermisosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPermisosInput, UsuarioUncheckedUpdateWithoutPermisosInput>
  }

  export type UsuarioUpdateWithoutPermisosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPermisosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type PermisoUpsertWithoutUsuariosInput = {
    update: XOR<PermisoUpdateWithoutUsuariosInput, PermisoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<PermisoCreateWithoutUsuariosInput, PermisoUncheckedCreateWithoutUsuariosInput>
    where?: PermisoWhereInput
  }

  export type PermisoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: PermisoWhereInput
    data: XOR<PermisoUpdateWithoutUsuariosInput, PermisoUncheckedUpdateWithoutUsuariosInput>
  }

  export type PermisoUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PermisoPorRolUpdateManyWithoutPermisoNestedInput
  }

  export type PermisoUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PermisoPorRolUncheckedUpdateManyWithoutPermisoNestedInput
  }

  export type UsuarioCreateWithoutPasswordHistoryInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutPasswordHistoryInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutPasswordHistoryInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPasswordHistoryInput, UsuarioUncheckedCreateWithoutPasswordHistoryInput>
  }

  export type UsuarioUpsertWithoutPasswordHistoryInput = {
    update: XOR<UsuarioUpdateWithoutPasswordHistoryInput, UsuarioUncheckedUpdateWithoutPasswordHistoryInput>
    create: XOR<UsuarioCreateWithoutPasswordHistoryInput, UsuarioUncheckedCreateWithoutPasswordHistoryInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPasswordHistoryInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPasswordHistoryInput, UsuarioUncheckedUpdateWithoutPasswordHistoryInput>
  }

  export type UsuarioUpdateWithoutPasswordHistoryInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPasswordHistoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type PlatilloCreateWithoutCategoriaInput = {
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutPlatilloInput
  }

  export type PlatilloUncheckedCreateWithoutCategoriaInput = {
    id?: number
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutPlatilloInput
  }

  export type PlatilloCreateOrConnectWithoutCategoriaInput = {
    where: PlatilloWhereUniqueInput
    create: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput>
  }

  export type PlatilloCreateManyCategoriaInputEnvelope = {
    data: PlatilloCreateManyCategoriaInput | PlatilloCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type PlatilloUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: PlatilloWhereUniqueInput
    update: XOR<PlatilloUpdateWithoutCategoriaInput, PlatilloUncheckedUpdateWithoutCategoriaInput>
    create: XOR<PlatilloCreateWithoutCategoriaInput, PlatilloUncheckedCreateWithoutCategoriaInput>
  }

  export type PlatilloUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: PlatilloWhereUniqueInput
    data: XOR<PlatilloUpdateWithoutCategoriaInput, PlatilloUncheckedUpdateWithoutCategoriaInput>
  }

  export type PlatilloUpdateManyWithWhereWithoutCategoriaInput = {
    where: PlatilloScalarWhereInput
    data: XOR<PlatilloUpdateManyMutationInput, PlatilloUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type PlatilloScalarWhereInput = {
    AND?: PlatilloScalarWhereInput | PlatilloScalarWhereInput[]
    OR?: PlatilloScalarWhereInput[]
    NOT?: PlatilloScalarWhereInput | PlatilloScalarWhereInput[]
    id?: IntFilter<"Platillo"> | number
    nombre?: StringFilter<"Platillo"> | string
    precio?: FloatFilter<"Platillo"> | number
    creadoEn?: DateTimeFilter<"Platillo"> | Date | string
    disponible?: BoolFilter<"Platillo"> | boolean
    imagenUrl?: StringNullableFilter<"Platillo"> | string | null
    categoriaId?: IntFilter<"Platillo"> | number
  }

  export type CategoriaCreateWithoutPlatillosInput = {
    nombre: string
    activo?: boolean
    creadoEn?: Date | string
    tipo?: $Enums.CategoriaTipo
  }

  export type CategoriaUncheckedCreateWithoutPlatillosInput = {
    id?: number
    nombre: string
    activo?: boolean
    creadoEn?: Date | string
    tipo?: $Enums.CategoriaTipo
  }

  export type CategoriaCreateOrConnectWithoutPlatillosInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutPlatillosInput, CategoriaUncheckedCreateWithoutPlatillosInput>
  }

  export type HistorialModificacionCreateWithoutPlatilloInput = {
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsable: UsuarioCreateNestedOneWithoutHistorialResponsableInput
    usuario?: UsuarioCreateNestedOneWithoutHistorialModificacionesInput
  }

  export type HistorialModificacionUncheckedCreateWithoutPlatilloInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    usuarioId?: number | null
  }

  export type HistorialModificacionCreateOrConnectWithoutPlatilloInput = {
    where: HistorialModificacionWhereUniqueInput
    create: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput>
  }

  export type HistorialModificacionCreateManyPlatilloInputEnvelope = {
    data: HistorialModificacionCreateManyPlatilloInput | HistorialModificacionCreateManyPlatilloInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaUpsertWithoutPlatillosInput = {
    update: XOR<CategoriaUpdateWithoutPlatillosInput, CategoriaUncheckedUpdateWithoutPlatillosInput>
    create: XOR<CategoriaCreateWithoutPlatillosInput, CategoriaUncheckedCreateWithoutPlatillosInput>
    where?: CategoriaWhereInput
  }

  export type CategoriaUpdateToOneWithWhereWithoutPlatillosInput = {
    where?: CategoriaWhereInput
    data: XOR<CategoriaUpdateWithoutPlatillosInput, CategoriaUncheckedUpdateWithoutPlatillosInput>
  }

  export type CategoriaUpdateWithoutPlatillosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
  }

  export type CategoriaUncheckedUpdateWithoutPlatillosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaTipoFieldUpdateOperationsInput | $Enums.CategoriaTipo
  }

  export type HistorialModificacionUpsertWithWhereUniqueWithoutPlatilloInput = {
    where: HistorialModificacionWhereUniqueInput
    update: XOR<HistorialModificacionUpdateWithoutPlatilloInput, HistorialModificacionUncheckedUpdateWithoutPlatilloInput>
    create: XOR<HistorialModificacionCreateWithoutPlatilloInput, HistorialModificacionUncheckedCreateWithoutPlatilloInput>
  }

  export type HistorialModificacionUpdateWithWhereUniqueWithoutPlatilloInput = {
    where: HistorialModificacionWhereUniqueInput
    data: XOR<HistorialModificacionUpdateWithoutPlatilloInput, HistorialModificacionUncheckedUpdateWithoutPlatilloInput>
  }

  export type HistorialModificacionUpdateManyWithWhereWithoutPlatilloInput = {
    where: HistorialModificacionScalarWhereInput
    data: XOR<HistorialModificacionUpdateManyMutationInput, HistorialModificacionUncheckedUpdateManyWithoutPlatilloInput>
  }

  export type UsuarioCreateWithoutHistorialResponsableInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutHistorialResponsableInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutHistorialResponsableInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutHistorialResponsableInput, UsuarioUncheckedCreateWithoutHistorialResponsableInput>
  }

  export type UsuarioCreateWithoutHistorialModificacionesInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutHistorialModificacionesInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutHistorialModificacionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutHistorialModificacionesInput, UsuarioUncheckedCreateWithoutHistorialModificacionesInput>
  }

  export type PlatilloCreateWithoutHistorialModificacionesInput = {
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    categoria: CategoriaCreateNestedOneWithoutPlatillosInput
  }

  export type PlatilloUncheckedCreateWithoutHistorialModificacionesInput = {
    id?: number
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
    categoriaId: number
  }

  export type PlatilloCreateOrConnectWithoutHistorialModificacionesInput = {
    where: PlatilloWhereUniqueInput
    create: XOR<PlatilloCreateWithoutHistorialModificacionesInput, PlatilloUncheckedCreateWithoutHistorialModificacionesInput>
  }

  export type UsuarioUpsertWithoutHistorialResponsableInput = {
    update: XOR<UsuarioUpdateWithoutHistorialResponsableInput, UsuarioUncheckedUpdateWithoutHistorialResponsableInput>
    create: XOR<UsuarioCreateWithoutHistorialResponsableInput, UsuarioUncheckedCreateWithoutHistorialResponsableInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutHistorialResponsableInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutHistorialResponsableInput, UsuarioUncheckedUpdateWithoutHistorialResponsableInput>
  }

  export type UsuarioUpdateWithoutHistorialResponsableInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutHistorialResponsableInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUpsertWithoutHistorialModificacionesInput = {
    update: XOR<UsuarioUpdateWithoutHistorialModificacionesInput, UsuarioUncheckedUpdateWithoutHistorialModificacionesInput>
    create: XOR<UsuarioCreateWithoutHistorialModificacionesInput, UsuarioUncheckedCreateWithoutHistorialModificacionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutHistorialModificacionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutHistorialModificacionesInput, UsuarioUncheckedUpdateWithoutHistorialModificacionesInput>
  }

  export type UsuarioUpdateWithoutHistorialModificacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutHistorialModificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type PlatilloUpsertWithoutHistorialModificacionesInput = {
    update: XOR<PlatilloUpdateWithoutHistorialModificacionesInput, PlatilloUncheckedUpdateWithoutHistorialModificacionesInput>
    create: XOR<PlatilloCreateWithoutHistorialModificacionesInput, PlatilloUncheckedCreateWithoutHistorialModificacionesInput>
    where?: PlatilloWhereInput
  }

  export type PlatilloUpdateToOneWithWhereWithoutHistorialModificacionesInput = {
    where?: PlatilloWhereInput
    data: XOR<PlatilloUpdateWithoutHistorialModificacionesInput, PlatilloUncheckedUpdateWithoutHistorialModificacionesInput>
  }

  export type PlatilloUpdateWithoutHistorialModificacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutPlatillosNestedInput
  }

  export type PlatilloUncheckedUpdateWithoutHistorialModificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    categoriaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaCreateWithoutMesaInput = {
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReservaUncheckedCreateWithoutMesaInput = {
    id?: number
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReservaCreateOrConnectWithoutMesaInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput>
  }

  export type ReservaCreateManyMesaInputEnvelope = {
    data: ReservaCreateManyMesaInput | ReservaCreateManyMesaInput[]
    skipDuplicates?: boolean
  }

  export type ReservaUpsertWithWhereUniqueWithoutMesaInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutMesaInput, ReservaUncheckedUpdateWithoutMesaInput>
    create: XOR<ReservaCreateWithoutMesaInput, ReservaUncheckedCreateWithoutMesaInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutMesaInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutMesaInput, ReservaUncheckedUpdateWithoutMesaInput>
  }

  export type ReservaUpdateManyWithWhereWithoutMesaInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutMesaInput>
  }

  export type ReservaScalarWhereInput = {
    AND?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    OR?: ReservaScalarWhereInput[]
    NOT?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    id?: IntFilter<"Reserva"> | number
    mesaId?: IntFilter<"Reserva"> | number
    fechaHora?: DateTimeFilter<"Reserva"> | Date | string
    hastaHora?: DateTimeFilter<"Reserva"> | Date | string
    nombre?: StringFilter<"Reserva"> | string
    telefono?: StringFilter<"Reserva"> | string
    email?: StringFilter<"Reserva"> | string
    nota?: StringNullableFilter<"Reserva"> | string | null
    monto?: DecimalFilter<"Reserva"> | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFilter<"Reserva"> | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFilter<"Reserva"> | $Enums.PagoEstado
    pagoMetodo?: StringFilter<"Reserva"> | string
    pagoReferencia?: StringNullableFilter<"Reserva"> | string | null
    pagadoEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    canceladaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundEstado?: EnumRefundEstadoFilter<"Reserva"> | $Enums.RefundEstado
    refundMonto?: DecimalNullableFilter<"Reserva"> | Decimal | DecimalJsLike | number | string | null
    refundEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    refundMotivo?: StringNullableFilter<"Reserva"> | string | null
    verificadaPorMeseroId?: IntNullableFilter<"Reserva"> | number | null
    verificadaEn?: DateTimeNullableFilter<"Reserva"> | Date | string | null
    aplicadoEnOrdenId?: IntNullableFilter<"Reserva"> | number | null
    aplicadoEnPagoId?: IntNullableFilter<"Reserva"> | number | null
    creadoEn?: DateTimeFilter<"Reserva"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reserva"> | Date | string
  }

  export type MesaCreateWithoutReservasInput = {
    numero: number
    capacidad: number
    estado?: $Enums.MesaEstado
    reservadaPor?: string | null
    activa?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type MesaUncheckedCreateWithoutReservasInput = {
    id?: number
    numero: number
    capacidad: number
    estado?: $Enums.MesaEstado
    reservadaPor?: string | null
    activa?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type MesaCreateOrConnectWithoutReservasInput = {
    where: MesaWhereUniqueInput
    create: XOR<MesaCreateWithoutReservasInput, MesaUncheckedCreateWithoutReservasInput>
  }

  export type MesaUpsertWithoutReservasInput = {
    update: XOR<MesaUpdateWithoutReservasInput, MesaUncheckedUpdateWithoutReservasInput>
    create: XOR<MesaCreateWithoutReservasInput, MesaUncheckedCreateWithoutReservasInput>
    where?: MesaWhereInput
  }

  export type MesaUpdateToOneWithWhereWithoutReservasInput = {
    where?: MesaWhereInput
    data: XOR<MesaUpdateWithoutReservasInput, MesaUncheckedUpdateWithoutReservasInput>
  }

  export type MesaUpdateWithoutReservasInput = {
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MesaUncheckedUpdateWithoutReservasInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: IntFieldUpdateOperationsInput | number
    capacidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumMesaEstadoFieldUpdateOperationsInput | $Enums.MesaEstado
    reservadaPor?: NullableStringFieldUpdateOperationsInput | string | null
    activa?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateWithoutOrdenesMeseroInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutOrdenesMeseroInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutOrdenesMeseroInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutOrdenesMeseroInput, UsuarioUncheckedCreateWithoutOrdenesMeseroInput>
  }

  export type OrdenItemCreateWithoutOrdenInput = {
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    chef?: UsuarioCreateNestedOneWithoutItemsAsignadosInput
    bartender?: UsuarioCreateNestedOneWithoutItemsBarraAsignadosInput
    ticket?: TicketVentaCreateNestedOneWithoutItemsInput
  }

  export type OrdenItemUncheckedCreateWithoutOrdenInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    chefId?: number | null
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemCreateOrConnectWithoutOrdenInput = {
    where: OrdenItemWhereUniqueInput
    create: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput>
  }

  export type OrdenItemCreateManyOrdenInputEnvelope = {
    data: OrdenItemCreateManyOrdenInput | OrdenItemCreateManyOrdenInput[]
    skipDuplicates?: boolean
  }

  export type TicketVentaCreateWithoutOrdenInput = {
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    cajero?: UsuarioCreateNestedOneWithoutTicketsCobradosInput
    anuladoPor?: UsuarioCreateNestedOneWithoutTicketsAnuladosInput
    items?: OrdenItemCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaUncheckedCreateWithoutOrdenInput = {
    id?: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    items?: OrdenItemUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketVentaCreateOrConnectWithoutOrdenInput = {
    where: TicketVentaWhereUniqueInput
    create: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput>
  }

  export type TicketVentaCreateManyOrdenInputEnvelope = {
    data: TicketVentaCreateManyOrdenInput | TicketVentaCreateManyOrdenInput[]
    skipDuplicates?: boolean
  }

  export type PedidoClienteCreateWithoutOrdenInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutOrdenInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutOrdenInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
  }

  export type MeseroNotifCreateWithoutOrdenInput = {
    creadoEn?: Date | string
    visto?: boolean
    itemNombre: string
    tipo: string
    mesero?: UsuarioCreateNestedOneWithoutMeseroNotifsInput
  }

  export type MeseroNotifUncheckedCreateWithoutOrdenInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    itemNombre: string
    tipo: string
    meseroId?: number | null
  }

  export type MeseroNotifCreateOrConnectWithoutOrdenInput = {
    where: MeseroNotifWhereUniqueInput
    create: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput>
  }

  export type MeseroNotifCreateManyOrdenInputEnvelope = {
    data: MeseroNotifCreateManyOrdenInput | MeseroNotifCreateManyOrdenInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutOrdenesMeseroInput = {
    update: XOR<UsuarioUpdateWithoutOrdenesMeseroInput, UsuarioUncheckedUpdateWithoutOrdenesMeseroInput>
    create: XOR<UsuarioCreateWithoutOrdenesMeseroInput, UsuarioUncheckedCreateWithoutOrdenesMeseroInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutOrdenesMeseroInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutOrdenesMeseroInput, UsuarioUncheckedUpdateWithoutOrdenesMeseroInput>
  }

  export type UsuarioUpdateWithoutOrdenesMeseroInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutOrdenesMeseroInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type OrdenItemUpsertWithWhereUniqueWithoutOrdenInput = {
    where: OrdenItemWhereUniqueInput
    update: XOR<OrdenItemUpdateWithoutOrdenInput, OrdenItemUncheckedUpdateWithoutOrdenInput>
    create: XOR<OrdenItemCreateWithoutOrdenInput, OrdenItemUncheckedCreateWithoutOrdenInput>
  }

  export type OrdenItemUpdateWithWhereUniqueWithoutOrdenInput = {
    where: OrdenItemWhereUniqueInput
    data: XOR<OrdenItemUpdateWithoutOrdenInput, OrdenItemUncheckedUpdateWithoutOrdenInput>
  }

  export type OrdenItemUpdateManyWithWhereWithoutOrdenInput = {
    where: OrdenItemScalarWhereInput
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyWithoutOrdenInput>
  }

  export type TicketVentaUpsertWithWhereUniqueWithoutOrdenInput = {
    where: TicketVentaWhereUniqueInput
    update: XOR<TicketVentaUpdateWithoutOrdenInput, TicketVentaUncheckedUpdateWithoutOrdenInput>
    create: XOR<TicketVentaCreateWithoutOrdenInput, TicketVentaUncheckedCreateWithoutOrdenInput>
  }

  export type TicketVentaUpdateWithWhereUniqueWithoutOrdenInput = {
    where: TicketVentaWhereUniqueInput
    data: XOR<TicketVentaUpdateWithoutOrdenInput, TicketVentaUncheckedUpdateWithoutOrdenInput>
  }

  export type TicketVentaUpdateManyWithWhereWithoutOrdenInput = {
    where: TicketVentaScalarWhereInput
    data: XOR<TicketVentaUpdateManyMutationInput, TicketVentaUncheckedUpdateManyWithoutOrdenInput>
  }

  export type PedidoClienteUpsertWithoutOrdenInput = {
    update: XOR<PedidoClienteUpdateWithoutOrdenInput, PedidoClienteUncheckedUpdateWithoutOrdenInput>
    create: XOR<PedidoClienteCreateWithoutOrdenInput, PedidoClienteUncheckedCreateWithoutOrdenInput>
    where?: PedidoClienteWhereInput
  }

  export type PedidoClienteUpdateToOneWithWhereWithoutOrdenInput = {
    where?: PedidoClienteWhereInput
    data: XOR<PedidoClienteUpdateWithoutOrdenInput, PedidoClienteUncheckedUpdateWithoutOrdenInput>
  }

  export type PedidoClienteUpdateWithoutOrdenInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type MeseroNotifUpsertWithWhereUniqueWithoutOrdenInput = {
    where: MeseroNotifWhereUniqueInput
    update: XOR<MeseroNotifUpdateWithoutOrdenInput, MeseroNotifUncheckedUpdateWithoutOrdenInput>
    create: XOR<MeseroNotifCreateWithoutOrdenInput, MeseroNotifUncheckedCreateWithoutOrdenInput>
  }

  export type MeseroNotifUpdateWithWhereUniqueWithoutOrdenInput = {
    where: MeseroNotifWhereUniqueInput
    data: XOR<MeseroNotifUpdateWithoutOrdenInput, MeseroNotifUncheckedUpdateWithoutOrdenInput>
  }

  export type MeseroNotifUpdateManyWithWhereWithoutOrdenInput = {
    where: MeseroNotifScalarWhereInput
    data: XOR<MeseroNotifUpdateManyMutationInput, MeseroNotifUncheckedUpdateManyWithoutOrdenInput>
  }

  export type OrdenCreateWithoutItemsInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    mesero?: UsuarioCreateNestedOneWithoutOrdenesMeseroInput
    tickets?: TicketVentaCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUncheckedCreateWithoutItemsInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    tickets?: TicketVentaUncheckedCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput
  }

  export type OrdenCreateOrConnectWithoutItemsInput = {
    where: OrdenWhereUniqueInput
    create: XOR<OrdenCreateWithoutItemsInput, OrdenUncheckedCreateWithoutItemsInput>
  }

  export type UsuarioCreateWithoutItemsAsignadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutItemsAsignadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutItemsAsignadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutItemsAsignadosInput, UsuarioUncheckedCreateWithoutItemsAsignadosInput>
  }

  export type UsuarioCreateWithoutItemsBarraAsignadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutItemsBarraAsignadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutItemsBarraAsignadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutItemsBarraAsignadosInput, UsuarioUncheckedCreateWithoutItemsBarraAsignadosInput>
  }

  export type TicketVentaCreateWithoutItemsInput = {
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
    orden: OrdenCreateNestedOneWithoutTicketsInput
    cajero?: UsuarioCreateNestedOneWithoutTicketsCobradosInput
    anuladoPor?: UsuarioCreateNestedOneWithoutTicketsAnuladosInput
  }

  export type TicketVentaUncheckedCreateWithoutItemsInput = {
    id?: number
    ordenId: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
  }

  export type TicketVentaCreateOrConnectWithoutItemsInput = {
    where: TicketVentaWhereUniqueInput
    create: XOR<TicketVentaCreateWithoutItemsInput, TicketVentaUncheckedCreateWithoutItemsInput>
  }

  export type OrdenUpsertWithoutItemsInput = {
    update: XOR<OrdenUpdateWithoutItemsInput, OrdenUncheckedUpdateWithoutItemsInput>
    create: XOR<OrdenCreateWithoutItemsInput, OrdenUncheckedCreateWithoutItemsInput>
    where?: OrdenWhereInput
  }

  export type OrdenUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrdenWhereInput
    data: XOR<OrdenUpdateWithoutItemsInput, OrdenUncheckedUpdateWithoutItemsInput>
  }

  export type OrdenUpdateWithoutItemsInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    mesero?: UsuarioUpdateOneWithoutOrdenesMeseroNestedInput
    tickets?: TicketVentaUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    tickets?: TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput
  }

  export type UsuarioUpsertWithoutItemsAsignadosInput = {
    update: XOR<UsuarioUpdateWithoutItemsAsignadosInput, UsuarioUncheckedUpdateWithoutItemsAsignadosInput>
    create: XOR<UsuarioCreateWithoutItemsAsignadosInput, UsuarioUncheckedCreateWithoutItemsAsignadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutItemsAsignadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutItemsAsignadosInput, UsuarioUncheckedUpdateWithoutItemsAsignadosInput>
  }

  export type UsuarioUpdateWithoutItemsAsignadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutItemsAsignadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUpsertWithoutItemsBarraAsignadosInput = {
    update: XOR<UsuarioUpdateWithoutItemsBarraAsignadosInput, UsuarioUncheckedUpdateWithoutItemsBarraAsignadosInput>
    create: XOR<UsuarioCreateWithoutItemsBarraAsignadosInput, UsuarioUncheckedCreateWithoutItemsBarraAsignadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutItemsBarraAsignadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutItemsBarraAsignadosInput, UsuarioUncheckedUpdateWithoutItemsBarraAsignadosInput>
  }

  export type UsuarioUpdateWithoutItemsBarraAsignadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutItemsBarraAsignadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type TicketVentaUpsertWithoutItemsInput = {
    update: XOR<TicketVentaUpdateWithoutItemsInput, TicketVentaUncheckedUpdateWithoutItemsInput>
    create: XOR<TicketVentaCreateWithoutItemsInput, TicketVentaUncheckedCreateWithoutItemsInput>
    where?: TicketVentaWhereInput
  }

  export type TicketVentaUpdateToOneWithWhereWithoutItemsInput = {
    where?: TicketVentaWhereInput
    data: XOR<TicketVentaUpdateWithoutItemsInput, TicketVentaUncheckedUpdateWithoutItemsInput>
  }

  export type TicketVentaUpdateWithoutItemsInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: OrdenUpdateOneRequiredWithoutTicketsNestedInput
    cajero?: UsuarioUpdateOneWithoutTicketsCobradosNestedInput
    anuladoPor?: UsuarioUpdateOneWithoutTicketsAnuladosNestedInput
  }

  export type TicketVentaUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioCreateWithoutCocinaEstadoInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutCocinaEstadoInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutCocinaEstadoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCocinaEstadoInput, UsuarioUncheckedCreateWithoutCocinaEstadoInput>
  }

  export type UsuarioUpsertWithoutCocinaEstadoInput = {
    update: XOR<UsuarioUpdateWithoutCocinaEstadoInput, UsuarioUncheckedUpdateWithoutCocinaEstadoInput>
    create: XOR<UsuarioCreateWithoutCocinaEstadoInput, UsuarioUncheckedCreateWithoutCocinaEstadoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCocinaEstadoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCocinaEstadoInput, UsuarioUncheckedUpdateWithoutCocinaEstadoInput>
  }

  export type UsuarioUpdateWithoutCocinaEstadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCocinaEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioCreateWithoutBarraEstadoInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutBarraEstadoInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutBarraEstadoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutBarraEstadoInput, UsuarioUncheckedCreateWithoutBarraEstadoInput>
  }

  export type UsuarioUpsertWithoutBarraEstadoInput = {
    update: XOR<UsuarioUpdateWithoutBarraEstadoInput, UsuarioUncheckedUpdateWithoutBarraEstadoInput>
    create: XOR<UsuarioCreateWithoutBarraEstadoInput, UsuarioUncheckedCreateWithoutBarraEstadoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutBarraEstadoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutBarraEstadoInput, UsuarioUncheckedUpdateWithoutBarraEstadoInput>
  }

  export type UsuarioUpdateWithoutBarraEstadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutBarraEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type OrdenCreateWithoutTicketsInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    mesero?: UsuarioCreateNestedOneWithoutOrdenesMeseroInput
    items?: OrdenItemCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUncheckedCreateWithoutTicketsInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemUncheckedCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput
    notifs?: MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput
  }

  export type OrdenCreateOrConnectWithoutTicketsInput = {
    where: OrdenWhereUniqueInput
    create: XOR<OrdenCreateWithoutTicketsInput, OrdenUncheckedCreateWithoutTicketsInput>
  }

  export type UsuarioCreateWithoutTicketsCobradosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutTicketsCobradosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutTicketsCobradosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTicketsCobradosInput, UsuarioUncheckedCreateWithoutTicketsCobradosInput>
  }

  export type UsuarioCreateWithoutTicketsAnuladosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutTicketsAnuladosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutTicketsAnuladosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTicketsAnuladosInput, UsuarioUncheckedCreateWithoutTicketsAnuladosInput>
  }

  export type OrdenItemCreateWithoutTicketInput = {
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    orden: OrdenCreateNestedOneWithoutItemsInput
    chef?: UsuarioCreateNestedOneWithoutItemsAsignadosInput
    bartender?: UsuarioCreateNestedOneWithoutItemsBarraAsignadosInput
  }

  export type OrdenItemUncheckedCreateWithoutTicketInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    bartenderId?: number | null
  }

  export type OrdenItemCreateOrConnectWithoutTicketInput = {
    where: OrdenItemWhereUniqueInput
    create: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput>
  }

  export type OrdenItemCreateManyTicketInputEnvelope = {
    data: OrdenItemCreateManyTicketInput | OrdenItemCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type OrdenUpsertWithoutTicketsInput = {
    update: XOR<OrdenUpdateWithoutTicketsInput, OrdenUncheckedUpdateWithoutTicketsInput>
    create: XOR<OrdenCreateWithoutTicketsInput, OrdenUncheckedCreateWithoutTicketsInput>
    where?: OrdenWhereInput
  }

  export type OrdenUpdateToOneWithWhereWithoutTicketsInput = {
    where?: OrdenWhereInput
    data: XOR<OrdenUpdateWithoutTicketsInput, OrdenUncheckedUpdateWithoutTicketsInput>
  }

  export type OrdenUpdateWithoutTicketsInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    mesero?: UsuarioUpdateOneWithoutOrdenesMeseroNestedInput
    items?: OrdenItemUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateWithoutTicketsInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput
  }

  export type UsuarioUpsertWithoutTicketsCobradosInput = {
    update: XOR<UsuarioUpdateWithoutTicketsCobradosInput, UsuarioUncheckedUpdateWithoutTicketsCobradosInput>
    create: XOR<UsuarioCreateWithoutTicketsCobradosInput, UsuarioUncheckedCreateWithoutTicketsCobradosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutTicketsCobradosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutTicketsCobradosInput, UsuarioUncheckedUpdateWithoutTicketsCobradosInput>
  }

  export type UsuarioUpdateWithoutTicketsCobradosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTicketsCobradosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUpsertWithoutTicketsAnuladosInput = {
    update: XOR<UsuarioUpdateWithoutTicketsAnuladosInput, UsuarioUncheckedUpdateWithoutTicketsAnuladosInput>
    create: XOR<UsuarioCreateWithoutTicketsAnuladosInput, UsuarioUncheckedCreateWithoutTicketsAnuladosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutTicketsAnuladosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutTicketsAnuladosInput, UsuarioUncheckedUpdateWithoutTicketsAnuladosInput>
  }

  export type UsuarioUpdateWithoutTicketsAnuladosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTicketsAnuladosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type OrdenItemUpsertWithWhereUniqueWithoutTicketInput = {
    where: OrdenItemWhereUniqueInput
    update: XOR<OrdenItemUpdateWithoutTicketInput, OrdenItemUncheckedUpdateWithoutTicketInput>
    create: XOR<OrdenItemCreateWithoutTicketInput, OrdenItemUncheckedCreateWithoutTicketInput>
  }

  export type OrdenItemUpdateWithWhereUniqueWithoutTicketInput = {
    where: OrdenItemWhereUniqueInput
    data: XOR<OrdenItemUpdateWithoutTicketInput, OrdenItemUncheckedUpdateWithoutTicketInput>
  }

  export type OrdenItemUpdateManyWithWhereWithoutTicketInput = {
    where: OrdenItemScalarWhereInput
    data: XOR<OrdenItemUpdateManyMutationInput, OrdenItemUncheckedUpdateManyWithoutTicketInput>
  }

  export type UsuarioCreateWithoutEgresosSolicitadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutEgresosSolicitadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutEgresosSolicitadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEgresosSolicitadosInput, UsuarioUncheckedCreateWithoutEgresosSolicitadosInput>
  }

  export type UsuarioCreateWithoutEgresosAutorizadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutEgresosAutorizadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutEgresosAutorizadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEgresosAutorizadosInput, UsuarioUncheckedCreateWithoutEgresosAutorizadosInput>
  }

  export type UsuarioUpsertWithoutEgresosSolicitadosInput = {
    update: XOR<UsuarioUpdateWithoutEgresosSolicitadosInput, UsuarioUncheckedUpdateWithoutEgresosSolicitadosInput>
    create: XOR<UsuarioCreateWithoutEgresosSolicitadosInput, UsuarioUncheckedCreateWithoutEgresosSolicitadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEgresosSolicitadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEgresosSolicitadosInput, UsuarioUncheckedUpdateWithoutEgresosSolicitadosInput>
  }

  export type UsuarioUpdateWithoutEgresosSolicitadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEgresosSolicitadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUpsertWithoutEgresosAutorizadosInput = {
    update: XOR<UsuarioUpdateWithoutEgresosAutorizadosInput, UsuarioUncheckedUpdateWithoutEgresosAutorizadosInput>
    create: XOR<UsuarioCreateWithoutEgresosAutorizadosInput, UsuarioUncheckedCreateWithoutEgresosAutorizadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEgresosAutorizadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEgresosAutorizadosInput, UsuarioUncheckedUpdateWithoutEgresosAutorizadosInput>
  }

  export type UsuarioUpdateWithoutEgresosAutorizadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEgresosAutorizadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioCreateWithoutPedidosRepartidorInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutPedidosRepartidorInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutPedidosRepartidorInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
  }

  export type CalificacionPedidoCreateWithoutPedidoInput = {
    comida: number
    repartidor?: number | null
    atencionCliente?: number | null
    comentario?: string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type CalificacionPedidoUncheckedCreateWithoutPedidoInput = {
    id?: number
    comida: number
    repartidor?: number | null
    atencionCliente?: number | null
    comentario?: string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type CalificacionPedidoCreateOrConnectWithoutPedidoInput = {
    where: CalificacionPedidoWhereUniqueInput
    create: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type OrdenCreateWithoutPedidoClienteInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    mesero?: UsuarioCreateNestedOneWithoutOrdenesMeseroInput
    items?: OrdenItemCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaCreateNestedManyWithoutOrdenInput
    notifs?: MeseroNotifCreateNestedManyWithoutOrdenInput
  }

  export type OrdenUncheckedCreateWithoutPedidoClienteInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemUncheckedCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaUncheckedCreateNestedManyWithoutOrdenInput
    notifs?: MeseroNotifUncheckedCreateNestedManyWithoutOrdenInput
  }

  export type OrdenCreateOrConnectWithoutPedidoClienteInput = {
    where: OrdenWhereUniqueInput
    create: XOR<OrdenCreateWithoutPedidoClienteInput, OrdenUncheckedCreateWithoutPedidoClienteInput>
  }

  export type PedidoClienteItemCreateWithoutPedidoInput = {
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
  }

  export type PedidoClienteItemUncheckedCreateWithoutPedidoInput = {
    id?: number
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
  }

  export type PedidoClienteItemCreateOrConnectWithoutPedidoInput = {
    where: PedidoClienteItemWhereUniqueInput
    create: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput>
  }

  export type PedidoClienteItemCreateManyPedidoInputEnvelope = {
    data: PedidoClienteItemCreateManyPedidoInput | PedidoClienteItemCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type ObservacionEntregaCreateWithoutPedidoInput = {
    texto: string
    createdAt?: Date | string
    repartidor: UsuarioCreateNestedOneWithoutObservacionesEntregaInput
  }

  export type ObservacionEntregaUncheckedCreateWithoutPedidoInput = {
    id?: number
    repartidorId: number
    texto: string
    createdAt?: Date | string
  }

  export type ObservacionEntregaCreateOrConnectWithoutPedidoInput = {
    where: ObservacionEntregaWhereUniqueInput
    create: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput>
  }

  export type ObservacionEntregaCreateManyPedidoInputEnvelope = {
    data: ObservacionEntregaCreateManyPedidoInput | ObservacionEntregaCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type RepartidorNotifCreateWithoutPedidoInput = {
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidor?: UsuarioCreateNestedOneWithoutRepartidorNotifsInput
  }

  export type RepartidorNotifUncheckedCreateWithoutPedidoInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidorId?: number | null
  }

  export type RepartidorNotifCreateOrConnectWithoutPedidoInput = {
    where: RepartidorNotifWhereUniqueInput
    create: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput>
  }

  export type RepartidorNotifCreateManyPedidoInputEnvelope = {
    data: RepartidorNotifCreateManyPedidoInput | RepartidorNotifCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutPedidosRepartidorInput = {
    update: XOR<UsuarioUpdateWithoutPedidosRepartidorInput, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
    create: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPedidosRepartidorInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPedidosRepartidorInput, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
  }

  export type UsuarioUpdateWithoutPedidosRepartidorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPedidosRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type CalificacionPedidoUpsertWithoutPedidoInput = {
    update: XOR<CalificacionPedidoUpdateWithoutPedidoInput, CalificacionPedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<CalificacionPedidoCreateWithoutPedidoInput, CalificacionPedidoUncheckedCreateWithoutPedidoInput>
    where?: CalificacionPedidoWhereInput
  }

  export type CalificacionPedidoUpdateToOneWithWhereWithoutPedidoInput = {
    where?: CalificacionPedidoWhereInput
    data: XOR<CalificacionPedidoUpdateWithoutPedidoInput, CalificacionPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type CalificacionPedidoUpdateWithoutPedidoInput = {
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionPedidoUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    comida?: IntFieldUpdateOperationsInput | number
    repartidor?: NullableIntFieldUpdateOperationsInput | number | null
    atencionCliente?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    comidaOpciones?: NullableJsonNullValueInput | InputJsonValue
    repartidorOpciones?: NullableJsonNullValueInput | InputJsonValue
    atencionOpciones?: NullableJsonNullValueInput | InputJsonValue
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrdenUpsertWithoutPedidoClienteInput = {
    update: XOR<OrdenUpdateWithoutPedidoClienteInput, OrdenUncheckedUpdateWithoutPedidoClienteInput>
    create: XOR<OrdenCreateWithoutPedidoClienteInput, OrdenUncheckedCreateWithoutPedidoClienteInput>
    where?: OrdenWhereInput
  }

  export type OrdenUpdateToOneWithWhereWithoutPedidoClienteInput = {
    where?: OrdenWhereInput
    data: XOR<OrdenUpdateWithoutPedidoClienteInput, OrdenUncheckedUpdateWithoutPedidoClienteInput>
  }

  export type OrdenUpdateWithoutPedidoClienteInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    mesero?: UsuarioUpdateOneWithoutOrdenesMeseroNestedInput
    items?: OrdenItemUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUpdateManyWithoutOrdenNestedInput
    notifs?: MeseroNotifUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateWithoutPedidoClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput
    notifs?: MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput
  }

  export type PedidoClienteItemUpsertWithWhereUniqueWithoutPedidoInput = {
    where: PedidoClienteItemWhereUniqueInput
    update: XOR<PedidoClienteItemUpdateWithoutPedidoInput, PedidoClienteItemUncheckedUpdateWithoutPedidoInput>
    create: XOR<PedidoClienteItemCreateWithoutPedidoInput, PedidoClienteItemUncheckedCreateWithoutPedidoInput>
  }

  export type PedidoClienteItemUpdateWithWhereUniqueWithoutPedidoInput = {
    where: PedidoClienteItemWhereUniqueInput
    data: XOR<PedidoClienteItemUpdateWithoutPedidoInput, PedidoClienteItemUncheckedUpdateWithoutPedidoInput>
  }

  export type PedidoClienteItemUpdateManyWithWhereWithoutPedidoInput = {
    where: PedidoClienteItemScalarWhereInput
    data: XOR<PedidoClienteItemUpdateManyMutationInput, PedidoClienteItemUncheckedUpdateManyWithoutPedidoInput>
  }

  export type PedidoClienteItemScalarWhereInput = {
    AND?: PedidoClienteItemScalarWhereInput | PedidoClienteItemScalarWhereInput[]
    OR?: PedidoClienteItemScalarWhereInput[]
    NOT?: PedidoClienteItemScalarWhereInput | PedidoClienteItemScalarWhereInput[]
    id?: IntFilter<"PedidoClienteItem"> | number
    pedidoId?: IntFilter<"PedidoClienteItem"> | number
    platilloId?: IntFilter<"PedidoClienteItem"> | number
    nombre?: StringFilter<"PedidoClienteItem"> | string
    precio?: FloatFilter<"PedidoClienteItem"> | number
    qty?: IntFilter<"PedidoClienteItem"> | number
    nota?: StringNullableFilter<"PedidoClienteItem"> | string | null
  }

  export type ObservacionEntregaUpsertWithWhereUniqueWithoutPedidoInput = {
    where: ObservacionEntregaWhereUniqueInput
    update: XOR<ObservacionEntregaUpdateWithoutPedidoInput, ObservacionEntregaUncheckedUpdateWithoutPedidoInput>
    create: XOR<ObservacionEntregaCreateWithoutPedidoInput, ObservacionEntregaUncheckedCreateWithoutPedidoInput>
  }

  export type ObservacionEntregaUpdateWithWhereUniqueWithoutPedidoInput = {
    where: ObservacionEntregaWhereUniqueInput
    data: XOR<ObservacionEntregaUpdateWithoutPedidoInput, ObservacionEntregaUncheckedUpdateWithoutPedidoInput>
  }

  export type ObservacionEntregaUpdateManyWithWhereWithoutPedidoInput = {
    where: ObservacionEntregaScalarWhereInput
    data: XOR<ObservacionEntregaUpdateManyMutationInput, ObservacionEntregaUncheckedUpdateManyWithoutPedidoInput>
  }

  export type RepartidorNotifUpsertWithWhereUniqueWithoutPedidoInput = {
    where: RepartidorNotifWhereUniqueInput
    update: XOR<RepartidorNotifUpdateWithoutPedidoInput, RepartidorNotifUncheckedUpdateWithoutPedidoInput>
    create: XOR<RepartidorNotifCreateWithoutPedidoInput, RepartidorNotifUncheckedCreateWithoutPedidoInput>
  }

  export type RepartidorNotifUpdateWithWhereUniqueWithoutPedidoInput = {
    where: RepartidorNotifWhereUniqueInput
    data: XOR<RepartidorNotifUpdateWithoutPedidoInput, RepartidorNotifUncheckedUpdateWithoutPedidoInput>
  }

  export type RepartidorNotifUpdateManyWithWhereWithoutPedidoInput = {
    where: RepartidorNotifScalarWhereInput
    data: XOR<RepartidorNotifUpdateManyMutationInput, RepartidorNotifUncheckedUpdateManyWithoutPedidoInput>
  }

  export type PedidoClienteCreateWithoutObservacionesInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutObservacionesInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutObservacionesInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutObservacionesInput, PedidoClienteUncheckedCreateWithoutObservacionesInput>
  }

  export type UsuarioCreateWithoutObservacionesEntregaInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutObservacionesEntregaInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutObservacionesEntregaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutObservacionesEntregaInput, UsuarioUncheckedCreateWithoutObservacionesEntregaInput>
  }

  export type PedidoClienteUpsertWithoutObservacionesInput = {
    update: XOR<PedidoClienteUpdateWithoutObservacionesInput, PedidoClienteUncheckedUpdateWithoutObservacionesInput>
    create: XOR<PedidoClienteCreateWithoutObservacionesInput, PedidoClienteUncheckedCreateWithoutObservacionesInput>
    where?: PedidoClienteWhereInput
  }

  export type PedidoClienteUpdateToOneWithWhereWithoutObservacionesInput = {
    where?: PedidoClienteWhereInput
    data: XOR<PedidoClienteUpdateWithoutObservacionesInput, PedidoClienteUncheckedUpdateWithoutObservacionesInput>
  }

  export type PedidoClienteUpdateWithoutObservacionesInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutObservacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type UsuarioUpsertWithoutObservacionesEntregaInput = {
    update: XOR<UsuarioUpdateWithoutObservacionesEntregaInput, UsuarioUncheckedUpdateWithoutObservacionesEntregaInput>
    create: XOR<UsuarioCreateWithoutObservacionesEntregaInput, UsuarioUncheckedCreateWithoutObservacionesEntregaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutObservacionesEntregaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutObservacionesEntregaInput, UsuarioUncheckedUpdateWithoutObservacionesEntregaInput>
  }

  export type UsuarioUpdateWithoutObservacionesEntregaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutObservacionesEntregaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type PedidoClienteCreateWithoutItemsInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutItemsInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutItemsInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutItemsInput, PedidoClienteUncheckedCreateWithoutItemsInput>
  }

  export type PedidoClienteUpsertWithoutItemsInput = {
    update: XOR<PedidoClienteUpdateWithoutItemsInput, PedidoClienteUncheckedUpdateWithoutItemsInput>
    create: XOR<PedidoClienteCreateWithoutItemsInput, PedidoClienteUncheckedCreateWithoutItemsInput>
    where?: PedidoClienteWhereInput
  }

  export type PedidoClienteUpdateToOneWithWhereWithoutItemsInput = {
    where?: PedidoClienteWhereInput
    data: XOR<PedidoClienteUpdateWithoutItemsInput, PedidoClienteUncheckedUpdateWithoutItemsInput>
  }

  export type PedidoClienteUpdateWithoutItemsInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type OrdenCreateWithoutNotifsInput = {
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    mesero?: UsuarioCreateNestedOneWithoutOrdenesMeseroInput
    items?: OrdenItemCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteCreateNestedOneWithoutOrdenInput
  }

  export type OrdenUncheckedCreateWithoutNotifsInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    meseroId?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
    items?: OrdenItemUncheckedCreateNestedManyWithoutOrdenInput
    tickets?: TicketVentaUncheckedCreateNestedManyWithoutOrdenInput
    pedidoCliente?: PedidoClienteUncheckedCreateNestedOneWithoutOrdenInput
  }

  export type OrdenCreateOrConnectWithoutNotifsInput = {
    where: OrdenWhereUniqueInput
    create: XOR<OrdenCreateWithoutNotifsInput, OrdenUncheckedCreateWithoutNotifsInput>
  }

  export type UsuarioCreateWithoutMeseroNotifsInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutMeseroNotifsInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutMeseroNotifsInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMeseroNotifsInput, UsuarioUncheckedCreateWithoutMeseroNotifsInput>
  }

  export type OrdenUpsertWithoutNotifsInput = {
    update: XOR<OrdenUpdateWithoutNotifsInput, OrdenUncheckedUpdateWithoutNotifsInput>
    create: XOR<OrdenCreateWithoutNotifsInput, OrdenUncheckedCreateWithoutNotifsInput>
    where?: OrdenWhereInput
  }

  export type OrdenUpdateToOneWithWhereWithoutNotifsInput = {
    where?: OrdenWhereInput
    data: XOR<OrdenUpdateWithoutNotifsInput, OrdenUncheckedUpdateWithoutNotifsInput>
  }

  export type OrdenUpdateWithoutNotifsInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    mesero?: UsuarioUpdateOneWithoutOrdenesMeseroNestedInput
    items?: OrdenItemUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUpdateOneWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateWithoutNotifsInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput
  }

  export type UsuarioUpsertWithoutMeseroNotifsInput = {
    update: XOR<UsuarioUpdateWithoutMeseroNotifsInput, UsuarioUncheckedUpdateWithoutMeseroNotifsInput>
    create: XOR<UsuarioCreateWithoutMeseroNotifsInput, UsuarioUncheckedCreateWithoutMeseroNotifsInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMeseroNotifsInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMeseroNotifsInput, UsuarioUncheckedUpdateWithoutMeseroNotifsInput>
  }

  export type UsuarioUpdateWithoutMeseroNotifsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMeseroNotifsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioCreateWithoutRepartidorNotifsInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutRepartidorNotifsInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutRepartidorNotifsInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRepartidorNotifsInput, UsuarioUncheckedCreateWithoutRepartidorNotifsInput>
  }

  export type PedidoClienteCreateWithoutRepartidorNotifsInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionPedidoCreateNestedOneWithoutPedidoInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutRepartidorNotifsInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    calificacion?: CalificacionPedidoUncheckedCreateNestedOneWithoutPedidoInput
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutRepartidorNotifsInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutRepartidorNotifsInput, PedidoClienteUncheckedCreateWithoutRepartidorNotifsInput>
  }

  export type UsuarioUpsertWithoutRepartidorNotifsInput = {
    update: XOR<UsuarioUpdateWithoutRepartidorNotifsInput, UsuarioUncheckedUpdateWithoutRepartidorNotifsInput>
    create: XOR<UsuarioCreateWithoutRepartidorNotifsInput, UsuarioUncheckedCreateWithoutRepartidorNotifsInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutRepartidorNotifsInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutRepartidorNotifsInput, UsuarioUncheckedUpdateWithoutRepartidorNotifsInput>
  }

  export type UsuarioUpdateWithoutRepartidorNotifsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRepartidorNotifsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type PedidoClienteUpsertWithoutRepartidorNotifsInput = {
    update: XOR<PedidoClienteUpdateWithoutRepartidorNotifsInput, PedidoClienteUncheckedUpdateWithoutRepartidorNotifsInput>
    create: XOR<PedidoClienteCreateWithoutRepartidorNotifsInput, PedidoClienteUncheckedCreateWithoutRepartidorNotifsInput>
    where?: PedidoClienteWhereInput
  }

  export type PedidoClienteUpdateToOneWithWhereWithoutRepartidorNotifsInput = {
    where?: PedidoClienteWhereInput
    data: XOR<PedidoClienteUpdateWithoutRepartidorNotifsInput, PedidoClienteUncheckedUpdateWithoutRepartidorNotifsInput>
  }

  export type PedidoClienteUpdateWithoutRepartidorNotifsInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutRepartidorNotifsInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type UsuarioCreateWithoutCajaTurnosSolicitadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosAutorizados?: CajaTurnoCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioUncheckedCreateWithoutCajaTurnosSolicitadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedCreateNestedManyWithoutAutorizadoPorInput
  }

  export type UsuarioCreateOrConnectWithoutCajaTurnosSolicitadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedCreateWithoutCajaTurnosSolicitadosInput>
  }

  export type UsuarioCreateWithoutCajaTurnosAutorizadosInput = {
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rol: RolCreateNestedOneWithoutUsuariosInput
    permisos?: PermisoUsuarioCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoCreateNestedManyWithoutCajeroInput
  }

  export type UsuarioUncheckedCreateWithoutCajaTurnosAutorizadosInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
    rolId: number
    permisos?: PermisoUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    historialModificaciones?: HistorialModificacionUncheckedCreateNestedManyWithoutUsuarioInput
    historialResponsable?: HistorialModificacionUncheckedCreateNestedManyWithoutResponsableInput
    passwordHistory?: PasswordHistoryUncheckedCreateNestedManyWithoutUserInput
    ordenesMesero?: OrdenUncheckedCreateNestedManyWithoutMeseroInput
    itemsAsignados?: OrdenItemUncheckedCreateNestedManyWithoutChefInput
    cocinaEstado?: CocinaChefUncheckedCreateNestedOneWithoutChefInput
    itemsBarraAsignados?: OrdenItemUncheckedCreateNestedManyWithoutBartenderInput
    barraEstado?: BarraBartenderUncheckedCreateNestedOneWithoutBartenderInput
    egresosSolicitados?: EgresoCajaUncheckedCreateNestedManyWithoutCajeroInput
    egresosAutorizados?: EgresoCajaUncheckedCreateNestedManyWithoutAutorizadoPorInput
    meseroNotifs?: MeseroNotifUncheckedCreateNestedManyWithoutMeseroInput
    pedidosRepartidor?: PedidoClienteUncheckedCreateNestedManyWithoutRepartidorInput
    observacionesEntrega?: ObservacionEntregaUncheckedCreateNestedManyWithoutRepartidorInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutRepartidorInput
    ticketsCobrados?: TicketVentaUncheckedCreateNestedManyWithoutCajeroInput
    ticketsAnulados?: TicketVentaUncheckedCreateNestedManyWithoutAnuladoPorInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedCreateNestedManyWithoutCajeroInput
  }

  export type UsuarioCreateOrConnectWithoutCajaTurnosAutorizadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedCreateWithoutCajaTurnosAutorizadosInput>
  }

  export type UsuarioUpsertWithoutCajaTurnosSolicitadosInput = {
    update: XOR<UsuarioUpdateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedUpdateWithoutCajaTurnosSolicitadosInput>
    create: XOR<UsuarioCreateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedCreateWithoutCajaTurnosSolicitadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCajaTurnosSolicitadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCajaTurnosSolicitadosInput, UsuarioUncheckedUpdateWithoutCajaTurnosSolicitadosInput>
  }

  export type UsuarioUpdateWithoutCajaTurnosSolicitadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCajaTurnosSolicitadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUpsertWithoutCajaTurnosAutorizadosInput = {
    update: XOR<UsuarioUpdateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedUpdateWithoutCajaTurnosAutorizadosInput>
    create: XOR<UsuarioCreateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedCreateWithoutCajaTurnosAutorizadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCajaTurnosAutorizadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCajaTurnosAutorizadosInput, UsuarioUncheckedUpdateWithoutCajaTurnosAutorizadosInput>
  }

  export type UsuarioUpdateWithoutCajaTurnosAutorizadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rol?: RolUpdateOneRequiredWithoutUsuariosNestedInput
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCajaTurnosAutorizadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    rolId?: IntFieldUpdateOperationsInput | number
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
  }

  export type PedidoClienteCreateWithoutCalificacionInput = {
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    repartidor?: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    orden?: OrdenCreateNestedOneWithoutPedidoClienteInput
    items?: PedidoClienteItemCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteUncheckedCreateWithoutCalificacionInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    repartidorId?: number | null
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
    items?: PedidoClienteItemUncheckedCreateNestedManyWithoutPedidoInput
    observaciones?: ObservacionEntregaUncheckedCreateNestedManyWithoutPedidoInput
    repartidorNotifs?: RepartidorNotifUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoClienteCreateOrConnectWithoutCalificacionInput = {
    where: PedidoClienteWhereUniqueInput
    create: XOR<PedidoClienteCreateWithoutCalificacionInput, PedidoClienteUncheckedCreateWithoutCalificacionInput>
  }

  export type PedidoClienteUpsertWithoutCalificacionInput = {
    update: XOR<PedidoClienteUpdateWithoutCalificacionInput, PedidoClienteUncheckedUpdateWithoutCalificacionInput>
    create: XOR<PedidoClienteCreateWithoutCalificacionInput, PedidoClienteUncheckedCreateWithoutCalificacionInput>
    where?: PedidoClienteWhereInput
  }

  export type PedidoClienteUpdateToOneWithWhereWithoutCalificacionInput = {
    where?: PedidoClienteWhereInput
    data: XOR<PedidoClienteUpdateWithoutCalificacionInput, PedidoClienteUncheckedUpdateWithoutCalificacionInput>
  }

  export type PedidoClienteUpdateWithoutCalificacionInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    repartidor?: UsuarioUpdateOneWithoutPedidosRepartidorNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutCalificacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PermisoUsuarioCreateManyUsuarioInput = {
    id?: number
    permisoId: number
  }

  export type HistorialModificacionCreateManyUsuarioInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    platilloId?: number | null
  }

  export type HistorialModificacionCreateManyResponsableInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    usuarioId?: number | null
    platilloId?: number | null
  }

  export type PasswordHistoryCreateManyUserInput = {
    id?: number
    hash: string
    createdAt?: Date | string
  }

  export type OrdenCreateManyMeseroInput = {
    id?: number
    codigo?: string
    mesa: number
    fecha?: Date | string
    finishedAt?: Date | string | null
    durationSec?: number | null
    estado?: $Enums.OrdenEstado
    totalPagado?: number | null
    anticipo?: number
  }

  export type OrdenItemCreateManyChefInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type OrdenItemCreateManyBartenderInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    ticketVentaId?: number | null
  }

  export type EgresoCajaCreateManyCajeroInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    monto: number
    motivo: string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type EgresoCajaCreateManyAutorizadoPorInput = {
    id?: number
    creadoEn?: Date | string
    estado?: $Enums.EgresoEstado
    cajeroId: number
    monto: number
    motivo: string
    autorizadoEn?: Date | string | null
    observacion?: string | null
  }

  export type MeseroNotifCreateManyMeseroInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    ordenId: number
    itemNombre: string
    tipo: string
  }

  export type PedidoClienteCreateManyRepartidorInput = {
    id?: number
    codigo?: string
    clienteEmail: string
    creadoEn?: Date | string
    estado?: string
    tipoEntrega: $Enums.TipoEntrega
    metodoPago: string
    direccion?: string | null
    telefono?: string | null
    receptorNombre?: string | null
    deliveryStatus?: $Enums.DeliveryStatus
    readyAt?: Date | string | null
    assignedAt?: Date | string | null
    startedAt?: Date | string | null
    deliveredAt?: Date | string | null
    total?: number
    ordenId?: number | null
  }

  export type ObservacionEntregaCreateManyRepartidorInput = {
    id?: number
    pedidoId: number
    texto: string
    createdAt?: Date | string
  }

  export type RepartidorNotifCreateManyRepartidorInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    pedidoId?: number | null
  }

  export type TicketVentaCreateManyCajeroInput = {
    id?: number
    ordenId: number
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
  }

  export type TicketVentaCreateManyAnuladoPorInput = {
    id?: number
    ordenId: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
  }

  export type CajaTurnoCreateManyCajeroInput = {
    id?: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoPorId?: number | null
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type CajaTurnoCreateManyAutorizadoPorInput = {
    id?: number
    cajeroId: number
    estado?: $Enums.CajaTurnoEstado
    montoApertura?: number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: Date | string
    autorizadoEn?: Date | string | null
    montoCierre?: number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: Date | string | null
    cierreAutorizadoPorId?: number | null
    cierreAutorizadoEn?: Date | string | null
    cerradoEn?: Date | string | null
  }

  export type PermisoUsuarioUpdateWithoutUsuarioInput = {
    permiso?: PermisoUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type PermisoUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type HistorialModificacionUpdateWithoutUsuarioInput = {
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsable?: UsuarioUpdateOneRequiredWithoutHistorialResponsableNestedInput
    platillo?: PlatilloUpdateOneWithoutHistorialModificacionesNestedInput
  }

  export type HistorialModificacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialModificacionUpdateWithoutResponsableInput = {
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneWithoutHistorialModificacionesNestedInput
    platillo?: PlatilloUpdateOneWithoutHistorialModificacionesNestedInput
  }

  export type HistorialModificacionUncheckedUpdateWithoutResponsableInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutResponsableInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    platilloId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PasswordHistoryUpdateWithoutUserInput = {
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordHistoryUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordHistoryUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrdenUpdateWithoutMeseroInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateWithoutMeseroInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
    items?: OrdenItemUncheckedUpdateManyWithoutOrdenNestedInput
    tickets?: TicketVentaUncheckedUpdateManyWithoutOrdenNestedInput
    pedidoCliente?: PedidoClienteUncheckedUpdateOneWithoutOrdenNestedInput
    notifs?: MeseroNotifUncheckedUpdateManyWithoutOrdenNestedInput
  }

  export type OrdenUncheckedUpdateManyWithoutMeseroInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    mesa?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    finishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    durationSec?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumOrdenEstadoFieldUpdateOperationsInput | $Enums.OrdenEstado
    totalPagado?: NullableFloatFieldUpdateOperationsInput | number | null
    anticipo?: FloatFieldUpdateOperationsInput | number
  }

  export type OrdenItemUpdateWithoutChefInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    orden?: OrdenUpdateOneRequiredWithoutItemsNestedInput
    bartender?: UsuarioUpdateOneWithoutItemsBarraAsignadosNestedInput
    ticket?: TicketVentaUpdateOneWithoutItemsNestedInput
  }

  export type OrdenItemUncheckedUpdateWithoutChefInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemUncheckedUpdateManyWithoutChefInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemUpdateWithoutBartenderInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    orden?: OrdenUpdateOneRequiredWithoutItemsNestedInput
    chef?: UsuarioUpdateOneWithoutItemsAsignadosNestedInput
    ticket?: TicketVentaUpdateOneWithoutItemsNestedInput
  }

  export type OrdenItemUncheckedUpdateWithoutBartenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemUncheckedUpdateManyWithoutBartenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoCajaUpdateWithoutCajeroInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    autorizadoPor?: UsuarioUpdateOneWithoutEgresosAutorizadosNestedInput
  }

  export type EgresoCajaUncheckedUpdateWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaUncheckedUpdateManyWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaUpdateWithoutAutorizadoPorInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    cajero?: UsuarioUpdateOneRequiredWithoutEgresosSolicitadosNestedInput
  }

  export type EgresoCajaUncheckedUpdateWithoutAutorizadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    cajeroId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEgresoEstadoFieldUpdateOperationsInput | $Enums.EgresoEstado
    cajeroId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MeseroNotifUpdateWithoutMeseroInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    orden?: OrdenUpdateOneRequiredWithoutNotifsNestedInput
  }

  export type MeseroNotifUncheckedUpdateWithoutMeseroInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type MeseroNotifUncheckedUpdateManyWithoutMeseroInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type PedidoClienteUpdateWithoutRepartidorInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    calificacion?: CalificacionPedidoUpdateOneWithoutPedidoNestedInput
    orden?: OrdenUpdateOneWithoutPedidoClienteNestedInput
    items?: PedidoClienteItemUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: CalificacionPedidoUncheckedUpdateOneWithoutPedidoNestedInput
    items?: PedidoClienteItemUncheckedUpdateManyWithoutPedidoNestedInput
    observaciones?: ObservacionEntregaUncheckedUpdateManyWithoutPedidoNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoClienteUncheckedUpdateManyWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    clienteEmail?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: StringFieldUpdateOperationsInput | string
    tipoEntrega?: EnumTipoEntregaFieldUpdateOperationsInput | $Enums.TipoEntrega
    metodoPago?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    receptorNombre?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryStatus?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    readyAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: FloatFieldUpdateOperationsInput | number
    ordenId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ObservacionEntregaUpdateWithoutRepartidorInput = {
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoClienteUpdateOneRequiredWithoutObservacionesNestedInput
  }

  export type ObservacionEntregaUncheckedUpdateWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ObservacionEntregaUncheckedUpdateManyWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RepartidorNotifUpdateWithoutRepartidorInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    pedido?: PedidoClienteUpdateOneWithoutRepartidorNotifsNestedInput
  }

  export type RepartidorNotifUncheckedUpdateWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    pedidoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RepartidorNotifUncheckedUpdateManyWithoutRepartidorInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    pedidoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TicketVentaUpdateWithoutCajeroInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: OrdenUpdateOneRequiredWithoutTicketsNestedInput
    anuladoPor?: UsuarioUpdateOneWithoutTicketsAnuladosNestedInput
    items?: OrdenItemUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrdenItemUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateManyWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TicketVentaUpdateWithoutAnuladoPorInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    orden?: OrdenUpdateOneRequiredWithoutTicketsNestedInput
    cajero?: UsuarioUpdateOneWithoutTicketsCobradosNestedInput
    items?: OrdenItemUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateWithoutAnuladoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrdenItemUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateManyWithoutAnuladoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    ordenId?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CajaTurnoUpdateWithoutCajeroInput = {
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    autorizadoPor?: UsuarioUpdateOneWithoutCajaTurnosAutorizadosNestedInput
  }

  export type CajaTurnoUncheckedUpdateWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CajaTurnoUncheckedUpdateManyWithoutCajeroInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CajaTurnoUpdateWithoutAutorizadoPorInput = {
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cajero?: UsuarioUpdateOneRequiredWithoutCajaTurnosSolicitadosNestedInput
  }

  export type CajaTurnoUncheckedUpdateWithoutAutorizadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: IntFieldUpdateOperationsInput | number
    estado?: EnumCajaTurnoEstadoFieldUpdateOperationsInput | $Enums.CajaTurnoEstado
    montoApertura?: FloatFieldUpdateOperationsInput | number
    conteoInicial?: NullableJsonNullValueInput | InputJsonValue
    solicitadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    autorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    montoCierre?: NullableFloatFieldUpdateOperationsInput | number | null
    conteoFinal?: NullableJsonNullValueInput | InputJsonValue
    cierreSolicitadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cierreAutorizadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    cierreAutorizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cerradoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioCreateManyRolInput = {
    id?: number
    nombre: string
    usuario: string
    correo: string
    contrasena?: string | null
    estado?: boolean
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    debeCambiarPassword?: boolean
  }

  export type PermisoPorRolCreateManyRolInput = {
    id?: number
    permisoId: number
  }

  export type UsuarioUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    permisos?: PermisoUsuarioUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
    permisos?: PermisoUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    historialResponsable?: HistorialModificacionUncheckedUpdateManyWithoutResponsableNestedInput
    passwordHistory?: PasswordHistoryUncheckedUpdateManyWithoutUserNestedInput
    ordenesMesero?: OrdenUncheckedUpdateManyWithoutMeseroNestedInput
    itemsAsignados?: OrdenItemUncheckedUpdateManyWithoutChefNestedInput
    cocinaEstado?: CocinaChefUncheckedUpdateOneWithoutChefNestedInput
    itemsBarraAsignados?: OrdenItemUncheckedUpdateManyWithoutBartenderNestedInput
    barraEstado?: BarraBartenderUncheckedUpdateOneWithoutBartenderNestedInput
    egresosSolicitados?: EgresoCajaUncheckedUpdateManyWithoutCajeroNestedInput
    egresosAutorizados?: EgresoCajaUncheckedUpdateManyWithoutAutorizadoPorNestedInput
    meseroNotifs?: MeseroNotifUncheckedUpdateManyWithoutMeseroNestedInput
    pedidosRepartidor?: PedidoClienteUncheckedUpdateManyWithoutRepartidorNestedInput
    observacionesEntrega?: ObservacionEntregaUncheckedUpdateManyWithoutRepartidorNestedInput
    repartidorNotifs?: RepartidorNotifUncheckedUpdateManyWithoutRepartidorNestedInput
    ticketsCobrados?: TicketVentaUncheckedUpdateManyWithoutCajeroNestedInput
    ticketsAnulados?: TicketVentaUncheckedUpdateManyWithoutAnuladoPorNestedInput
    cajaTurnosSolicitados?: CajaTurnoUncheckedUpdateManyWithoutCajeroNestedInput
    cajaTurnosAutorizados?: CajaTurnoUncheckedUpdateManyWithoutAutorizadoPorNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: BoolFieldUpdateOperationsInput | boolean
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    debeCambiarPassword?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PermisoPorRolUpdateWithoutRolInput = {
    permiso?: PermisoUpdateOneRequiredWithoutRolesNestedInput
  }

  export type PermisoPorRolUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoPorRolUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    permisoId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoPorRolCreateManyPermisoInput = {
    id?: number
    rolId: number
  }

  export type PermisoUsuarioCreateManyPermisoInput = {
    id?: number
    usuarioId: number
  }

  export type PermisoPorRolUpdateWithoutPermisoInput = {
    rol?: RolUpdateOneRequiredWithoutPermisosNestedInput
  }

  export type PermisoPorRolUncheckedUpdateWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoPorRolUncheckedUpdateManyWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    rolId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoUsuarioUpdateWithoutPermisoInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutPermisosNestedInput
  }

  export type PermisoUsuarioUncheckedUpdateWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoUsuarioUncheckedUpdateManyWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type PlatilloCreateManyCategoriaInput = {
    id?: number
    nombre: string
    precio: number
    creadoEn?: Date | string
    disponible?: boolean
    imagenUrl?: string | null
  }

  export type PlatilloUpdateWithoutCategoriaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    historialModificaciones?: HistorialModificacionUpdateManyWithoutPlatilloNestedInput
  }

  export type PlatilloUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
    historialModificaciones?: HistorialModificacionUncheckedUpdateManyWithoutPlatilloNestedInput
  }

  export type PlatilloUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    disponible?: BoolFieldUpdateOperationsInput | boolean
    imagenUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistorialModificacionCreateManyPlatilloInput = {
    id?: number
    campo: string
    valorAnterior?: string | null
    valorNuevo?: string | null
    fecha?: Date | string
    accion: string
    responsableId: number
    usuarioId?: number | null
  }

  export type HistorialModificacionUpdateWithoutPlatilloInput = {
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsable?: UsuarioUpdateOneRequiredWithoutHistorialResponsableNestedInput
    usuario?: UsuarioUpdateOneWithoutHistorialModificacionesNestedInput
  }

  export type HistorialModificacionUncheckedUpdateWithoutPlatilloInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialModificacionUncheckedUpdateManyWithoutPlatilloInput = {
    id?: IntFieldUpdateOperationsInput | number
    campo?: StringFieldUpdateOperationsInput | string
    valorAnterior?: NullableStringFieldUpdateOperationsInput | string | null
    valorNuevo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    accion?: StringFieldUpdateOperationsInput | string
    responsableId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservaCreateManyMesaInput = {
    id?: number
    fechaHora: Date | string
    hastaHora: Date | string
    nombre: string
    telefono: string
    email: string
    nota?: string | null
    monto?: Decimal | DecimalJsLike | number | string
    estado?: $Enums.ReservaEstado
    pagoEstado?: $Enums.PagoEstado
    pagoMetodo?: string
    pagoReferencia?: string | null
    pagadoEn?: Date | string | null
    canceladaEn?: Date | string | null
    refundEstado?: $Enums.RefundEstado
    refundMonto?: Decimal | DecimalJsLike | number | string | null
    refundEn?: Date | string | null
    refundMotivo?: string | null
    verificadaPorMeseroId?: number | null
    verificadaEn?: Date | string | null
    aplicadoEnOrdenId?: number | null
    aplicadoEnPagoId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReservaUpdateWithoutMesaInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaUncheckedUpdateWithoutMesaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaUncheckedUpdateManyWithoutMesaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    hastaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumReservaEstadoFieldUpdateOperationsInput | $Enums.ReservaEstado
    pagoEstado?: EnumPagoEstadoFieldUpdateOperationsInput | $Enums.PagoEstado
    pagoMetodo?: StringFieldUpdateOperationsInput | string
    pagoReferencia?: NullableStringFieldUpdateOperationsInput | string | null
    pagadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceladaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundEstado?: EnumRefundEstadoFieldUpdateOperationsInput | $Enums.RefundEstado
    refundMonto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    refundEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    verificadaPorMeseroId?: NullableIntFieldUpdateOperationsInput | number | null
    verificadaEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aplicadoEnOrdenId?: NullableIntFieldUpdateOperationsInput | number | null
    aplicadoEnPagoId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrdenItemCreateManyOrdenInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    chefId?: number | null
    bartenderId?: number | null
    ticketVentaId?: number | null
  }

  export type TicketVentaCreateManyOrdenInput = {
    id?: number
    cajeroId?: number | null
    fechaPago?: Date | string
    metodoPago: $Enums.MetodoPago
    subtotal?: number
    impuestos?: number
    descuentos?: number
    totalAPagar: number
    montoRecibido: number
    cambio: number
    anticipoAplicado?: number
    propina?: number
    serie?: string | null
    numero?: string | null
    clienteNombre?: string | null
    clienteNit?: string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: $Enums.ComprobanteEstado
    anuladoEn?: Date | string | null
    anuladoPorId?: number | null
    anuladoMotivo?: string | null
    posCorrelativo?: string | null
  }

  export type MeseroNotifCreateManyOrdenInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    itemNombre: string
    tipo: string
    meseroId?: number | null
  }

  export type OrdenItemUpdateWithoutOrdenInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    chef?: UsuarioUpdateOneWithoutItemsAsignadosNestedInput
    bartender?: UsuarioUpdateOneWithoutItemsBarraAsignadosNestedInput
    ticket?: TicketVentaUpdateOneWithoutItemsNestedInput
  }

  export type OrdenItemUncheckedUpdateWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemUncheckedUpdateManyWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
    ticketVentaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TicketVentaUpdateWithoutOrdenInput = {
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    cajero?: UsuarioUpdateOneWithoutTicketsCobradosNestedInput
    anuladoPor?: UsuarioUpdateOneWithoutTicketsAnuladosNestedInput
    items?: OrdenItemUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrdenItemUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketVentaUncheckedUpdateManyWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    cajeroId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    subtotal?: FloatFieldUpdateOperationsInput | number
    impuestos?: FloatFieldUpdateOperationsInput | number
    descuentos?: FloatFieldUpdateOperationsInput | number
    totalAPagar?: FloatFieldUpdateOperationsInput | number
    montoRecibido?: FloatFieldUpdateOperationsInput | number
    cambio?: FloatFieldUpdateOperationsInput | number
    anticipoAplicado?: FloatFieldUpdateOperationsInput | number
    propina?: FloatFieldUpdateOperationsInput | number
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNombre?: NullableStringFieldUpdateOperationsInput | string | null
    clienteNit?: NullableStringFieldUpdateOperationsInput | string | null
    snapshot?: NullableJsonNullValueInput | InputJsonValue
    estado?: EnumComprobanteEstadoFieldUpdateOperationsInput | $Enums.ComprobanteEstado
    anuladoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    anuladoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    anuladoMotivo?: NullableStringFieldUpdateOperationsInput | string | null
    posCorrelativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MeseroNotifUpdateWithoutOrdenInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    mesero?: UsuarioUpdateOneWithoutMeseroNotifsNestedInput
  }

  export type MeseroNotifUncheckedUpdateWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MeseroNotifUncheckedUpdateManyWithoutOrdenInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    itemNombre?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    meseroId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemCreateManyTicketInput = {
    id?: number
    nombre: string
    precio: number
    nota?: string | null
    tipo: string
    estado: string
    qty?: number
    subtotal?: number | null
    creadoEn?: Date | string
    asignadoEn?: Date | string | null
    preparandoEn?: Date | string | null
    finalizadoEn?: Date | string | null
    prioridad?: number | null
    pagado?: boolean
    ordenId: number
    chefId?: number | null
    bartenderId?: number | null
  }

  export type OrdenItemUpdateWithoutTicketInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    orden?: OrdenUpdateOneRequiredWithoutItemsNestedInput
    chef?: UsuarioUpdateOneWithoutItemsAsignadosNestedInput
    bartender?: UsuarioUpdateOneWithoutItemsBarraAsignadosNestedInput
  }

  export type OrdenItemUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrdenItemUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    subtotal?: NullableFloatFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    asignadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preparandoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalizadoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    pagado?: BoolFieldUpdateOperationsInput | boolean
    ordenId?: IntFieldUpdateOperationsInput | number
    chefId?: NullableIntFieldUpdateOperationsInput | number | null
    bartenderId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PedidoClienteItemCreateManyPedidoInput = {
    id?: number
    platilloId: number
    nombre: string
    precio: number
    qty?: number
    nota?: string | null
  }

  export type ObservacionEntregaCreateManyPedidoInput = {
    id?: number
    repartidorId: number
    texto: string
    createdAt?: Date | string
  }

  export type RepartidorNotifCreateManyPedidoInput = {
    id?: number
    creadoEn?: Date | string
    visto?: boolean
    tipo?: string
    titulo: string
    cuerpo?: string | null
    repartidorId?: number | null
  }

  export type PedidoClienteItemUpdateWithoutPedidoInput = {
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoClienteItemUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoClienteItemUncheckedUpdateManyWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    platilloId?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    qty?: IntFieldUpdateOperationsInput | number
    nota?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ObservacionEntregaUpdateWithoutPedidoInput = {
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    repartidor?: UsuarioUpdateOneRequiredWithoutObservacionesEntregaNestedInput
  }

  export type ObservacionEntregaUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    repartidorId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ObservacionEntregaUncheckedUpdateManyWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    repartidorId?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RepartidorNotifUpdateWithoutPedidoInput = {
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidor?: UsuarioUpdateOneWithoutRepartidorNotifsNestedInput
  }

  export type RepartidorNotifUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RepartidorNotifUncheckedUpdateManyWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    tipo?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    repartidorId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}